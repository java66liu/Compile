0:S
1:type
2:block
3:sentence
4:E
5:T
6:F
7:id_name
8:nums
9:set_value
10:left
11:loop_expression
12:bool_expression
13:op
14:H
15:forsentence
16:for_set_value
17:IncorDec
18:Inc_expression
19:Dec_expression
20:if_expression
21:ifsentence
22:inout_expression
23:printf_expression
24:expressions
25:scanf_expression
26:getaddr
27:G
28:define
29:main
30:else
31:if
32:int
33:double
34:char
35:return
36:void
37:while
38:for
39:<=
40:>=
41:==
42:!=
43:/*
44:*/
45:<
46:>
47:=
48:+
49:-
50:*
51:/
52:;
53:,
54:(
55:)
56:[
57:]
58:{
59:}
60:num
61:id
62:string
63:&
64:++
65:--
66:printf
67:scanf
68:array
S->int main ( ) { block } 
type->int 
type->double 
type->char 
block->sentence 
block->sentence block 
sentence->{ block } 
sentence->E ; 
E->E + T 
E->E - T 
E->T 
T->T * F 
T->T / F 
T->F 
F->( E ) 
F->num 
F->id 
F->array [ E ] 
sentence->return E ; 
sentence->define 
define->type id_name 
id_name->id , id_name 
id_name->id ; 
id_name->id = E ; 
id_name->array [ num ] = { nums } ; 
nums->num , nums 
nums->num 
sentence->set_value ; 
set_value->left = E 
left->id 
left->array [ E ] 
sentence->loop_expression 
loop_expression->for ( for_set_value ; bool_expression ; IncorDec ) forsentence 
bool_expression->G op H 
op->>= 
op-><= 
op->< 
op->> 
H->E 
forsentence->sentence 
for_set_value->set_value 
IncorDec->Inc_expression 
IncorDec->Dec_expression 
Inc_expression->id ++ 
Dec_expression->id -- 
sentence->if_expression 
if_expression->if ( bool_expression ) ifsentence else sentence 
ifsentence->sentence 
sentence->inout_expression 
inout_expression->printf_expression 
inout_expression->scanf_expression 
printf_expression->printf ( string ) ; 
printf_expression->printf ( string , expressions ) ; 
expressions->id , expressions 
expressions->id 
scanf_expression->scanf ( string , getaddr ) ; 
getaddr->& id 
G->E 
G->E 
符号集：
0:1 #
1:2 S
2:1 int
3:1 main
4:1 (
5:1 )
6:1 {
7:2 block
8:1 }
9:2 type
10:1 double
11:1 char
12:2 sentence
13:2 E
14:1 ;
15:1 +
16:2 T
17:1 -
18:1 *
19:2 F
20:1 /
21:1 num
22:1 id
23:1 array
24:1 [
25:1 ]
26:1 return
27:2 define
28:2 id_name
29:1 ,
30:1 =
31:2 nums
32:2 set_value
33:2 left
34:2 loop_expression
35:1 for
36:2 for_set_value
37:2 bool_expression
38:2 IncorDec
39:2 forsentence
40:2 G
41:2 op
42:2 H
43:1 >=
44:1 <=
45:1 <
46:1 >
47:2 Inc_expression
48:2 Dec_expression
49:1 ++
50:1 --
51:2 if_expression
52:1 if
53:2 ifsentence
54:1 else
55:2 inout_expression
56:2 printf_expression
57:2 scanf_expression
58:1 printf
59:1 string
60:2 expressions
61:1 scanf
62:2 getaddr
63:1 &
64:2 S'
规则集:
S->intmain(){block}
type->int
type->double
type->char
block->sentence
block->sentenceblock
sentence->{block}
sentence->E;
E->E+T
E->E-T
E->T
T->T*F
T->T/F
T->F
F->(E)
F->num
F->id
F->array[E]
sentence->returnE;
sentence->define
define->typeid_name
id_name->id,id_name
id_name->id;
id_name->id=E;
id_name->array[num]={nums};
nums->num,nums
nums->num
sentence->set_value;
set_value->left=E
left->id
left->array[E]
sentence->loop_expression
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence
bool_expression->GopH
op->>=
op-><=
op-><
op->>
H->E
forsentence->sentence
for_set_value->set_value
IncorDec->Inc_expression
IncorDec->Dec_expression
Inc_expression->id++
Dec_expression->id--
sentence->if_expression
if_expression->if(bool_expression)ifsentenceelsesentence
ifsentence->sentence
sentence->inout_expression
inout_expression->printf_expression
inout_expression->scanf_expression
printf_expression->printf(string);
printf_expression->printf(string,expressions);
expressions->id,expressions
expressions->id
scanf_expression->scanf(string,getaddr);
getaddr->&id
G->E
S'->S
项目集0:
S'->.S,#
S->.intmain(){block},#
项目集1:
S'->S,#
项目集2:
S->int.main(){block},#
项目集3:
S->intmain.(){block},#
项目集4:
S->intmain(.){block},#
项目集5:
S->intmain().{block},#
项目集6:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
S->intmain(){.block},#
项目集7:
type->int,array
type->int,id
项目集8:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目集9:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},id
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},int
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集10:
S->intmain(){block.},#
项目集11:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,id
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,int
id_name->.id=E;,scanf
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,id
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,int
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,id
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,int
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,id
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,int
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,id
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,int
项目集12:
type->double,array
type->double,id
项目集13:
type->char,array
type->char,id
项目集14:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集15:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,id
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,int
项目集16:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
E->T,+
E->T,;
项目集17:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,;
项目集18:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,;
项目集19:
left->id,=
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
项目集20:
left->array.[E],=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集21:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,id
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集22:
sentence->define,scanf
sentence->define,printf
sentence->define,if
sentence->define,for
sentence->define,return
sentence->define,array
sentence->define,id
sentence->define,num
sentence->define,/
sentence->define,*
sentence->define,-
sentence->define,+
sentence->define,char
sentence->define,double
sentence->define,}
sentence->define,{
sentence->define,(
sentence->define,int
项目集23:
sentence->set_value.;,scanf
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,id
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,int
项目集24:
set_value->left.=E,;
项目集25:
sentence->loop_expression,scanf
sentence->loop_expression,printf
sentence->loop_expression,if
sentence->loop_expression,for
sentence->loop_expression,return
sentence->loop_expression,array
sentence->loop_expression,id
sentence->loop_expression,num
sentence->loop_expression,/
sentence->loop_expression,*
sentence->loop_expression,-
sentence->loop_expression,+
sentence->loop_expression,char
sentence->loop_expression,double
sentence->loop_expression,}
sentence->loop_expression,{
sentence->loop_expression,(
sentence->loop_expression,int
项目集26:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
项目集27:
sentence->if_expression,scanf
sentence->if_expression,printf
sentence->if_expression,if
sentence->if_expression,for
sentence->if_expression,return
sentence->if_expression,array
sentence->if_expression,id
sentence->if_expression,num
sentence->if_expression,/
sentence->if_expression,*
sentence->if_expression,-
sentence->if_expression,+
sentence->if_expression,char
sentence->if_expression,double
sentence->if_expression,}
sentence->if_expression,{
sentence->if_expression,(
sentence->if_expression,int
项目集28:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,int
项目集29:
sentence->inout_expression,scanf
sentence->inout_expression,printf
sentence->inout_expression,if
sentence->inout_expression,for
sentence->inout_expression,return
sentence->inout_expression,array
sentence->inout_expression,id
sentence->inout_expression,num
sentence->inout_expression,/
sentence->inout_expression,*
sentence->inout_expression,-
sentence->inout_expression,+
sentence->inout_expression,char
sentence->inout_expression,double
sentence->inout_expression,}
sentence->inout_expression,{
sentence->inout_expression,(
sentence->inout_expression,int
项目集30:
inout_expression->printf_expression,scanf
inout_expression->printf_expression,printf
inout_expression->printf_expression,if
inout_expression->printf_expression,for
inout_expression->printf_expression,return
inout_expression->printf_expression,array
inout_expression->printf_expression,id
inout_expression->printf_expression,num
inout_expression->printf_expression,/
inout_expression->printf_expression,*
inout_expression->printf_expression,-
inout_expression->printf_expression,+
inout_expression->printf_expression,char
inout_expression->printf_expression,double
inout_expression->printf_expression,}
inout_expression->printf_expression,{
inout_expression->printf_expression,(
inout_expression->printf_expression,int
项目集31:
inout_expression->scanf_expression,scanf
inout_expression->scanf_expression,printf
inout_expression->scanf_expression,if
inout_expression->scanf_expression,for
inout_expression->scanf_expression,return
inout_expression->scanf_expression,array
inout_expression->scanf_expression,id
inout_expression->scanf_expression,num
inout_expression->scanf_expression,/
inout_expression->scanf_expression,*
inout_expression->scanf_expression,-
inout_expression->scanf_expression,+
inout_expression->scanf_expression,char
inout_expression->scanf_expression,double
inout_expression->scanf_expression,}
inout_expression->scanf_expression,{
inout_expression->scanf_expression,(
inout_expression->scanf_expression,int
项目集32:
printf_expression->printf.(string,expressions);,scanf
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,id
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,int
项目集33:
scanf_expression->scanf.(string,getaddr);,scanf
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,id
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,int
项目集34:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目集35:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集36:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
E->T,+
E->T,)
项目集37:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,)
项目集38:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,)
项目集39:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,)
项目集40:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目集41:
sentence->{block.},scanf
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},id
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},int
项目集42:
S->intmain(){block},#
项目集43:
id_name->id.=E;,scanf
id_name->id.=E;,printf
id_name->id.=E;,if
id_name->id.=E;,for
id_name->id.=E;,return
id_name->id.=E;,array
id_name->id.=E;,id
id_name->id.=E;,num
id_name->id.=E;,/
id_name->id.=E;,*
id_name->id.=E;,-
id_name->id.=E;,+
id_name->id.=E;,char
id_name->id.=E;,double
id_name->id.=E;,}
id_name->id.=E;,{
id_name->id.=E;,(
id_name->id.=E;,int
id_name->id.;,scanf
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,id
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,int
id_name->id.,id_name,scanf
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,id
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,int
项目集44:
id_name->array.[num]={nums};,scanf
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,id
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,int
项目集45:
define->typeid_name,scanf
define->typeid_name,printf
define->typeid_name,if
define->typeid_name,for
define->typeid_name,return
define->typeid_name,array
define->typeid_name,id
define->typeid_name,num
define->typeid_name,/
define->typeid_name,*
define->typeid_name,-
define->typeid_name,+
define->typeid_name,char
define->typeid_name,double
define->typeid_name,}
define->typeid_name,{
define->typeid_name,(
define->typeid_name,int
项目集46:
block->sentenceblock,}
项目集47:
sentence->E;,scanf
sentence->E;,printf
sentence->E;,if
sentence->E;,for
sentence->E;,return
sentence->E;,array
sentence->E;,id
sentence->E;,num
sentence->E;,/
sentence->E;,*
sentence->E;,-
sentence->E;,+
sentence->E;,char
sentence->E;,double
sentence->E;,}
sentence->E;,{
sentence->E;,(
sentence->E;,int
项目集48:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
项目集49:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
项目集50:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
项目集51:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
项目集52:
left->array[.E],=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集53:
sentence->returnE.;,scanf
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,id
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,int
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集54:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
项目集55:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集56:
sentence->set_value;,scanf
sentence->set_value;,printf
sentence->set_value;,if
sentence->set_value;,for
sentence->set_value;,return
sentence->set_value;,array
sentence->set_value;,id
sentence->set_value;,num
sentence->set_value;,/
sentence->set_value;,*
sentence->set_value;,-
sentence->set_value;,+
sentence->set_value;,char
sentence->set_value;,double
sentence->set_value;,}
sentence->set_value;,{
sentence->set_value;,(
sentence->set_value;,int
项目集57:
set_value->left=.E,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集58:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集59:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,int
bool_expression->.GopH,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目集60:
printf_expression->printf(.string,expressions);,scanf
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,id
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,int
项目集61:
scanf_expression->scanf(.string,getaddr);,scanf
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,id
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,int
项目集62:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集63:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),;
项目集64:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
项目集65:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
项目集66:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
项目集67:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
项目集68:
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集69:
sentence->{block},scanf
sentence->{block},printf
sentence->{block},if
sentence->{block},for
sentence->{block},return
sentence->{block},array
sentence->{block},id
sentence->{block},num
sentence->{block},/
sentence->{block},*
sentence->{block},-
sentence->{block},+
sentence->{block},char
sentence->{block},double
sentence->{block},}
sentence->{block},{
sentence->{block},(
sentence->{block},int
项目集70:
id_name->id;,scanf
id_name->id;,printf
id_name->id;,if
id_name->id;,for
id_name->id;,return
id_name->id;,array
id_name->id;,id
id_name->id;,num
id_name->id;,/
id_name->id;,*
id_name->id;,-
id_name->id;,+
id_name->id;,char
id_name->id;,double
id_name->id;,}
id_name->id;,{
id_name->id;,(
id_name->id;,int
项目集71:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,id
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,int
id_name->.id=E;,scanf
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,id
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,int
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,id
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,int
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,id
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,int
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,id
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,int
项目集72:
id_name->id=.E;,scanf
id_name->id=.E;,printf
id_name->id=.E;,if
id_name->id=.E;,for
id_name->id=.E;,return
id_name->id=.E;,array
id_name->id=.E;,id
id_name->id=.E;,num
id_name->id=.E;,/
id_name->id=.E;,*
id_name->id=.E;,-
id_name->id=.E;,+
id_name->id=.E;,char
id_name->id=.E;,double
id_name->id=.E;,}
id_name->id=.E;,{
id_name->id=.E;,(
id_name->id=.E;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集73:
id_name->array[.num]={nums};,scanf
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,id
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,int
项目集74:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
E->E+T,+
E->E+T,;
项目集75:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
E->E-T,+
E->E-T,;
项目集76:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,;
项目集77:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,;
项目集78:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目集79:
left->array[E.],=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集80:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
E->T,-
E->T,+
项目集81:
T->F,]
T->F,/
T->F,*
T->F,-
T->F,+
项目集82:
F->num,]
F->num,/
F->num,*
F->num,-
F->num,+
项目集83:
F->id,]
F->id,/
F->id,*
F->id,-
F->id,+
项目集84:
F->array.[E],]
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集85:
sentence->returnE;,scanf
sentence->returnE;,printf
sentence->returnE;,if
sentence->returnE;,for
sentence->returnE;,return
sentence->returnE;,array
sentence->returnE;,id
sentence->returnE;,num
sentence->returnE;,/
sentence->returnE;,*
sentence->returnE;,-
sentence->returnE;,+
sentence->returnE;,char
sentence->returnE;,double
sentence->returnE;,}
sentence->returnE;,{
sentence->returnE;,(
sentence->returnE;,int
项目集86:
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集87:
set_value->left=E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集88:
left->id,=
项目集89:
left->array.[E],=
项目集90:
for_set_value->set_value,;
项目集91:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
项目集92:
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目集93:
G->E,>
G->E,<
G->E,<=
G->E,>=
E->E.-T,>
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目集94:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
E->T,<
E->T,<=
E->T,>=
E->T,-
E->T,+
项目集95:
T->F,>
T->F,<
T->F,<=
T->F,>=
T->F,/
T->F,*
T->F,-
T->F,+
项目集96:
F->num,>
F->num,<
F->num,<=
F->num,>=
F->num,/
F->num,*
F->num,-
F->num,+
项目集97:
F->id,>
F->id,<
F->id,<=
F->id,>=
F->id,/
F->id,*
F->id,-
F->id,+
项目集98:
F->array.[E],>
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集99:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,int
项目集100:
op->.>,array
op->.>,id
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.<,array
op->.<,id
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<=,array
op->.<=,id
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.>=,array
op->.>=,id
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
bool_expression->G.opH,)
项目集101:
printf_expression->printf(string.,expressions);,scanf
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.);,scanf
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,id
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,int
项目集102:
scanf_expression->scanf(string.,getaddr);,scanf
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,id
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,int
项目集103:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),)
项目集104:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
E->E+T,+
E->E+T,)
项目集105:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
E->E-T,+
E->E-T,)
项目集106:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,)
项目集107:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,)
项目集108:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集109:
id_name->id,id_name,scanf
id_name->id,id_name,printf
id_name->id,id_name,if
id_name->id,id_name,for
id_name->id,id_name,return
id_name->id,id_name,array
id_name->id,id_name,id
id_name->id,id_name,num
id_name->id,id_name,/
id_name->id,id_name,*
id_name->id,id_name,-
id_name->id,id_name,+
id_name->id,id_name,char
id_name->id,id_name,double
id_name->id,id_name,}
id_name->id,id_name,{
id_name->id,id_name,(
id_name->id,id_name,int
项目集110:
id_name->id=E.;,scanf
id_name->id=E.;,printf
id_name->id=E.;,if
id_name->id=E.;,for
id_name->id=E.;,return
id_name->id=E.;,array
id_name->id=E.;,id
id_name->id=E.;,num
id_name->id=E.;,/
id_name->id=E.;,*
id_name->id=E.;,-
id_name->id=E.;,+
id_name->id=E.;,char
id_name->id=E.;,double
id_name->id=E.;,}
id_name->id=E.;,{
id_name->id=E.;,(
id_name->id=E.;,int
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集111:
id_name->array[num.]={nums};,scanf
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,id
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,int
项目集112:
F->(E.),]
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集113:
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
项目集114:
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
项目集115:
left->array[E],=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集116:
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
项目集117:
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
项目集118:
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集119:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集120:
left->array[.E],=
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集121:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目集122:
F->(E.),>
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集123:
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
项目集124:
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
项目集125:
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
项目集126:
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
项目集127:
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目集128:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集129:
H->.E,)
bool_expression->Gop.H,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目集130:
op->>=,array
op->>=,id
op->>=,num
op->>=,/
op->>=,*
op->>=,-
op->>=,+
op->>=,(
项目集131:
op-><=,array
op-><=,id
op-><=,num
op-><=,/
op-><=,*
op-><=,-
op-><=,+
op-><=,(
项目集132:
op-><,array
op-><,id
op-><,num
op-><,/
op-><,*
op-><,-
op-><,+
op-><,(
项目集133:
op->>,array
op->>,id
op->>,num
op->>,/
op->>,*
op->>,-
op->>,+
op->>,(
项目集134:
printf_expression->printf(string).;,scanf
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,id
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,int
项目集135:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,id
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,int
项目集136:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,id
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,int
项目集137:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],)
项目集138:
id_name->id=E;,scanf
id_name->id=E;,printf
id_name->id=E;,if
id_name->id=E;,for
id_name->id=E;,return
id_name->id=E;,array
id_name->id=E;,id
id_name->id=E;,num
id_name->id=E;,/
id_name->id=E;,*
id_name->id=E;,-
id_name->id=E;,+
id_name->id=E;,char
id_name->id=E;,double
id_name->id=E;,}
id_name->id=E;,{
id_name->id=E;,(
id_name->id=E;,int
项目集139:
id_name->array[num].={nums};,scanf
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,id
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,int
项目集140:
F->(E),]
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集141:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
E->E+T,-
E->E+T,+
项目集142:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
E->E-T,-
E->E-T,+
项目集143:
T->T*F,]
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集144:
T->T/F,]
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集145:
F->array[E.],]
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集146:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集147:
left->array[E.],=
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集148:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
项目集149:
op->.>,array
op->.>,id
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.<,array
op->.<,id
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<=,array
op->.<=,id
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.>=,array
op->.>=,id
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
bool_expression->G.opH,;
项目集150:
F->(E),>
F->(E),<
F->(E),<=
F->(E),>=
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集151:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
E->E+T,<
E->E+T,<=
E->E+T,>=
E->E+T,-
E->E+T,+
项目集152:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
E->E-T,<
E->E-T,<=
E->E-T,>=
E->E-T,-
E->E-T,+
项目集153:
T->T*F,>
T->T*F,<
T->T*F,<=
T->T*F,>=
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集154:
T->T/F,>
T->T/F,<
T->T/F,<=
T->T/F,>=
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集155:
F->array[E.],>
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集156:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->{.block},else
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集157:
id_name->.array[num]={nums};,else
id_name->.id=E;,else
id_name->.id;,else
id_name->.id,id_name,else
define->type.id_name,else
项目集158:
ifsentence->sentence,else
项目集159:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,else
项目集160:
sentence->return.E;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集161:
sentence->define,else
项目集162:
sentence->set_value.;,else
项目集163:
sentence->loop_expression,else
项目集164:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
项目集165:
sentence->if_expression,else
项目集166:
if_expression->if.(bool_expression)ifsentenceelsesentence,else
项目集167:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,id
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,int
项目集168:
sentence->inout_expression,else
项目集169:
inout_expression->printf_expression,else
项目集170:
inout_expression->scanf_expression,else
项目集171:
printf_expression->printf.(string,expressions);,else
printf_expression->printf.(string);,else
项目集172:
scanf_expression->scanf.(string,getaddr);,else
项目集173:
H->E,)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集174:
bool_expression->GopH,)
项目集175:
printf_expression->printf(string);,scanf
printf_expression->printf(string);,printf
printf_expression->printf(string);,if
printf_expression->printf(string);,for
printf_expression->printf(string);,return
printf_expression->printf(string);,array
printf_expression->printf(string);,id
printf_expression->printf(string);,num
printf_expression->printf(string);,/
printf_expression->printf(string);,*
printf_expression->printf(string);,-
printf_expression->printf(string);,+
printf_expression->printf(string);,char
printf_expression->printf(string);,double
printf_expression->printf(string);,}
printf_expression->printf(string);,{
printf_expression->printf(string);,(
printf_expression->printf(string);,int
项目集176:
expressions->id,)
expressions->id.,expressions,)
项目集177:
printf_expression->printf(string,expressions.);,scanf
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,id
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,int
项目集178:
scanf_expression->scanf(string,getaddr.);,scanf
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,id
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,int
项目集179:
getaddr->&.id,)
项目集180:
id_name->array[num]=.{nums};,scanf
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,id
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,int
项目集181:
F->array[E],]
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集182:
left->array[E],=
项目集183:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
项目集184:
H->.E,;
bool_expression->Gop.H,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集185:
F->array[E],>
F->array[E],<
F->array[E],<=
F->array[E],>=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集186:
sentence->{block.},else
项目集187:
id_name->id.=E;,else
id_name->id.;,else
id_name->id.,id_name,else
项目集188:
id_name->array.[num]={nums};,else
项目集189:
define->typeid_name,else
项目集190:
sentence->E;,else
项目集191:
sentence->returnE.;,else
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集192:
sentence->set_value;,else
项目集193:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集194:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,else
bool_expression->.GopH,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目集195:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集196:
printf_expression->printf(.string,expressions);,else
printf_expression->printf(.string);,else
项目集197:
scanf_expression->scanf(.string,getaddr);,else
项目集198:
expressions->.id,)
expressions->id,.expressions,)
expressions->.id,expressions,)
项目集199:
printf_expression->printf(string,expressions).;,scanf
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,id
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,int
项目集200:
scanf_expression->scanf(string,getaddr).;,scanf
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,id
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,int
项目集201:
getaddr->&id,)
项目集202:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,id
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,int
项目集203:
Dec_expression->id.--,)
Inc_expression->id.++,)
项目集204:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
项目集205:
IncorDec->Inc_expression,)
项目集206:
IncorDec->Dec_expression,)
项目集207:
H->E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集208:
bool_expression->GopH,;
项目集209:
sentence->{block},else
项目集210:
id_name->id;,else
项目集211:
id_name->.array[num]={nums};,else
id_name->.id=E;,else
id_name->.id;,else
id_name->id,.id_name,else
id_name->.id,id_name,else
项目集212:
id_name->id=.E;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目集213:
id_name->array[.num]={nums};,else
项目集214:
sentence->returnE;,else
项目集215:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
项目集216:
if_expression->if(bool_expression.)ifsentenceelsesentence,else
项目集217:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
if_expression->if(bool_expression)ifsentenceelsesentence,printf
if_expression->if(bool_expression)ifsentenceelsesentence,if
if_expression->if(bool_expression)ifsentenceelsesentence,for
if_expression->if(bool_expression)ifsentenceelsesentence,return
if_expression->if(bool_expression)ifsentenceelsesentence,array
if_expression->if(bool_expression)ifsentenceelsesentence,id
if_expression->if(bool_expression)ifsentenceelsesentence,num
if_expression->if(bool_expression)ifsentenceelsesentence,/
if_expression->if(bool_expression)ifsentenceelsesentence,*
if_expression->if(bool_expression)ifsentenceelsesentence,-
if_expression->if(bool_expression)ifsentenceelsesentence,+
if_expression->if(bool_expression)ifsentenceelsesentence,char
if_expression->if(bool_expression)ifsentenceelsesentence,double
if_expression->if(bool_expression)ifsentenceelsesentence,}
if_expression->if(bool_expression)ifsentenceelsesentence,{
if_expression->if(bool_expression)ifsentenceelsesentence,(
if_expression->if(bool_expression)ifsentenceelsesentence,int
项目集218:
printf_expression->printf(string.,expressions);,else
printf_expression->printf(string.);,else
项目集219:
scanf_expression->scanf(string.,getaddr);,else
项目集220:
expressions->id,expressions,)
项目集221:
printf_expression->printf(string,expressions);,scanf
printf_expression->printf(string,expressions);,printf
printf_expression->printf(string,expressions);,if
printf_expression->printf(string,expressions);,for
printf_expression->printf(string,expressions);,return
printf_expression->printf(string,expressions);,array
printf_expression->printf(string,expressions);,id
printf_expression->printf(string,expressions);,num
printf_expression->printf(string,expressions);,/
printf_expression->printf(string,expressions);,*
printf_expression->printf(string,expressions);,-
printf_expression->printf(string,expressions);,+
printf_expression->printf(string,expressions);,char
printf_expression->printf(string,expressions);,double
printf_expression->printf(string,expressions);,}
printf_expression->printf(string,expressions);,{
printf_expression->printf(string,expressions);,(
printf_expression->printf(string,expressions);,int
项目集222:
scanf_expression->scanf(string,getaddr);,scanf
scanf_expression->scanf(string,getaddr);,printf
scanf_expression->scanf(string,getaddr);,if
scanf_expression->scanf(string,getaddr);,for
scanf_expression->scanf(string,getaddr);,return
scanf_expression->scanf(string,getaddr);,array
scanf_expression->scanf(string,getaddr);,id
scanf_expression->scanf(string,getaddr);,num
scanf_expression->scanf(string,getaddr);,/
scanf_expression->scanf(string,getaddr);,*
scanf_expression->scanf(string,getaddr);,-
scanf_expression->scanf(string,getaddr);,+
scanf_expression->scanf(string,getaddr);,char
scanf_expression->scanf(string,getaddr);,double
scanf_expression->scanf(string,getaddr);,}
scanf_expression->scanf(string,getaddr);,{
scanf_expression->scanf(string,getaddr);,(
scanf_expression->scanf(string,getaddr);,int
项目集223:
nums->num,}
nums->num.,nums,}
项目集224:
id_name->array[num]={nums.};,scanf
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,id
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,int
项目集225:
Inc_expression->id++,)
项目集226:
Dec_expression->id--,)
项目集227:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,id
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集228:
id_name->id,id_name,else
项目集229:
id_name->id=E.;,else
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集230:
id_name->array[num.]={nums};,else
项目集231:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目集232:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集233:
printf_expression->printf(string).;,else
项目集234:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,else
项目集235:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,else
项目集236:
nums->.num,}
nums->num,.nums,}
nums->.num,nums,}
项目集237:
id_name->array[num]={nums}.;,scanf
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,id
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,int
项目集238:
forsentence->sentence,scanf
forsentence->sentence,printf
forsentence->sentence,if
forsentence->sentence,for
forsentence->sentence,return
forsentence->sentence,array
forsentence->sentence,id
forsentence->sentence,num
forsentence->sentence,/
forsentence->sentence,*
forsentence->sentence,-
forsentence->sentence,+
forsentence->sentence,char
forsentence->sentence,double
forsentence->sentence,}
forsentence->sentence,{
forsentence->sentence,(
forsentence->sentence,int
项目集239:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
项目集240:
id_name->id=E;,else
项目集241:
id_name->array[num].={nums};,else
项目集242:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
项目集243:
if_expression->if(bool_expression)ifsentence.elsesentence,else
项目集244:
printf_expression->printf(string);,else
项目集245:
printf_expression->printf(string,expressions.);,else
项目集246:
scanf_expression->scanf(string,getaddr.);,else
项目集247:
nums->num,nums,}
项目集248:
id_name->array[num]={nums};,scanf
id_name->array[num]={nums};,printf
id_name->array[num]={nums};,if
id_name->array[num]={nums};,for
id_name->array[num]={nums};,return
id_name->array[num]={nums};,array
id_name->array[num]={nums};,id
id_name->array[num]={nums};,num
id_name->array[num]={nums};,/
id_name->array[num]={nums};,*
id_name->array[num]={nums};,-
id_name->array[num]={nums};,+
id_name->array[num]={nums};,char
id_name->array[num]={nums};,double
id_name->array[num]={nums};,}
id_name->array[num]={nums};,{
id_name->array[num]={nums};,(
id_name->array[num]={nums};,int
项目集249:
id_name->array[num]=.{nums};,else
项目集250:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
项目集251:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集252:
printf_expression->printf(string,expressions).;,else
项目集253:
scanf_expression->scanf(string,getaddr).;,else
项目集254:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,else
项目集255:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
项目集256:
if_expression->if(bool_expression)ifsentenceelsesentence,else
项目集257:
printf_expression->printf(string,expressions);,else
项目集258:
scanf_expression->scanf(string,getaddr);,else
项目集259:
id_name->array[num]={nums.};,else
项目集260:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
forsentence->.sentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
项目集261:
id_name->array[num]={nums}.;,else
项目集262:
forsentence->sentence,else
项目集263:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
项目集264:
id_name->array[num]={nums};,else
项目0:
S'->.S,#
S->.intmain(){block},#
shift:2
项目1:
S'->S,#
Accept
项目2:
S->int.main(){block},#
shift:3
项目3:
S->intmain.(){block},#
shift:4
项目4:
S->intmain(.){block},#
shift:5
项目5:
S->intmain().{block},#
shift:6
项目6:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
S->intmain(){.block},#
项目7:
type->int,array
reduce:1
type->int,id
reduce:1
项目8:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目9:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},id
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},int
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目10:
S->intmain(){block.},#
shift:42
项目11:
id_name->.array[num]={nums};,scanf
shift:44
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,id
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,int
id_name->.id=E;,scanf
shift:43
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,id
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,int
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,id
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,int
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,id
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,int
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,id
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,int
项目12:
type->double,array
reduce:2
type->double,id
reduce:2
项目13:
type->char,array
reduce:3
type->char,id
reduce:3
项目14:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
reduce:4
block->.sentence,}
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目15:
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
shift:47
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,id
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,int
项目16:
T->T./F,/
shift:51
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:50
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
reduce:10
E->T,+
reduce:10
E->T,;
reduce:10
项目17:
T->F,/
reduce:13
T->F,*
reduce:13
T->F,-
reduce:13
T->F,+
reduce:13
T->F,;
reduce:13
项目18:
F->num,/
reduce:15
F->num,*
reduce:15
F->num,-
reduce:15
F->num,+
reduce:15
F->num,;
reduce:15
项目19:
left->id,=
reduce:29
F->id,/
reduce:16
F->id,*
reduce:16
F->id,-
reduce:16
F->id,+
reduce:16
F->id,;
reduce:16
项目20:
left->array.[E],=
shift:52
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目21:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,id
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,int
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目22:
sentence->define,scanf
reduce:19
sentence->define,printf
reduce:19
sentence->define,if
reduce:19
sentence->define,for
reduce:19
sentence->define,return
reduce:19
sentence->define,array
reduce:19
sentence->define,id
reduce:19
sentence->define,num
reduce:19
sentence->define,/
reduce:19
sentence->define,*
reduce:19
sentence->define,-
reduce:19
sentence->define,+
reduce:19
sentence->define,char
reduce:19
sentence->define,double
reduce:19
sentence->define,}
reduce:19
sentence->define,{
reduce:19
sentence->define,(
reduce:19
sentence->define,int
reduce:19
项目23:
sentence->set_value.;,scanf
shift:56
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,id
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,int
项目24:
set_value->left.=E,;
shift:57
项目25:
sentence->loop_expression,scanf
reduce:31
sentence->loop_expression,printf
reduce:31
sentence->loop_expression,if
reduce:31
sentence->loop_expression,for
reduce:31
sentence->loop_expression,return
reduce:31
sentence->loop_expression,array
reduce:31
sentence->loop_expression,id
reduce:31
sentence->loop_expression,num
reduce:31
sentence->loop_expression,/
reduce:31
sentence->loop_expression,*
reduce:31
sentence->loop_expression,-
reduce:31
sentence->loop_expression,+
reduce:31
sentence->loop_expression,char
reduce:31
sentence->loop_expression,double
reduce:31
sentence->loop_expression,}
reduce:31
sentence->loop_expression,{
reduce:31
sentence->loop_expression,(
reduce:31
sentence->loop_expression,int
reduce:31
项目26:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:58
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
项目27:
sentence->if_expression,scanf
reduce:45
sentence->if_expression,printf
reduce:45
sentence->if_expression,if
reduce:45
sentence->if_expression,for
reduce:45
sentence->if_expression,return
reduce:45
sentence->if_expression,array
reduce:45
sentence->if_expression,id
reduce:45
sentence->if_expression,num
reduce:45
sentence->if_expression,/
reduce:45
sentence->if_expression,*
reduce:45
sentence->if_expression,-
reduce:45
sentence->if_expression,+
reduce:45
sentence->if_expression,char
reduce:45
sentence->if_expression,double
reduce:45
sentence->if_expression,}
reduce:45
sentence->if_expression,{
reduce:45
sentence->if_expression,(
reduce:45
sentence->if_expression,int
reduce:45
项目28:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
shift:59
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,int
项目29:
sentence->inout_expression,scanf
reduce:48
sentence->inout_expression,printf
reduce:48
sentence->inout_expression,if
reduce:48
sentence->inout_expression,for
reduce:48
sentence->inout_expression,return
reduce:48
sentence->inout_expression,array
reduce:48
sentence->inout_expression,id
reduce:48
sentence->inout_expression,num
reduce:48
sentence->inout_expression,/
reduce:48
sentence->inout_expression,*
reduce:48
sentence->inout_expression,-
reduce:48
sentence->inout_expression,+
reduce:48
sentence->inout_expression,char
reduce:48
sentence->inout_expression,double
reduce:48
sentence->inout_expression,}
reduce:48
sentence->inout_expression,{
reduce:48
sentence->inout_expression,(
reduce:48
sentence->inout_expression,int
reduce:48
项目30:
inout_expression->printf_expression,scanf
reduce:49
inout_expression->printf_expression,printf
reduce:49
inout_expression->printf_expression,if
reduce:49
inout_expression->printf_expression,for
reduce:49
inout_expression->printf_expression,return
reduce:49
inout_expression->printf_expression,array
reduce:49
inout_expression->printf_expression,id
reduce:49
inout_expression->printf_expression,num
reduce:49
inout_expression->printf_expression,/
reduce:49
inout_expression->printf_expression,*
reduce:49
inout_expression->printf_expression,-
reduce:49
inout_expression->printf_expression,+
reduce:49
inout_expression->printf_expression,char
reduce:49
inout_expression->printf_expression,double
reduce:49
inout_expression->printf_expression,}
reduce:49
inout_expression->printf_expression,{
reduce:49
inout_expression->printf_expression,(
reduce:49
inout_expression->printf_expression,int
reduce:49
项目31:
inout_expression->scanf_expression,scanf
reduce:50
inout_expression->scanf_expression,printf
reduce:50
inout_expression->scanf_expression,if
reduce:50
inout_expression->scanf_expression,for
reduce:50
inout_expression->scanf_expression,return
reduce:50
inout_expression->scanf_expression,array
reduce:50
inout_expression->scanf_expression,id
reduce:50
inout_expression->scanf_expression,num
reduce:50
inout_expression->scanf_expression,/
reduce:50
inout_expression->scanf_expression,*
reduce:50
inout_expression->scanf_expression,-
reduce:50
inout_expression->scanf_expression,+
reduce:50
inout_expression->scanf_expression,char
reduce:50
inout_expression->scanf_expression,double
reduce:50
inout_expression->scanf_expression,}
reduce:50
inout_expression->scanf_expression,{
reduce:50
inout_expression->scanf_expression,(
reduce:50
inout_expression->scanf_expression,int
reduce:50
项目32:
printf_expression->printf.(string,expressions);,scanf
shift:60
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,id
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,int
项目33:
scanf_expression->scanf.(string,getaddr);,scanf
shift:61
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,id
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,int
项目34:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目35:
F->(E.),/
shift:63
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
shift:65
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:64
E->E.+T,+
E->E.+T,)
项目36:
T->T./F,/
shift:67
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:66
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
reduce:10
E->T,+
reduce:10
E->T,)
reduce:10
项目37:
T->F,/
reduce:13
T->F,*
reduce:13
T->F,-
reduce:13
T->F,+
reduce:13
T->F,)
reduce:13
项目38:
F->num,/
reduce:15
F->num,*
reduce:15
F->num,-
reduce:15
F->num,+
reduce:15
F->num,)
reduce:15
项目39:
F->id,/
reduce:16
F->id,*
reduce:16
F->id,-
reduce:16
F->id,+
reduce:16
F->id,)
reduce:16
项目40:
F->array.[E],/
shift:68
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目41:
sentence->{block.},scanf
shift:69
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},id
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},int
项目42:
S->intmain(){block},#
reduce:0
项目43:
id_name->id.=E;,scanf
shift:72
id_name->id.=E;,printf
id_name->id.=E;,if
id_name->id.=E;,for
id_name->id.=E;,return
id_name->id.=E;,array
id_name->id.=E;,id
id_name->id.=E;,num
id_name->id.=E;,/
id_name->id.=E;,*
id_name->id.=E;,-
id_name->id.=E;,+
id_name->id.=E;,char
id_name->id.=E;,double
id_name->id.=E;,}
id_name->id.=E;,{
id_name->id.=E;,(
id_name->id.=E;,int
id_name->id.;,scanf
shift:70
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,id
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,int
id_name->id.,id_name,scanf
shift:71
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,id
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,int
项目44:
id_name->array.[num]={nums};,scanf
shift:73
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,id
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,int
项目45:
define->typeid_name,scanf
reduce:20
define->typeid_name,printf
reduce:20
define->typeid_name,if
reduce:20
define->typeid_name,for
reduce:20
define->typeid_name,return
reduce:20
define->typeid_name,array
reduce:20
define->typeid_name,id
reduce:20
define->typeid_name,num
reduce:20
define->typeid_name,/
reduce:20
define->typeid_name,*
reduce:20
define->typeid_name,-
reduce:20
define->typeid_name,+
reduce:20
define->typeid_name,char
reduce:20
define->typeid_name,double
reduce:20
define->typeid_name,}
reduce:20
define->typeid_name,{
reduce:20
define->typeid_name,(
reduce:20
define->typeid_name,int
reduce:20
项目46:
block->sentenceblock,}
reduce:5
项目47:
sentence->E;,scanf
reduce:7
sentence->E;,printf
reduce:7
sentence->E;,if
reduce:7
sentence->E;,for
reduce:7
sentence->E;,return
reduce:7
sentence->E;,array
reduce:7
sentence->E;,id
reduce:7
sentence->E;,num
reduce:7
sentence->E;,/
reduce:7
sentence->E;,*
reduce:7
sentence->E;,-
reduce:7
sentence->E;,+
reduce:7
sentence->E;,char
reduce:7
sentence->E;,double
reduce:7
sentence->E;,}
reduce:7
sentence->E;,{
reduce:7
sentence->E;,(
reduce:7
sentence->E;,int
reduce:7
项目48:
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
项目49:
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
项目50:
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
项目51:
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
项目52:
left->array[.E],=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目53:
sentence->returnE.;,scanf
shift:85
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,id
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,int
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目54:
F->id,/
reduce:16
F->id,*
reduce:16
F->id,-
reduce:16
F->id,+
reduce:16
F->id,;
reduce:16
项目55:
F->array.[E],/
shift:86
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目56:
sentence->set_value;,scanf
reduce:27
sentence->set_value;,printf
reduce:27
sentence->set_value;,if
reduce:27
sentence->set_value;,for
reduce:27
sentence->set_value;,return
reduce:27
sentence->set_value;,array
reduce:27
sentence->set_value;,id
reduce:27
sentence->set_value;,num
reduce:27
sentence->set_value;,/
reduce:27
sentence->set_value;,*
reduce:27
sentence->set_value;,-
reduce:27
sentence->set_value;,+
reduce:27
sentence->set_value;,char
reduce:27
sentence->set_value;,double
reduce:27
sentence->set_value;,}
reduce:27
sentence->set_value;,{
reduce:27
sentence->set_value;,(
reduce:27
sentence->set_value;,int
reduce:27
项目57:
set_value->left=.E,;
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目58:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
left->.array[E],=
shift:89
left->.id,=
shift:88
set_value->.left=E,;
项目59:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,int
bool_expression->.GopH,)
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目60:
printf_expression->printf(.string,expressions);,scanf
shift:101
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,id
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,int
项目61:
scanf_expression->scanf(.string,getaddr);,scanf
shift:102
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,id
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,int
项目62:
F->(E.),/
shift:103
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
shift:65
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:64
E->E.+T,+
E->E.+T,)
项目63:
F->(E),/
reduce:14
F->(E),*
reduce:14
F->(E),-
reduce:14
F->(E),+
reduce:14
F->(E),;
reduce:14
项目64:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
项目65:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
项目66:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
项目67:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
项目68:
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目69:
sentence->{block},scanf
reduce:6
sentence->{block},printf
reduce:6
sentence->{block},if
reduce:6
sentence->{block},for
reduce:6
sentence->{block},return
reduce:6
sentence->{block},array
reduce:6
sentence->{block},id
reduce:6
sentence->{block},num
reduce:6
sentence->{block},/
reduce:6
sentence->{block},*
reduce:6
sentence->{block},-
reduce:6
sentence->{block},+
reduce:6
sentence->{block},char
reduce:6
sentence->{block},double
reduce:6
sentence->{block},}
reduce:6
sentence->{block},{
reduce:6
sentence->{block},(
reduce:6
sentence->{block},int
reduce:6
项目70:
id_name->id;,scanf
reduce:22
id_name->id;,printf
reduce:22
id_name->id;,if
reduce:22
id_name->id;,for
reduce:22
id_name->id;,return
reduce:22
id_name->id;,array
reduce:22
id_name->id;,id
reduce:22
id_name->id;,num
reduce:22
id_name->id;,/
reduce:22
id_name->id;,*
reduce:22
id_name->id;,-
reduce:22
id_name->id;,+
reduce:22
id_name->id;,char
reduce:22
id_name->id;,double
reduce:22
id_name->id;,}
reduce:22
id_name->id;,{
reduce:22
id_name->id;,(
reduce:22
id_name->id;,int
reduce:22
项目71:
id_name->.array[num]={nums};,scanf
shift:44
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,id
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,int
id_name->.id=E;,scanf
shift:43
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,id
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,int
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,id
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,int
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,id
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,int
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,id
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,int
项目72:
id_name->id=.E;,scanf
id_name->id=.E;,printf
id_name->id=.E;,if
id_name->id=.E;,for
id_name->id=.E;,return
id_name->id=.E;,array
id_name->id=.E;,id
id_name->id=.E;,num
id_name->id=.E;,/
id_name->id=.E;,*
id_name->id=.E;,-
id_name->id=.E;,+
id_name->id=.E;,char
id_name->id=.E;,double
id_name->id=.E;,}
id_name->id=.E;,{
id_name->id=.E;,(
id_name->id=.E;,int
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目73:
id_name->array[.num]={nums};,scanf
shift:111
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,id
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,int
项目74:
T->T./F,/
shift:51
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:50
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
reduce:8
E->E+T,+
reduce:8
E->E+T,;
reduce:8
项目75:
T->T./F,/
shift:51
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:50
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
reduce:9
E->E-T,+
reduce:9
E->E-T,;
reduce:9
项目76:
T->T*F,/
reduce:11
T->T*F,*
reduce:11
T->T*F,-
reduce:11
T->T*F,+
reduce:11
T->T*F,;
reduce:11
项目77:
T->T/F,/
reduce:12
T->T/F,*
reduce:12
T->T/F,-
reduce:12
T->T/F,+
reduce:12
T->T/F,;
reduce:12
项目78:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目79:
left->array[E.],=
shift:115
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目80:
T->T./F,]
shift:117
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:116
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
reduce:10
E->T,-
reduce:10
E->T,+
reduce:10
项目81:
T->F,]
reduce:13
T->F,/
reduce:13
T->F,*
reduce:13
T->F,-
reduce:13
T->F,+
reduce:13
项目82:
F->num,]
reduce:15
F->num,/
reduce:15
F->num,*
reduce:15
F->num,-
reduce:15
F->num,+
reduce:15
项目83:
F->id,]
reduce:16
F->id,/
reduce:16
F->id,*
reduce:16
F->id,-
reduce:16
F->id,+
reduce:16
项目84:
F->array.[E],]
shift:118
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目85:
sentence->returnE;,scanf
reduce:18
sentence->returnE;,printf
reduce:18
sentence->returnE;,if
reduce:18
sentence->returnE;,for
reduce:18
sentence->returnE;,return
reduce:18
sentence->returnE;,array
reduce:18
sentence->returnE;,id
reduce:18
sentence->returnE;,num
reduce:18
sentence->returnE;,/
reduce:18
sentence->returnE;,*
reduce:18
sentence->returnE;,-
reduce:18
sentence->returnE;,+
reduce:18
sentence->returnE;,char
reduce:18
sentence->returnE;,double
reduce:18
sentence->returnE;,}
reduce:18
sentence->returnE;,{
reduce:18
sentence->returnE;,(
reduce:18
sentence->returnE;,int
reduce:18
项目86:
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目87:
set_value->left=E,;
reduce:28
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目88:
left->id,=
reduce:29
项目89:
left->array.[E],=
shift:120
项目90:
for_set_value->set_value,;
reduce:40
项目91:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
shift:121
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
项目92:
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目93:
G->E,>
reduce:57
G->E,<
reduce:57
G->E,<=
reduce:57
G->E,>=
reduce:57
E->E.-T,>
shift:124
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
shift:123
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目94:
T->T./F,>
shift:126
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:125
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
reduce:10
E->T,<
reduce:10
E->T,<=
reduce:10
E->T,>=
reduce:10
E->T,-
reduce:10
E->T,+
reduce:10
项目95:
T->F,>
reduce:13
T->F,<
reduce:13
T->F,<=
reduce:13
T->F,>=
reduce:13
T->F,/
reduce:13
T->F,*
reduce:13
T->F,-
reduce:13
T->F,+
reduce:13
项目96:
F->num,>
reduce:15
F->num,<
reduce:15
F->num,<=
reduce:15
F->num,>=
reduce:15
F->num,/
reduce:15
F->num,*
reduce:15
F->num,-
reduce:15
F->num,+
reduce:15
项目97:
F->id,>
reduce:16
F->id,<
reduce:16
F->id,<=
reduce:16
F->id,>=
reduce:16
F->id,/
reduce:16
F->id,*
reduce:16
F->id,-
reduce:16
F->id,+
reduce:16
项目98:
F->array.[E],>
shift:127
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目99:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
shift:128
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,int
项目100:
op->.>,array
shift:133
op->.>,id
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.<,array
shift:132
op->.<,id
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<=,array
shift:131
op->.<=,id
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.>=,array
shift:130
op->.>=,id
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
bool_expression->G.opH,)
项目101:
printf_expression->printf(string.,expressions);,scanf
shift:135
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.);,scanf
shift:134
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,id
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,int
项目102:
scanf_expression->scanf(string.,getaddr);,scanf
shift:136
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,id
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,int
项目103:
F->(E),/
reduce:14
F->(E),*
reduce:14
F->(E),-
reduce:14
F->(E),+
reduce:14
F->(E),)
reduce:14
项目104:
T->T./F,/
shift:67
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:66
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
reduce:8
E->E+T,+
reduce:8
E->E+T,)
reduce:8
项目105:
T->T./F,/
shift:67
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:66
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
reduce:9
E->E-T,+
reduce:9
E->E-T,)
reduce:9
项目106:
T->T*F,/
reduce:11
T->T*F,*
reduce:11
T->T*F,-
reduce:11
T->T*F,+
reduce:11
T->T*F,)
reduce:11
项目107:
T->T/F,/
reduce:12
T->T/F,*
reduce:12
T->T/F,-
reduce:12
T->T/F,+
reduce:12
T->T/F,)
reduce:12
项目108:
F->array[E.],/
shift:137
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目109:
id_name->id,id_name,scanf
reduce:21
id_name->id,id_name,printf
reduce:21
id_name->id,id_name,if
reduce:21
id_name->id,id_name,for
reduce:21
id_name->id,id_name,return
reduce:21
id_name->id,id_name,array
reduce:21
id_name->id,id_name,id
reduce:21
id_name->id,id_name,num
reduce:21
id_name->id,id_name,/
reduce:21
id_name->id,id_name,*
reduce:21
id_name->id,id_name,-
reduce:21
id_name->id,id_name,+
reduce:21
id_name->id,id_name,char
reduce:21
id_name->id,id_name,double
reduce:21
id_name->id,id_name,}
reduce:21
id_name->id,id_name,{
reduce:21
id_name->id,id_name,(
reduce:21
id_name->id,id_name,int
reduce:21
项目110:
id_name->id=E.;,scanf
shift:138
id_name->id=E.;,printf
id_name->id=E.;,if
id_name->id=E.;,for
id_name->id=E.;,return
id_name->id=E.;,array
id_name->id=E.;,id
id_name->id=E.;,num
id_name->id=E.;,/
id_name->id=E.;,*
id_name->id=E.;,-
id_name->id=E.;,+
id_name->id=E.;,char
id_name->id=E.;,double
id_name->id=E.;,}
id_name->id=E.;,{
id_name->id=E.;,(
id_name->id=E.;,int
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目111:
id_name->array[num.]={nums};,scanf
shift:139
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,id
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,int
项目112:
F->(E.),]
shift:140
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:65
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:64
E->E.+T,+
E->E.+T,)
项目113:
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
项目114:
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
项目115:
left->array[E],=
reduce:30
F->array[E],/
reduce:17
F->array[E],*
reduce:17
F->array[E],-
reduce:17
F->array[E],+
reduce:17
F->array[E],;
reduce:17
项目116:
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
项目117:
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
项目118:
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目119:
F->array[E.],/
shift:146
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目120:
left->array[.E],=
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目121:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目122:
F->(E.),>
shift:150
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:65
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:64
E->E.+T,+
E->E.+T,)
项目123:
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
项目124:
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
项目125:
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
项目126:
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
项目127:
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:84
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:83
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:82
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:78
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
项目128:
scanf_expression->.scanf(string,getaddr);,else
shift:172
printf_expression->.printf(string,expressions);,else
shift:171
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:166
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:164
sentence->.loop_expression,else
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:160
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:156
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目129:
H->.E,)
bool_expression->Gop.H,)
F->.array[E],/
shift:40
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:39
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:38
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:34
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
项目130:
op->>=,array
reduce:34
op->>=,id
reduce:34
op->>=,num
reduce:34
op->>=,/
reduce:34
op->>=,*
reduce:34
op->>=,-
reduce:34
op->>=,+
reduce:34
op->>=,(
reduce:34
项目131:
op-><=,array
reduce:35
op-><=,id
reduce:35
op-><=,num
reduce:35
op-><=,/
reduce:35
op-><=,*
reduce:35
op-><=,-
reduce:35
op-><=,+
reduce:35
op-><=,(
reduce:35
项目132:
op-><,array
reduce:36
op-><,id
reduce:36
op-><,num
reduce:36
op-><,/
reduce:36
op-><,*
reduce:36
op-><,-
reduce:36
op-><,+
reduce:36
op-><,(
reduce:36
项目133:
op->>,array
reduce:37
op->>,id
reduce:37
op->>,num
reduce:37
op->>,/
reduce:37
op->>,*
reduce:37
op->>,-
reduce:37
op->>,+
reduce:37
op->>,(
reduce:37
项目134:
printf_expression->printf(string).;,scanf
shift:175
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,id
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,int
项目135:
expressions->.id,)
shift:176
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,id
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,int
项目136:
getaddr->.&id,)
shift:179
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,id
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,int
项目137:
F->array[E],/
reduce:17
F->array[E],*
reduce:17
F->array[E],-
reduce:17
F->array[E],+
reduce:17
F->array[E],)
reduce:17
项目138:
id_name->id=E;,scanf
reduce:23
id_name->id=E;,printf
reduce:23
id_name->id=E;,if
reduce:23
id_name->id=E;,for
reduce:23
id_name->id=E;,return
reduce:23
id_name->id=E;,array
reduce:23
id_name->id=E;,id
reduce:23
id_name->id=E;,num
reduce:23
id_name->id=E;,/
reduce:23
id_name->id=E;,*
reduce:23
id_name->id=E;,-
reduce:23
id_name->id=E;,+
reduce:23
id_name->id=E;,char
reduce:23
id_name->id=E;,double
reduce:23
id_name->id=E;,}
reduce:23
id_name->id=E;,{
reduce:23
id_name->id=E;,(
reduce:23
id_name->id=E;,int
reduce:23
项目139:
id_name->array[num].={nums};,scanf
shift:180
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,id
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,int
项目140:
F->(E),]
reduce:14
F->(E),/
reduce:14
F->(E),*
reduce:14
F->(E),-
reduce:14
F->(E),+
reduce:14
项目141:
T->T./F,]
shift:117
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:116
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
reduce:8
E->E+T,-
reduce:8
E->E+T,+
reduce:8
项目142:
T->T./F,]
shift:117
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:116
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
reduce:9
E->E-T,-
reduce:9
E->E-T,+
reduce:9
项目143:
T->T*F,]
reduce:11
T->T*F,/
reduce:11
T->T*F,*
reduce:11
T->T*F,-
reduce:11
T->T*F,+
reduce:11
项目144:
T->T/F,]
reduce:12
T->T/F,/
reduce:12
T->T/F,*
reduce:12
T->T/F,-
reduce:12
T->T/F,+
reduce:12
项目145:
F->array[E.],]
shift:181
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目146:
F->array[E],/
reduce:17
F->array[E],*
reduce:17
F->array[E],-
reduce:17
F->array[E],+
reduce:17
F->array[E],;
reduce:17
项目147:
left->array[E.],=
shift:182
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目148:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
shift:183
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
项目149:
op->.>,array
shift:133
op->.>,id
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.<,array
shift:132
op->.<,id
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<=,array
shift:131
op->.<=,id
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.>=,array
shift:130
op->.>=,id
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
bool_expression->G.opH,;
项目150:
F->(E),>
reduce:14
F->(E),<
reduce:14
F->(E),<=
reduce:14
F->(E),>=
reduce:14
F->(E),/
reduce:14
F->(E),*
reduce:14
F->(E),-
reduce:14
F->(E),+
reduce:14
项目151:
T->T./F,>
shift:126
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:125
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
reduce:8
E->E+T,<
reduce:8
E->E+T,<=
reduce:8
E->E+T,>=
reduce:8
E->E+T,-
reduce:8
E->E+T,+
reduce:8
项目152:
T->T./F,>
shift:126
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:125
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
reduce:9
E->E-T,<
reduce:9
E->E-T,<=
reduce:9
E->E-T,>=
reduce:9
E->E-T,-
reduce:9
E->E-T,+
reduce:9
项目153:
T->T*F,>
reduce:11
T->T*F,<
reduce:11
T->T*F,<=
reduce:11
T->T*F,>=
reduce:11
T->T*F,/
reduce:11
T->T*F,*
reduce:11
T->T*F,-
reduce:11
T->T*F,+
reduce:11
项目154:
T->T/F,>
reduce:12
T->T/F,<
reduce:12
T->T/F,<=
reduce:12
T->T/F,>=
reduce:12
T->T/F,/
reduce:12
T->T/F,*
reduce:12
T->T/F,-
reduce:12
T->T/F,+
reduce:12
项目155:
F->array[E.],>
shift:185
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:114
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:113
E->E.+T,-
E->E.+T,+
项目156:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->{.block},else
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目157:
id_name->.array[num]={nums};,else
shift:188
id_name->.id=E;,else
shift:187
id_name->.id;,else
id_name->.id,id_name,else
define->type.id_name,else
项目158:
ifsentence->sentence,else
reduce:47
项目159:
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
sentence->E.;,else
shift:190
项目160:
sentence->return.E;,else
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目161:
sentence->define,else
reduce:19
项目162:
sentence->set_value.;,else
shift:192
项目163:
sentence->loop_expression,else
reduce:31
项目164:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
shift:193
项目165:
sentence->if_expression,else
reduce:45
项目166:
if_expression->if.(bool_expression)ifsentenceelsesentence,else
shift:194
项目167:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
shift:195
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,id
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,int
项目168:
sentence->inout_expression,else
reduce:48
项目169:
inout_expression->printf_expression,else
reduce:49
项目170:
inout_expression->scanf_expression,else
reduce:50
项目171:
printf_expression->printf.(string,expressions);,else
shift:196
printf_expression->printf.(string);,else
项目172:
scanf_expression->scanf.(string,getaddr);,else
shift:197
项目173:
H->E,)
reduce:38
E->E.-T,-
shift:65
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:64
E->E.+T,+
E->E.+T,)
项目174:
bool_expression->GopH,)
reduce:33
项目175:
printf_expression->printf(string);,scanf
reduce:51
printf_expression->printf(string);,printf
reduce:51
printf_expression->printf(string);,if
reduce:51
printf_expression->printf(string);,for
reduce:51
printf_expression->printf(string);,return
reduce:51
printf_expression->printf(string);,array
reduce:51
printf_expression->printf(string);,id
reduce:51
printf_expression->printf(string);,num
reduce:51
printf_expression->printf(string);,/
reduce:51
printf_expression->printf(string);,*
reduce:51
printf_expression->printf(string);,-
reduce:51
printf_expression->printf(string);,+
reduce:51
printf_expression->printf(string);,char
reduce:51
printf_expression->printf(string);,double
reduce:51
printf_expression->printf(string);,}
reduce:51
printf_expression->printf(string);,{
reduce:51
printf_expression->printf(string);,(
reduce:51
printf_expression->printf(string);,int
reduce:51
项目176:
expressions->id,)
reduce:54
expressions->id.,expressions,)
shift:198
项目177:
printf_expression->printf(string,expressions.);,scanf
shift:199
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,id
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,int
项目178:
scanf_expression->scanf(string,getaddr.);,scanf
shift:200
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,id
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,int
项目179:
getaddr->&.id,)
shift:201
项目180:
id_name->array[num]=.{nums};,scanf
shift:202
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,id
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,int
项目181:
F->array[E],]
reduce:17
F->array[E],/
reduce:17
F->array[E],*
reduce:17
F->array[E],-
reduce:17
F->array[E],+
reduce:17
项目182:
left->array[E],=
reduce:30
项目183:
Dec_expression->.id--,)
shift:203
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
项目184:
H->.E,;
bool_expression->Gop.H,;
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目185:
F->array[E],>
reduce:17
F->array[E],<
reduce:17
F->array[E],<=
reduce:17
F->array[E],>=
reduce:17
F->array[E],/
reduce:17
F->array[E],*
reduce:17
F->array[E],-
reduce:17
F->array[E],+
reduce:17
项目186:
sentence->{block.},else
shift:209
项目187:
id_name->id.=E;,else
shift:212
id_name->id.;,else
shift:210
id_name->id.,id_name,else
shift:211
项目188:
id_name->array.[num]={nums};,else
shift:213
项目189:
define->typeid_name,else
reduce:20
项目190:
sentence->E;,else
reduce:7
项目191:
sentence->returnE.;,else
shift:214
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目192:
sentence->set_value;,else
reduce:27
项目193:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
left->.array[E],=
shift:89
left->.id,=
shift:88
set_value->.left=E,;
项目194:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,else
bool_expression->.GopH,)
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目195:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目196:
printf_expression->printf(.string,expressions);,else
shift:218
printf_expression->printf(.string);,else
项目197:
scanf_expression->scanf(.string,getaddr);,else
shift:219
项目198:
expressions->.id,)
shift:176
expressions->id,.expressions,)
expressions->.id,expressions,)
项目199:
printf_expression->printf(string,expressions).;,scanf
shift:221
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,id
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,int
项目200:
scanf_expression->scanf(string,getaddr).;,scanf
shift:222
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,id
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,int
项目201:
getaddr->&id,)
reduce:56
项目202:
nums->.num,}
shift:223
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,id
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,int
项目203:
Dec_expression->id.--,)
shift:226
Inc_expression->id.++,)
shift:225
项目204:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
shift:227
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
项目205:
IncorDec->Inc_expression,)
reduce:41
项目206:
IncorDec->Dec_expression,)
reduce:42
项目207:
H->E,;
reduce:38
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目208:
bool_expression->GopH,;
reduce:33
项目209:
sentence->{block},else
reduce:6
项目210:
id_name->id;,else
reduce:22
项目211:
id_name->.array[num]={nums};,else
shift:188
id_name->.id=E;,else
shift:187
id_name->.id;,else
id_name->id,.id_name,else
id_name->.id,id_name,else
项目212:
id_name->id=.E;,else
F->.array[E],/
shift:55
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:54
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
项目213:
id_name->array[.num]={nums};,else
shift:230
项目214:
sentence->returnE;,else
reduce:18
项目215:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
shift:231
项目216:
if_expression->if(bool_expression.)ifsentenceelsesentence,else
shift:232
项目217:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,printf
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,if
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,for
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,return
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,array
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,id
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,num
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,/
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,*
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,-
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,+
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,char
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,double
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,}
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,{
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,(
reduce:46
if_expression->if(bool_expression)ifsentenceelsesentence,int
reduce:46
项目218:
printf_expression->printf(string.,expressions);,else
shift:234
printf_expression->printf(string.);,else
shift:233
项目219:
scanf_expression->scanf(string.,getaddr);,else
shift:235
项目220:
expressions->id,expressions,)
reduce:53
项目221:
printf_expression->printf(string,expressions);,scanf
reduce:52
printf_expression->printf(string,expressions);,printf
reduce:52
printf_expression->printf(string,expressions);,if
reduce:52
printf_expression->printf(string,expressions);,for
reduce:52
printf_expression->printf(string,expressions);,return
reduce:52
printf_expression->printf(string,expressions);,array
reduce:52
printf_expression->printf(string,expressions);,id
reduce:52
printf_expression->printf(string,expressions);,num
reduce:52
printf_expression->printf(string,expressions);,/
reduce:52
printf_expression->printf(string,expressions);,*
reduce:52
printf_expression->printf(string,expressions);,-
reduce:52
printf_expression->printf(string,expressions);,+
reduce:52
printf_expression->printf(string,expressions);,char
reduce:52
printf_expression->printf(string,expressions);,double
reduce:52
printf_expression->printf(string,expressions);,}
reduce:52
printf_expression->printf(string,expressions);,{
reduce:52
printf_expression->printf(string,expressions);,(
reduce:52
printf_expression->printf(string,expressions);,int
reduce:52
项目222:
scanf_expression->scanf(string,getaddr);,scanf
reduce:55
scanf_expression->scanf(string,getaddr);,printf
reduce:55
scanf_expression->scanf(string,getaddr);,if
reduce:55
scanf_expression->scanf(string,getaddr);,for
reduce:55
scanf_expression->scanf(string,getaddr);,return
reduce:55
scanf_expression->scanf(string,getaddr);,array
reduce:55
scanf_expression->scanf(string,getaddr);,id
reduce:55
scanf_expression->scanf(string,getaddr);,num
reduce:55
scanf_expression->scanf(string,getaddr);,/
reduce:55
scanf_expression->scanf(string,getaddr);,*
reduce:55
scanf_expression->scanf(string,getaddr);,-
reduce:55
scanf_expression->scanf(string,getaddr);,+
reduce:55
scanf_expression->scanf(string,getaddr);,char
reduce:55
scanf_expression->scanf(string,getaddr);,double
reduce:55
scanf_expression->scanf(string,getaddr);,}
reduce:55
scanf_expression->scanf(string,getaddr);,{
reduce:55
scanf_expression->scanf(string,getaddr);,(
reduce:55
scanf_expression->scanf(string,getaddr);,int
reduce:55
项目223:
nums->num,}
reduce:26
nums->num.,nums,}
shift:236
项目224:
id_name->array[num]={nums.};,scanf
shift:237
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,id
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,int
项目225:
Inc_expression->id++,)
reduce:43
项目226:
Dec_expression->id--,)
reduce:44
项目227:
scanf_expression->.scanf(string,getaddr);,scanf
shift:33
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,id
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,int
printf_expression->.printf(string,expressions);,scanf
shift:32
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,id
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,int
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,id
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,int
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,id
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,int
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,id
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,int
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:28
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,int
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,id
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,int
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,id
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:26
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,id
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,int
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,id
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,int
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,id
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,int
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,id
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,int
sentence->.returnE;,scanf
shift:21
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,id
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,int
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,id
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,int
sentence->.{block},scanf
shift:9
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},id
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},int
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目228:
id_name->id,id_name,else
reduce:21
项目229:
id_name->id=E.;,else
shift:240
E->E.-T,-
shift:49
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:48
E->E.+T,+
E->E.+T,;
项目230:
id_name->array[num.]={nums};,else
shift:241
项目231:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
F->.array[E],>
shift:98
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:97
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:96
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:92
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
项目232:
scanf_expression->.scanf(string,getaddr);,else
shift:172
printf_expression->.printf(string,expressions);,else
shift:171
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:166
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:164
sentence->.loop_expression,else
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:160
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:156
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目233:
printf_expression->printf(string).;,else
shift:244
项目234:
expressions->.id,)
shift:176
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,else
项目235:
getaddr->.&id,)
shift:179
scanf_expression->scanf(string,.getaddr);,else
项目236:
nums->.num,}
shift:223
nums->num,.nums,}
nums->.num,nums,}
项目237:
id_name->array[num]={nums}.;,scanf
shift:248
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,id
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,int
项目238:
forsentence->sentence,scanf
reduce:39
forsentence->sentence,printf
reduce:39
forsentence->sentence,if
reduce:39
forsentence->sentence,for
reduce:39
forsentence->sentence,return
reduce:39
forsentence->sentence,array
reduce:39
forsentence->sentence,id
reduce:39
forsentence->sentence,num
reduce:39
forsentence->sentence,/
reduce:39
forsentence->sentence,*
reduce:39
forsentence->sentence,-
reduce:39
forsentence->sentence,+
reduce:39
forsentence->sentence,char
reduce:39
forsentence->sentence,double
reduce:39
forsentence->sentence,}
reduce:39
forsentence->sentence,{
reduce:39
forsentence->sentence,(
reduce:39
forsentence->sentence,int
reduce:39
项目239:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
reduce:32
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
reduce:32
项目240:
id_name->id=E;,else
reduce:23
项目241:
id_name->array[num].={nums};,else
shift:249
项目242:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
shift:250
项目243:
if_expression->if(bool_expression)ifsentence.elsesentence,else
shift:251
项目244:
printf_expression->printf(string);,else
reduce:51
项目245:
printf_expression->printf(string,expressions.);,else
shift:252
项目246:
scanf_expression->scanf(string,getaddr.);,else
shift:253
项目247:
nums->num,nums,}
reduce:25
项目248:
id_name->array[num]={nums};,scanf
reduce:24
id_name->array[num]={nums};,printf
reduce:24
id_name->array[num]={nums};,if
reduce:24
id_name->array[num]={nums};,for
reduce:24
id_name->array[num]={nums};,return
reduce:24
id_name->array[num]={nums};,array
reduce:24
id_name->array[num]={nums};,id
reduce:24
id_name->array[num]={nums};,num
reduce:24
id_name->array[num]={nums};,/
reduce:24
id_name->array[num]={nums};,*
reduce:24
id_name->array[num]={nums};,-
reduce:24
id_name->array[num]={nums};,+
reduce:24
id_name->array[num]={nums};,char
reduce:24
id_name->array[num]={nums};,double
reduce:24
id_name->array[num]={nums};,}
reduce:24
id_name->array[num]={nums};,{
reduce:24
id_name->array[num]={nums};,(
reduce:24
id_name->array[num]={nums};,int
reduce:24
项目249:
id_name->array[num]=.{nums};,else
shift:254
项目250:
Dec_expression->.id--,)
shift:203
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
项目251:
scanf_expression->.scanf(string,getaddr);,else
shift:172
printf_expression->.printf(string,expressions);,else
shift:171
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:166
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:164
sentence->.loop_expression,else
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:160
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:156
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目252:
printf_expression->printf(string,expressions).;,else
shift:257
项目253:
scanf_expression->scanf(string,getaddr).;,else
shift:258
项目254:
nums->.num,}
shift:223
nums->.num,nums,}
id_name->array[num]={.nums};,else
项目255:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
shift:260
项目256:
if_expression->if(bool_expression)ifsentenceelsesentence,else
reduce:46
项目257:
printf_expression->printf(string,expressions);,else
reduce:52
项目258:
scanf_expression->scanf(string,getaddr);,else
reduce:55
项目259:
id_name->array[num]={nums.};,else
shift:261
项目260:
scanf_expression->.scanf(string,getaddr);,else
shift:172
printf_expression->.printf(string,expressions);,else
shift:171
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:166
sentence->.if_expression,else
forsentence->.sentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:164
sentence->.loop_expression,else
left->.array[E],=
shift:20
left->.id,=
shift:19
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:160
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:18
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:8
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:156
type->.char,array
shift:13
type->.char,id
type->.double,array
shift:12
type->.double,id
type->.int,array
shift:7
type->.int,id
项目261:
id_name->array[num]={nums}.;,else
shift:264
项目262:
forsentence->sentence,else
reduce:39
项目263:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
reduce:32
项目264:
id_name->array[num]={nums};,else
reduce:24
Action Table:
   #intmain  (  )  {  }doublechar  ;  +  -  *  /num idarray  [  ]return  ,  =for >= <=  <  > ++ -- ifelseprintfstringscanf  &
 0  S2                                  
 1 acc                                   
 2   S3                                 
 3    S4                                
 4     S5                               
 5      S6                              
 6  S7  S8  S9  S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
 7                r1 r1                   
 8    S34           S38 S39 S40                   
 9  S7  S8  S9  S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
10       S42                             
11                S43 S44                   
12                r2 r2                   
13                r3 r3                   
14  S7  S8  S9 r4 S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
15          S47 S48 S49                        
16          r10 r10 r10 S50 S51                      
17          r13 r13 r13 r13 r13                      
18          r15 r15 r15 r15 r15                      
19          r16 r16 r16 r16 r16        r29              
20                  S52                  
21    S8           S18 S54 S55                   
22  r19  r19  r19 r19 r19 r19  r19 r19 r19 r19 r19 r19 r19   r19   r19       r19  r19  r19  
23          S56                          
24                      S57              
25  r31  r31  r31 r31 r31 r31  r31 r31 r31 r31 r31 r31 r31   r31   r31       r31  r31  r31  
26    S58                                
27  r45  r45  r45 r45 r45 r45  r45 r45 r45 r45 r45 r45 r45   r45   r45       r45  r45  r45  
28    S59                                
29  r48  r48  r48 r48 r48 r48  r48 r48 r48 r48 r48 r48 r48   r48   r48       r48  r48  r48  
30  r49  r49  r49 r49 r49 r49  r49 r49 r49 r49 r49 r49 r49   r49   r49       r49  r49  r49  
31  r50  r50  r50 r50 r50 r50  r50 r50 r50 r50 r50 r50 r50   r50   r50       r50  r50  r50  
32    S60                                
33    S61                                
34    S34           S38 S39 S40                   
35     S63      S64 S65                        
36     r10      r10 r10 S66 S67                      
37     r13      r13 r13 r13 r13                      
38     r15      r15 r15 r15 r15                      
39     r16      r16 r16 r16 r16                      
40                  S68                  
41       S69                             
42 r0                                   
43          S70           S71 S72              
44                  S73                  
45  r20  r20  r20 r20 r20 r20  r20 r20 r20 r20 r20 r20 r20   r20   r20       r20  r20  r20  
46       r5                             
47  r7  r7  r7 r7 r7 r7  r7 r7 r7 r7 r7 r7 r7   r7   r7       r7  r7  r7  
48    S8           S18 S54 S55                   
49    S8           S18 S54 S55                   
50    S8           S18 S54 S55                   
51    S8           S18 S54 S55                   
52    S78           S82 S83 S84                   
53          S85 S48 S49                        
54          r16 r16 r16 r16 r16                      
55                  S86                  
56  r27  r27  r27 r27 r27 r27  r27 r27 r27 r27 r27 r27 r27   r27   r27       r27  r27  r27  
57    S8           S18 S54 S55                   
58                S88 S89                   
59    S92           S96 S97 S98                   
60                                 S101   
61                                 S102   
62     S103      S64 S65                        
63          r14 r14 r14 r14 r14                      
64    S34           S38 S39 S40                   
65    S34           S38 S39 S40                   
66    S34           S38 S39 S40                   
67    S34           S38 S39 S40                   
68    S78           S82 S83 S84                   
69  r6  r6  r6 r6 r6 r6  r6 r6 r6 r6 r6 r6 r6   r6   r6       r6  r6  r6  
70  r22  r22  r22 r22 r22 r22  r22 r22 r22 r22 r22 r22 r22   r22   r22       r22  r22  r22  
71                S43 S44                   
72    S8           S18 S54 S55                   
73               S111                     
74          r8 r8 r8 S50 S51                      
75          r9 r9 r9 S50 S51                      
76          r11 r11 r11 r11 r11                      
77          r12 r12 r12 r12 r12                      
78    S34           S38 S39 S40                   
79           S113 S114       S115                 
80           r10 r10 S116 S117     r10                 
81           r13 r13 r13 r13     r13                 
82           r15 r15 r15 r15     r15                 
83           r16 r16 r16 r16     r16                 
84                  S118                  
85  r18  r18  r18 r18 r18 r18  r18 r18 r18 r18 r18 r18 r18   r18   r18       r18  r18  r18  
86    S78           S82 S83 S84                   
87          r28 S48 S49                        
88                      r29              
89                  S120                  
90          r40                          
91          S121                          
92    S34           S38 S39 S40                   
93           S123 S124            r57 r57 r57 r57         
94           r10 r10 S125 S126          r10 r10 r10 r10         
95           r13 r13 r13 r13          r13 r13 r13 r13         
96           r15 r15 r15 r15          r15 r15 r15 r15         
97           r16 r16 r16 r16          r16 r16 r16 r16         
98                  S127                  
99     S128                               
100                        S130 S131 S132 S133         
101     S134                S135               
102                     S136               
103     r14      r14 r14 r14 r14                      
104     r8      r8 r8 S66 S67                      
105     r9      r9 r9 S66 S67                      
106     r11      r11 r11 r11 r11                      
107     r12      r12 r12 r12 r12                      
108           S113 S114       S137                 
109  r21  r21  r21 r21 r21 r21  r21 r21 r21 r21 r21 r21 r21   r21   r21       r21  r21  r21  
110          S138 S48 S49                        
111                   S139                 
112     S140      S64 S65                        
113    S78           S82 S83 S84                   
114    S78           S82 S83 S84                   
115          r17 r17 r17 r17 r17        r30              
116    S78           S82 S83 S84                   
117    S78           S82 S83 S84                   
118    S78           S82 S83 S84                   
119           S113 S114       S146                 
120    S78           S82 S83 S84                   
121    S92           S96 S97 S98                   
122     S150      S64 S65                        
123    S92           S96 S97 S98                   
124    S92           S96 S97 S98                   
125    S92           S96 S97 S98                   
126    S92           S96 S97 S98                   
127    S78           S82 S83 S84                   
128  S7  S8  S156  S12 S13      S18 S19 S20   S160   S164       S166  S171  S172  
129    S34           S38 S39 S40                   
130    r34       r34 r34 r34 r34 r34 r34 r34                   
131    r35       r35 r35 r35 r35 r35 r35 r35                   
132    r36       r36 r36 r36 r36 r36 r36 r36                   
133    r37       r37 r37 r37 r37 r37 r37 r37                   
134          S175                          
135                S176                    
136                                   S179 
137     r17      r17 r17 r17 r17                      
138  r23  r23  r23 r23 r23 r23  r23 r23 r23 r23 r23 r23 r23   r23   r23       r23  r23  r23  
139                      S180              
140           r14 r14 r14 r14     r14                 
141           r8 r8 S116 S117     r8                 
142           r9 r9 S116 S117     r9                 
143           r11 r11 r11 r11     r11                 
144           r12 r12 r12 r12     r12                 
145           S113 S114       S181                 
146          r17 r17 r17 r17 r17                      
147           S113 S114       S182                 
148          S183                          
149                        S130 S131 S132 S133         
150           r14 r14 r14 r14          r14 r14 r14 r14         
151           r8 r8 S125 S126          r8 r8 r8 r8         
152           r9 r9 S125 S126          r9 r9 r9 r9         
153           r11 r11 r11 r11          r11 r11 r11 r11         
154           r12 r12 r12 r12          r12 r12 r12 r12         
155           S113 S114       S185                 
156  S7  S8  S9  S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
157                S187 S188                   
158                               r47     
159          S190 S48 S49                        
160    S8           S18 S54 S55                   
161                               r19     
162          S192                          
163                               r31     
164    S193                                
165                               r45     
166    S194                                
167                               S195     
168                               r48     
169                               r49     
170                               r50     
171    S196                                
172    S197                                
173     r38      S64 S65                        
174     r33                               
175  r51  r51  r51 r51 r51 r51  r51 r51 r51 r51 r51 r51 r51   r51   r51       r51  r51  r51  
176     r54                S198               
177     S199                               
178     S200                               
179                S201                    
180      S202                              
181           r17 r17 r17 r17     r17                 
182                      r30              
183                S203                    
184    S8           S18 S54 S55                   
185           r17 r17 r17 r17          r17 r17 r17 r17         
186       S209                             
187          S210           S211 S212              
188                  S213                  
189                               r20     
190                               r7     
191          S214 S48 S49                        
192                               r27     
193                S88 S89                   
194    S92           S96 S97 S98                   
195  S7  S8  S9  S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
196                                 S218   
197                                 S219   
198                S176                    
199          S221                          
200          S222                          
201     r56                               
202               S223                     
203                            S225 S226       
204     S227                               
205     r41                               
206     r42                               
207          r38 S48 S49                        
208          r33                          
209                               r6     
210                               r22     
211                S187 S188                   
212    S8           S18 S54 S55                   
213               S230                     
214                               r18     
215          S231                          
216     S232                               
217  r46  r46  r46 r46 r46 r46  r46 r46 r46 r46 r46 r46 r46   r46   r46       r46  r46  r46  
218     S233                S234               
219                     S235               
220     r53                               
221  r52  r52  r52 r52 r52 r52  r52 r52 r52 r52 r52 r52 r52   r52   r52       r52  r52  r52  
222  r55  r55  r55 r55 r55 r55  r55 r55 r55 r55 r55 r55 r55   r55   r55       r55  r55  r55  
223       r26              S236               
224       S237                             
225     r43                               
226     r44                               
227  S7  S8  S9  S12 S13      S18 S19 S20   S21   S26       S28  S32  S33  
228                               r21     
229          S240 S48 S49                        
230                   S241                 
231    S92           S96 S97 S98                   
232  S7  S8  S156  S12 S13      S18 S19 S20   S160   S164       S166  S171  S172  
233          S244                          
234                S176                    
235                                   S179 
236               S223                     
237          S248                          
238  r39  r39  r39 r39 r39 r39  r39 r39 r39 r39 r39 r39 r39   r39   r39       r39  r39  r39  
239  r32  r32  r32 r32 r32 r32  r32 r32 r32 r32 r32 r32 r32   r32   r32       r32  r32  r32  
240                               r23     
241                      S249              
242          S250                          
243                               S251     
244                               r51     
245     S252                               
246     S253                               
247       r25                             
248  r24  r24  r24 r24 r24 r24  r24 r24 r24 r24 r24 r24 r24   r24   r24       r24  r24  r24  
249      S254                              
250                S203                    
251  S7  S8  S156  S12 S13      S18 S19 S20   S160   S164       S166  S171  S172  
252          S257                          
253          S258                          
254               S223                     
255     S260                               
256                               r46     
257                               r52     
258                               r55     
259       S261                             
260  S7  S8  S156  S12 S13      S18 S19 S20   S160   S164       S166  S171  S172  
261          S264                          
262                               r39     
263                               r32     
264                               r24     
Goto Table:
   Sblocktypesentence  E  T  Fdefineid_namenumsset_valueleftloop_expressionfor_set_valuebool_expressionIncorDecforsentence  G op  HInc_expressionDec_expressionif_expressionifsentenceinout_expressionprintf_expressionscanf_expressionexpressionsgetaddr S'
 0 1                              
 1                               
 2                               
 3                               
 4                               
 5                               
 6  10 11 14 15 16 17 22   23 24 25          27  29 30 31    
 7                               
 8     35 36 37                        
 9  41 11 14 15 16 17 22   23 24 25          27  29 30 31    
10                               
11         45                      
12                               
13                               
14  46 11 14 15 16 17 22   23 24 25          27  29 30 31    
15                               
16                               
17                               
18                               
19                               
20                               
21     53 16 17                        
22                               
23                               
24                               
25                               
26                               
27                               
28                               
29                               
30                               
31                               
32                               
33                               
34     62 36 37                        
35                               
36                               
37                               
38                               
39                               
40                               
41                               
42                               
43                               
44                               
45                               
46                               
47                               
48      74 17                        
49      75 17                        
50       76                        
51       77                        
52     79 80 81                        
53                               
54                               
55                               
56                               
57     87 16 17                        
58           90 24  91                 
59     93 94 95        99   100             
60                               
61                               
62                               
63                               
64      104 37                        
65      105 37                        
66       106                        
67       107                        
68     108 80 81                        
69                               
70                               
71         109                      
72     110 16 17                        
73                               
74                               
75                               
76                               
77                               
78     112 36 37                        
79                               
80                               
81                               
82                               
83                               
84                               
85                               
86     119 80 81                        
87                               
88                               
89                               
90                               
91                               
92     122 36 37                        
93                               
94                               
95                               
96                               
97                               
98                               
99                               
100                   129            
101                               
102                               
103                               
104                               
105                               
106                               
107                               
108                               
109                               
110                               
111                               
112                               
113      141 81                        
114      142 81                        
115                               
116       143                        
117       144                        
118     145 80 81                        
119                               
120     147 80 81                        
121     93 94 95        148   149             
122                               
123      151 95                        
124      152 95                        
125       153                        
126       154                        
127     155 80 81                        
128   157 158 159 16 17 161   162 24 163          165 167 168 169 170    
129     173 36 37             174           
130                               
131                               
132                               
133                               
134                               
135                            177   
136                             178  
137                               
138                               
139                               
140                               
141                               
142                               
143                               
144                               
145                               
146                               
147                               
148                               
149                   184            
150                               
151                               
152                               
153                               
154                               
155                               
156  186 11 14 15 16 17 22   23 24 25          27  29 30 31    
157         189                      
158                               
159                               
160     191 16 17                        
161                               
162                               
163                               
164                               
165                               
166                               
167                               
168                               
169                               
170                               
171                               
172                               
173                               
174                               
175                               
176                               
177                               
178                               
179                               
180                               
181                               
182                               
183                204     205 206         
184     207 16 17             208           
185                               
186                               
187                               
188                               
189                               
190                               
191                               
192                               
193           90 24  215                 
194     93 94 95        216   100             
195   11 217 15 16 17 22   23 24 25          27  29 30 31    
196                               
197                               
198                            220   
199                               
200                               
201                               
202          224                     
203                               
204                               
205                               
206                               
207                               
208                               
209                               
210                               
211         228                      
212     229 16 17                        
213                               
214                               
215                               
216                               
217                               
218                               
219                               
220                               
221                               
222                               
223                               
224                               
225                               
226                               
227   11 238 15 16 17 22   23 24 25    239      27  29 30 31    
228                               
229                               
230                               
231     93 94 95        242   149             
232   157 158 159 16 17 161   162 24 163          165 243 168 169 170    
233                               
234                            245   
235                             246  
236          247                     
237                               
238                               
239                               
240                               
241                               
242                               
243                               
244                               
245                               
246                               
247                               
248                               
249                               
250                255     205 206         
251   157 256 159 16 17 161   162 24 163          165  168 169 170    
252                               
253                               
254          259                     
255                               
256                               
257                               
258                               
259                               
260   157 262 159 16 17 161   162 24 163    263      165  168 169 170    
261                               
262                               
263                               
264                               
(INT,)
(MAIN,)
(LPAREN,)
(RPAREN,)
(LBBRACKET,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 76)
(COMMA,)
(NUM, 82)
(COMMA,)
(NUM, 90)
(COMMA,)
(NUM, 86)
(COMMA,)
(NUM, 79)
(COMMA,)
(NUM, 62)
(RBBRACKET,)
(SEMI,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 1)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 3)
(RBBRACKET,)
(SEMI,)
(INT,)
(ID, stu_number)
(SEMI,)
(DOUBLE,)
(ID, mean)
(COMMA,)
(ID, sum)
(SEMI,)
(INT,)
(ID, temp)
(SEMI,)
(INT,)
(ID, i)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, please input your student number:)
(RPAREN,)
(SEMI,)
(SCANF,)
(LPAREN,)
(STR, %d)
(COMMA,)
(ADDR,)
(ID, stu_number)
(RPAREN,)
(SEMI,)
(ID, sum)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, temp)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(FOR,)
(LPAREN,)
(ID, i)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, i)
(LT,)
(NUM, 6)
(SEMI,)
(ID, i)
(PLUSPLUS,)
(RPAREN,)
(LBBRACKET,)
(ID, sum)
(ASSIGN,)
(ID, sum)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(MULTI,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(ID, temp)
(ASSIGN,)
(ID, temp)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(RBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, sum)
(RDIV,)
(ID, temp)
(SEMI,)
(IF,)
(LPAREN,)
(ID, mean)
(GE,)
(NUM, 60)
(RPAREN,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, mean)
(MINUS,)
(NUM, 60)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f higher than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(ELSE,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(NUM, 60)
(MINUS,)
(ID, mean)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f lower than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(RETURN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
0  1
移入：2  int
2  2
移入：3  main
3  3
移入：4  (
4  4
移入：5  )
5  5
移入：6  {
6  1
移入：7  int
7  16
规约:type->int
出栈!
入栈：11type
11  16
移入：44  array
44  17
移入：73  [
73  14
移入：111  num
111  18
移入：139  ]
139  21
移入：180  =
180  5
移入：202  {
202  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  6
规约:nums->num
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：224nums
224  6
移入：237  }
237  9
移入：248  ;
248  1
规约:id_name->array[num]={nums};
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：45id_name
45  1
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  1
规约:sentence->define
出栈!
入栈：14sentence
14  1
移入：7  int
7  16
规约:type->int
出栈!
入栈：11type
11  16
移入：44  array
44  17
移入：73  [
73  14
移入：111  num
111  18
移入：139  ]
139  21
移入：180  =
180  5
移入：202  {
202  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  20
移入：236  ,
236  14
移入：223  num
223  6
规约:nums->num
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：247nums
247  6
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：224nums
224  6
移入：237  }
237  9
移入：248  ;
248  1
规约:id_name->array[num]={nums};
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：45id_name
45  1
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  1
规约:sentence->define
出栈!
入栈：14sentence
14  1
移入：7  int
7  15
规约:type->int
出栈!
入栈：11type
11  15
移入：43  id
43  9
移入：70  ;
70  7
规约:id_name->id;
出栈!
出栈!
入栈：45id_name
45  7
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  7
规约:sentence->define
出栈!
入栈：14sentence
14  7
移入：12  double
12  15
规约:type->double
出栈!
入栈：11type
11  15
移入：43  id
43  20
移入：71  ,
71  15
移入：43  id
43  9
移入：70  ;
70  1
规约:id_name->id;
出栈!
出栈!
入栈：109id_name
109  1
规约:id_name->id,id_name
出栈!
出栈!
出栈!
入栈：45id_name
45  1
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  1
规约:sentence->define
出栈!
入栈：14sentence
14  1
移入：7  int
7  15
规约:type->int
出栈!
入栈：11type
11  15
移入：43  id
43  9
移入：70  ;
70  1
规约:id_name->id;
出栈!
出栈!
入栈：45id_name
45  1
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  1
规约:sentence->define
出栈!
入栈：14sentence
14  1
移入：7  int
7  15
规约:type->int
出栈!
入栈：11type
11  15
移入：43  id
43  9
移入：70  ;
70  31
规约:id_name->id;
出栈!
出栈!
入栈：45id_name
45  31
规约:define->typeid_name
出栈!
出栈!
入栈：22define
22  31
规约:sentence->define
出栈!
入栈：14sentence
14  31
移入：32  printf
32  3
移入：60  (
60  32
移入：101  string
101  4
移入：134  )
134  9
移入：175  ;
175  33
规约:printf_expression->printf(string);
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：30printf_expression
30  33
规约:inout_expression->printf_expression
出栈!
入栈：29inout_expression
29  33
规约:sentence->inout_expression
出栈!
入栈：14sentence
14  33
移入：33  scanf
33  3
移入：61  (
61  32
移入：102  string
102  20
移入：136  ,
136  34
移入：179  &
179  15
移入：201  id
201  4
规约:getaddr->&id
出栈!
出栈!
入栈：178getaddr
178  4
移入：200  )
200  9
移入：222  ;
222  15
规约:scanf_expression->scanf(string,getaddr);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：31scanf_expression
31  15
规约:inout_expression->scanf_expression
出栈!
入栈：29inout_expression
29  15
规约:sentence->inout_expression
出栈!
入栈：14sentence
14  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  15
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  22
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  22
移入：26  for
26  3
移入：58  (
58  15
移入：88  id
88  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：90set_value
90  9
规约:for_set_value->set_value
出栈!
入栈：91for_set_value
91  9
移入：121  ;
121  15
移入：97  id
97  25
规约:F->id
出栈!
入栈：95F
95  25
规约:T->F
出栈!
入栈：94T
94  25
规约:E->T
出栈!
入栈：93E
93  25
规约:G->E
出栈!
入栈：149G
149  25
移入：132  <
132  14
规约:op-><
出栈!
入栈：184op
184  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：207E
207  9
规约:H->E
出栈!
入栈：208H
208  9
规约:bool_expression->GopH
出栈!
出栈!
出栈!
入栈：148bool_expression
148  9
移入：183  ;
183  15
移入：203  id
203  27
移入：225  ++
225  4
规约:Inc_expression->id++
出栈!
出栈!
入栈：205Inc_expression
205  4
规约:IncorDec->Inc_expression
出栈!
入栈：204IncorDec
204  4
移入：227  )
227  5
移入：9  {
9  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  15
移入：54  id
54  10
规约:F->id
出栈!
入栈：17F
17  10
规约:T->F
出栈!
入栈：16T
16  10
规约:E->T
出栈!
入栈：87E
87  10
移入：48  +
48  16
移入：55  array
55  17
移入：86  [
86  15
移入：83  id
83  18
规约:F->id
出栈!
入栈：81F
81  18
规约:T->F
出栈!
入栈：80T
80  18
规约:E->T
出栈!
入栈：119E
119  18
移入：146  ]
146  12
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：17F
17  12
规约:T->F
出栈!
入栈：74T
74  12
移入：50  *
50  16
移入：55  array
55  17
移入：86  [
86  15
移入：83  id
83  18
规约:F->id
出栈!
入栈：81F
81  18
规约:T->F
出栈!
入栈：80T
80  18
规约:E->T
出栈!
入栈：119E
119  18
移入：146  ]
146  9
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：76F
76  9
规约:T->T*F
出栈!
出栈!
出栈!
入栈：74T
74  9
规约:E->E+T
出栈!
出栈!
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  15
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  15
移入：54  id
54  10
规约:F->id
出栈!
入栈：17F
17  10
规约:T->F
出栈!
入栈：16T
16  10
规约:E->T
出栈!
入栈：87E
87  10
移入：48  +
48  16
移入：55  array
55  17
移入：86  [
86  15
移入：83  id
83  18
规约:F->id
出栈!
入栈：81F
81  18
规约:T->F
出栈!
入栈：80T
80  18
规约:E->T
出栈!
入栈：119E
119  18
移入：146  ]
146  9
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：74T
74  9
规约:E->E+T
出栈!
出栈!
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  6
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  6
规约:block->sentence
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：41block
41  6
移入：69  }
69  15
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：238sentence
238  15
规约:forsentence->sentence
出栈!
入栈：239forsentence
239  15
规约:loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：25loop_expression
25  15
规约:sentence->loop_expression
出栈!
入栈：14sentence
14  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  15
移入：54  id
54  13
规约:F->id
出栈!
入栈：17F
17  13
规约:T->F
出栈!
入栈：16T
16  13
移入：51  /
51  15
移入：54  id
54  9
规约:F->id
出栈!
入栈：77F
77  9
规约:T->T/F
出栈!
出栈!
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  29
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  29
移入：28  if
28  3
移入：59  (
59  15
移入：97  id
97  23
规约:F->id
出栈!
入栈：95F
95  23
规约:T->F
出栈!
入栈：94T
94  23
规约:E->T
出栈!
入栈：93E
93  23
规约:G->E
出栈!
入栈：100G
100  23
移入：130  >=
130  14
规约:op->>=
出栈!
入栈：129op
129  14
移入：38  num
38  4
规约:F->num
出栈!
入栈：37F
37  4
规约:T->F
出栈!
入栈：36T
36  4
规约:E->T
出栈!
入栈：173E
173  4
规约:H->E
出栈!
入栈：174H
174  4
规约:bool_expression->GopH
出栈!
出栈!
出栈!
入栈：99bool_expression
99  4
移入：128  )
128  5
移入：156  {
156  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  15
移入：54  id
54  11
规约:F->id
出栈!
入栈：17F
17  11
规约:T->F
出栈!
入栈：16T
16  11
规约:E->T
出栈!
入栈：87E
87  11
移入：49  -
49  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：75T
75  9
规约:E->E-T
出栈!
出栈!
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  31
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  31
移入：32  printf
32  3
移入：60  (
60  32
移入：101  string
101  20
移入：135  ,
135  15
移入：176  id
176  20
移入：198  ,
198  15
移入：176  id
176  4
规约:expressions->id
出栈!
入栈：220expressions
220  4
规约:expressions->id,expressions
出栈!
出栈!
出栈!
入栈：177expressions
177  4
移入：199  )
199  9
移入：221  ;
221  6
规约:printf_expression->printf(string,expressions);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：30printf_expression
30  6
规约:inout_expression->printf_expression
出栈!
入栈：29inout_expression
29  6
规约:sentence->inout_expression
出栈!
入栈：14sentence
14  6
规约:block->sentence
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：186block
186  6
移入：209  }
209  30
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：158sentence
158  30
规约:ifsentence->sentence
出栈!
入栈：167ifsentence
167  30
移入：195  else
195  5
移入：9  {
9  15
移入：19  id
19  21
规约:left->id
出栈!
入栈：24left
24  21
移入：57  =
57  14
移入：18  num
18  11
规约:F->num
出栈!
入栈：17F
17  11
规约:T->F
出栈!
入栈：16T
16  11
规约:E->T
出栈!
入栈：87E
87  11
移入：49  -
49  15
移入：54  id
54  9
规约:F->id
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：75T
75  9
规约:E->E-T
出栈!
出栈!
出栈!
入栈：87E
87  9
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：23set_value
23  9
移入：56  ;
56  31
规约:sentence->set_value;
出栈!
出栈!
入栈：14sentence
14  31
移入：32  printf
32  3
移入：60  (
60  32
移入：101  string
101  20
移入：135  ,
135  15
移入：176  id
176  20
移入：198  ,
198  15
移入：176  id
176  4
规约:expressions->id
出栈!
入栈：220expressions
220  4
规约:expressions->id,expressions
出栈!
出栈!
出栈!
入栈：177expressions
177  4
移入：199  )
199  9
移入：221  ;
221  6
规约:printf_expression->printf(string,expressions);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：30printf_expression
30  6
规约:inout_expression->printf_expression
出栈!
入栈：29inout_expression
29  6
规约:sentence->inout_expression
出栈!
入栈：14sentence
14  6
规约:block->sentence
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：41block
41  6
移入：69  }
69  19
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：217sentence
217  19
规约:if_expression->if(bool_expression)ifsentenceelsesentence
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：27if_expression
27  19
规约:sentence->if_expression
出栈!
入栈：14sentence
14  19
移入：21  return
21  14
移入：18  num
18  9
规约:F->num
出栈!
入栈：17F
17  9
规约:T->F
出栈!
入栈：16T
16  9
规约:E->T
出栈!
入栈：53E
53  9
移入：85  ;
85  6
规约:sentence->returnE;
出栈!
出栈!
出栈!
入栈：14sentence
14  6
规约:block->sentence
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：46block
46  6
规约:block->sentenceblock
出栈!
出栈!
入栈：10block
10  6
移入：42  }
42  0
规约:S->intmain(){block}
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：1S
1  0
语法分析完成！
