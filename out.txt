0:S
1:whilesentence
2:while_expression
3:function
4:function_define
5:function_type
6:function_define_list
7:function_call
8:function_call_list
9:type
10:block
11:sentence
12:E
13:T
14:F
15:id_name
16:nums
17:set_value
18:left
19:loop_expression
20:bool_expression
21:op
22:H
23:forsentence
24:for_set_value
25:IncorDec
26:Inc_expression
27:Dec_expression
28:if_expression
29:ifsentence
30:inout_expression
31:printf_expression
32:expressions
33:scanf_expression
34:getaddr
35:G
36:define
37:main
38:else
39:if
40:int
41:double
42:char
43:return
44:void
45:while
46:for
47:<=
48:>=
49:==
50:!=
51:/*
52:*/
53:<
54:>
55:=
56:+
57:-
58:*
59:/
60:;
61:,
62:(
63:)
64:[
65:]
66:{
67:}
68:num
69:id
70:string
71:&
72:++
73:--
74:printf
75:scanf
76:array
function->function_define 
function->function function_define 
function_define->function_type id ( ) { block } 
function_define->function_type id ( function_define_list ) { block } 
function_type->type 
function_type->void 
function_define_list->type id 
function_define_list->function_define_list , type id 
function_call->id ( ) 
function_call->id ( function_call_list ) 
function_call_list->F 
function_call_list->function_call_list , F 
S->function 
type->int 
type->double 
type->char 
block->sentence 
block->sentence block 
sentence->{ block } 
sentence->E ; 
E->E + T 
E->E - T 
E->T 
T->T * F 
T->T / F 
T->F 
F->( E ) 
F->num 
F->id 
F->array [ E ] 
F->function_call 
sentence->return E ; 
sentence->define 
define->type id_name 
id_name->id , id_name 
id_name->id ; 
id_name->array [ num ] = { nums } ; 
nums->num , nums 
nums->num 
sentence->set_value ; 
set_value->left = E 
left->id 
left->array [ E ] 
sentence->loop_expression 
sentence->while_expression 
loop_expression->for ( for_set_value ; bool_expression ; IncorDec ) forsentence 
while_expression->while ( bool_expression ) whilesentence 
whilesentence->sentence 
bool_expression->G op H 
bool_expression->F 
op->>= 
op-><= 
op->< 
op->> 
H->E 
forsentence->sentence 
for_set_value->set_value 
IncorDec->Inc_expression 
IncorDec->Dec_expression 
Inc_expression->id ++ 
Dec_expression->id -- 
sentence->if_expression 
if_expression->if ( bool_expression ) sentence 
if_expression->if ( bool_expression ) ifsentence else sentence 
ifsentence->sentence 
sentence->inout_expression 
inout_expression->printf_expression 
inout_expression->scanf_expression 
printf_expression->printf ( string ) ; 
printf_expression->printf ( string , expressions ) ; 
expressions->id , expressions 
expressions->id 
scanf_expression->scanf ( string , getaddr ) ; 
getaddr->& id 
G->E 
G->E 
符号集：
0:1 #
1:2 function
2:2 function_define
3:2 function_type
4:1 id
5:1 (
6:1 )
7:1 {
8:2 block
9:1 }
10:2 function_define_list
11:2 type
12:1 void
13:1 ,
14:2 function_call
15:2 function_call_list
16:2 F
17:2 S
18:1 int
19:1 double
20:1 char
21:2 sentence
22:2 E
23:1 ;
24:1 +
25:2 T
26:1 -
27:1 *
28:1 /
29:1 num
30:1 array
31:1 [
32:1 ]
33:1 return
34:2 define
35:2 id_name
36:1 =
37:2 nums
38:2 set_value
39:2 left
40:2 loop_expression
41:2 while_expression
42:1 for
43:2 for_set_value
44:2 bool_expression
45:2 IncorDec
46:2 forsentence
47:1 while
48:2 whilesentence
49:2 G
50:2 op
51:2 H
52:1 >=
53:1 <=
54:1 <
55:1 >
56:2 Inc_expression
57:2 Dec_expression
58:1 ++
59:1 --
60:2 if_expression
61:1 if
62:2 ifsentence
63:1 else
64:2 inout_expression
65:2 printf_expression
66:2 scanf_expression
67:1 printf
68:1 string
69:2 expressions
70:1 scanf
71:2 getaddr
72:1 &
73:2 S'
规则集:
function->function_define
function->functionfunction_define
function_define->function_typeid(){block}
function_define->function_typeid(function_define_list){block}
function_type->type
function_type->void
function_define_list->typeid
function_define_list->function_define_list,typeid
function_call->id()
function_call->id(function_call_list)
function_call_list->F
function_call_list->function_call_list,F
S->function
type->int
type->double
type->char
block->sentence
block->sentenceblock
sentence->{block}
sentence->E;
E->E+T
E->E-T
E->T
T->T*F
T->T/F
T->F
F->(E)
F->num
F->id
F->array[E]
F->function_call
sentence->returnE;
sentence->define
define->typeid_name
id_name->id,id_name
id_name->id;
id_name->array[num]={nums};
nums->num,nums
nums->num
sentence->set_value;
set_value->left=E
left->id
left->array[E]
sentence->loop_expression
sentence->while_expression
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence
while_expression->while(bool_expression)whilesentence
whilesentence->sentence
bool_expression->GopH
bool_expression->F
op->>=
op-><=
op-><
op->>
H->E
forsentence->sentence
for_set_value->set_value
IncorDec->Inc_expression
IncorDec->Dec_expression
Inc_expression->id++
Dec_expression->id--
sentence->if_expression
if_expression->if(bool_expression)sentence
if_expression->if(bool_expression)ifsentenceelsesentence
ifsentence->sentence
sentence->inout_expression
inout_expression->printf_expression
inout_expression->scanf_expression
printf_expression->printf(string);
printf_expression->printf(string,expressions);
expressions->id,expressions
expressions->id
scanf_expression->scanf(string,getaddr);
getaddr->&id
G->E
S'->S
项目集0:
S'->.S,#
type->.char,id
type->.double,id
type->.int,id
S->.function,#
function_type->.void,id
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->.functionfunction_define,char
function->.functionfunction_define,double
function->.functionfunction_define,int
function->.functionfunction_define,void
function->.functionfunction_define,#
function->.function_define,char
function->.function_define,double
function->.function_define,int
function->.function_define,void
function->.function_define,#
项目集1:
type->.char,id
type->.double,id
type->.int,id
S->function,#
function_type->.void,id
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->function.function_define,char
function->function.function_define,double
function->function.function_define,int
function->function.function_define,void
function->function.function_define,#
项目集2:
function->function_define,char
function->function_define,double
function->function_define,int
function->function_define,void
function->function_define,#
项目集3:
function_define->function_type.id(function_define_list){block},char
function_define->function_type.id(function_define_list){block},double
function_define->function_type.id(function_define_list){block},int
function_define->function_type.id(function_define_list){block},void
function_define->function_type.id(function_define_list){block},#
function_define->function_type.id(){block},char
function_define->function_type.id(){block},double
function_define->function_type.id(){block},int
function_define->function_type.id(){block},void
function_define->function_type.id(){block},#
项目集4:
function_type->type,id
项目集5:
function_type->void,id
项目集6:
S'->S,#
项目集7:
type->int,id
项目集8:
type->double,id
项目集9:
type->char,id
项目集10:
function->functionfunction_define,char
function->functionfunction_define,double
function->functionfunction_define,int
function->functionfunction_define,void
function->functionfunction_define,#
项目集11:
function_define->function_typeid.(function_define_list){block},char
function_define->function_typeid.(function_define_list){block},double
function_define->function_typeid.(function_define_list){block},int
function_define->function_typeid.(function_define_list){block},void
function_define->function_typeid.(function_define_list){block},#
function_define->function_typeid.(){block},char
function_define->function_typeid.(){block},double
function_define->function_typeid.(){block},int
function_define->function_typeid.(){block},void
function_define->function_typeid.(){block},#
项目集12:
type->.char,id
type->.double,id
type->.int,id
function_define_list->.function_define_list,typeid,,
function_define_list->.function_define_list,typeid,)
function_define_list->.typeid,,
function_define_list->.typeid,)
function_define->function_typeid(.function_define_list){block},char
function_define->function_typeid(.function_define_list){block},double
function_define->function_typeid(.function_define_list){block},int
function_define->function_typeid(.function_define_list){block},void
function_define->function_typeid(.function_define_list){block},#
function_define->function_typeid(.){block},char
function_define->function_typeid(.){block},double
function_define->function_typeid(.){block},int
function_define->function_typeid(.){block},void
function_define->function_typeid(.){block},#
项目集13:
function_define->function_typeid().{block},char
function_define->function_typeid().{block},double
function_define->function_typeid().{block},int
function_define->function_typeid().{block},void
function_define->function_typeid().{block},#
项目集14:
function_define_list->function_define_list.,typeid,,
function_define_list->function_define_list.,typeid,)
function_define->function_typeid(function_define_list.){block},char
function_define->function_typeid(function_define_list.){block},double
function_define->function_typeid(function_define_list.){block},int
function_define->function_typeid(function_define_list.){block},void
function_define->function_typeid(function_define_list.){block},#
项目集15:
function_define_list->type.id,,
function_define_list->type.id,)
项目集16:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(){.block},char
function_define->function_typeid(){.block},double
function_define->function_typeid(){.block},int
function_define->function_typeid(){.block},void
function_define->function_typeid(){.block},#
项目集17:
function_define->function_typeid(function_define_list).{block},char
function_define->function_typeid(function_define_list).{block},double
function_define->function_typeid(function_define_list).{block},int
function_define->function_typeid(function_define_list).{block},void
function_define->function_typeid(function_define_list).{block},#
项目集18:
type->.char,id
type->.double,id
type->.int,id
function_define_list->function_define_list,.typeid,,
function_define_list->function_define_list,.typeid,)
项目集19:
function_define_list->typeid,,
function_define_list->typeid,)
项目集20:
left->id,=
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目集21:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集22:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},while
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集23:
function_define->function_typeid(){block.},char
function_define->function_typeid(){block.},double
function_define->function_typeid(){block.},int
function_define->function_typeid(){block.},void
function_define->function_typeid(){block.},#
项目集24:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,while
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目集25:
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,;
项目集26:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,;
项目集27:
type->int,array
type->int,id
项目集28:
type->double,array
type->double,id
项目集29:
type->char,array
type->char,id
项目集30:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集31:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,while
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目集32:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
E->T,+
E->T,;
项目集33:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,;
项目集34:
left->array.[E],=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集35:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,while
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集36:
sentence->define,scanf
sentence->define,printf
sentence->define,if
sentence->define,while
sentence->define,for
sentence->define,return
sentence->define,array
sentence->define,num
sentence->define,/
sentence->define,*
sentence->define,-
sentence->define,+
sentence->define,char
sentence->define,double
sentence->define,int
sentence->define,}
sentence->define,{
sentence->define,(
sentence->define,id
项目集37:
sentence->set_value.;,scanf
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,while
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目集38:
set_value->left.=E,;
项目集39:
sentence->loop_expression,scanf
sentence->loop_expression,printf
sentence->loop_expression,if
sentence->loop_expression,while
sentence->loop_expression,for
sentence->loop_expression,return
sentence->loop_expression,array
sentence->loop_expression,num
sentence->loop_expression,/
sentence->loop_expression,*
sentence->loop_expression,-
sentence->loop_expression,+
sentence->loop_expression,char
sentence->loop_expression,double
sentence->loop_expression,int
sentence->loop_expression,}
sentence->loop_expression,{
sentence->loop_expression,(
sentence->loop_expression,id
项目集40:
sentence->while_expression,scanf
sentence->while_expression,printf
sentence->while_expression,if
sentence->while_expression,while
sentence->while_expression,for
sentence->while_expression,return
sentence->while_expression,array
sentence->while_expression,num
sentence->while_expression,/
sentence->while_expression,*
sentence->while_expression,-
sentence->while_expression,+
sentence->while_expression,char
sentence->while_expression,double
sentence->while_expression,int
sentence->while_expression,}
sentence->while_expression,{
sentence->while_expression,(
sentence->while_expression,id
项目集41:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目集42:
while_expression->while.(bool_expression)whilesentence,scanf
while_expression->while.(bool_expression)whilesentence,printf
while_expression->while.(bool_expression)whilesentence,if
while_expression->while.(bool_expression)whilesentence,while
while_expression->while.(bool_expression)whilesentence,for
while_expression->while.(bool_expression)whilesentence,return
while_expression->while.(bool_expression)whilesentence,array
while_expression->while.(bool_expression)whilesentence,num
while_expression->while.(bool_expression)whilesentence,/
while_expression->while.(bool_expression)whilesentence,*
while_expression->while.(bool_expression)whilesentence,-
while_expression->while.(bool_expression)whilesentence,+
while_expression->while.(bool_expression)whilesentence,char
while_expression->while.(bool_expression)whilesentence,double
while_expression->while.(bool_expression)whilesentence,int
while_expression->while.(bool_expression)whilesentence,}
while_expression->while.(bool_expression)whilesentence,{
while_expression->while.(bool_expression)whilesentence,(
while_expression->while.(bool_expression)whilesentence,id
项目集43:
sentence->if_expression,scanf
sentence->if_expression,printf
sentence->if_expression,if
sentence->if_expression,while
sentence->if_expression,for
sentence->if_expression,return
sentence->if_expression,array
sentence->if_expression,num
sentence->if_expression,/
sentence->if_expression,*
sentence->if_expression,-
sentence->if_expression,+
sentence->if_expression,char
sentence->if_expression,double
sentence->if_expression,int
sentence->if_expression,}
sentence->if_expression,{
sentence->if_expression,(
sentence->if_expression,id
项目集44:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,while
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)sentence,scanf
if_expression->if.(bool_expression)sentence,printf
if_expression->if.(bool_expression)sentence,if
if_expression->if.(bool_expression)sentence,while
if_expression->if.(bool_expression)sentence,for
if_expression->if.(bool_expression)sentence,return
if_expression->if.(bool_expression)sentence,array
if_expression->if.(bool_expression)sentence,num
if_expression->if.(bool_expression)sentence,/
if_expression->if.(bool_expression)sentence,*
if_expression->if.(bool_expression)sentence,-
if_expression->if.(bool_expression)sentence,+
if_expression->if.(bool_expression)sentence,char
if_expression->if.(bool_expression)sentence,double
if_expression->if.(bool_expression)sentence,int
if_expression->if.(bool_expression)sentence,}
if_expression->if.(bool_expression)sentence,{
if_expression->if.(bool_expression)sentence,(
if_expression->if.(bool_expression)sentence,id
项目集45:
sentence->inout_expression,scanf
sentence->inout_expression,printf
sentence->inout_expression,if
sentence->inout_expression,while
sentence->inout_expression,for
sentence->inout_expression,return
sentence->inout_expression,array
sentence->inout_expression,num
sentence->inout_expression,/
sentence->inout_expression,*
sentence->inout_expression,-
sentence->inout_expression,+
sentence->inout_expression,char
sentence->inout_expression,double
sentence->inout_expression,int
sentence->inout_expression,}
sentence->inout_expression,{
sentence->inout_expression,(
sentence->inout_expression,id
项目集46:
inout_expression->printf_expression,scanf
inout_expression->printf_expression,printf
inout_expression->printf_expression,if
inout_expression->printf_expression,while
inout_expression->printf_expression,for
inout_expression->printf_expression,return
inout_expression->printf_expression,array
inout_expression->printf_expression,num
inout_expression->printf_expression,/
inout_expression->printf_expression,*
inout_expression->printf_expression,-
inout_expression->printf_expression,+
inout_expression->printf_expression,char
inout_expression->printf_expression,double
inout_expression->printf_expression,int
inout_expression->printf_expression,}
inout_expression->printf_expression,{
inout_expression->printf_expression,(
inout_expression->printf_expression,id
项目集47:
inout_expression->scanf_expression,scanf
inout_expression->scanf_expression,printf
inout_expression->scanf_expression,if
inout_expression->scanf_expression,while
inout_expression->scanf_expression,for
inout_expression->scanf_expression,return
inout_expression->scanf_expression,array
inout_expression->scanf_expression,num
inout_expression->scanf_expression,/
inout_expression->scanf_expression,*
inout_expression->scanf_expression,-
inout_expression->scanf_expression,+
inout_expression->scanf_expression,char
inout_expression->scanf_expression,double
inout_expression->scanf_expression,int
inout_expression->scanf_expression,}
inout_expression->scanf_expression,{
inout_expression->scanf_expression,(
inout_expression->scanf_expression,id
项目集48:
printf_expression->printf.(string,expressions);,scanf
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,while
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,while
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目集49:
scanf_expression->scanf.(string,getaddr);,scanf
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,while
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目集50:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(function_define_list){.block},char
function_define->function_typeid(function_define_list){.block},double
function_define->function_typeid(function_define_list){.block},int
function_define->function_typeid(function_define_list){.block},void
function_define->function_typeid(function_define_list){.block},#
项目集51:
function_define_list->function_define_list,type.id,,
function_define_list->function_define_list,type.id,)
项目集52:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
function_call->.id(),,
function_call->.id(),)
项目集53:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,)
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目集54:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集55:
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,)
项目集56:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,)
项目集57:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集58:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
E->T,+
E->T,)
项目集59:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,)
项目集60:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目集61:
sentence->{block.},scanf
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},while
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目集62:
function_define->function_typeid(){block},char
function_define->function_typeid(){block},double
function_define->function_typeid(){block},int
function_define->function_typeid(){block},void
function_define->function_typeid(){block},#
项目集63:
id_name->id.;,scanf
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,while
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,while
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目集64:
id_name->array.[num]={nums};,scanf
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,while
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目集65:
define->typeid_name,scanf
define->typeid_name,printf
define->typeid_name,if
define->typeid_name,while
define->typeid_name,for
define->typeid_name,return
define->typeid_name,array
define->typeid_name,num
define->typeid_name,/
define->typeid_name,*
define->typeid_name,-
define->typeid_name,+
define->typeid_name,char
define->typeid_name,double
define->typeid_name,int
define->typeid_name,}
define->typeid_name,{
define->typeid_name,(
define->typeid_name,id
项目集66:
block->sentenceblock,}
项目集67:
sentence->E;,scanf
sentence->E;,printf
sentence->E;,if
sentence->E;,while
sentence->E;,for
sentence->E;,return
sentence->E;,array
sentence->E;,num
sentence->E;,/
sentence->E;,*
sentence->E;,-
sentence->E;,+
sentence->E;,char
sentence->E;,double
sentence->E;,int
sentence->E;,}
sentence->E;,{
sentence->E;,(
sentence->E;,id
项目集68:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集69:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集70:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集71:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集72:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集73:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目集74:
sentence->returnE.;,scanf
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,while
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集75:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集76:
sentence->set_value;,scanf
sentence->set_value;,printf
sentence->set_value;,if
sentence->set_value;,while
sentence->set_value;,for
sentence->set_value;,return
sentence->set_value;,array
sentence->set_value;,num
sentence->set_value;,/
sentence->set_value;,*
sentence->set_value;,-
sentence->set_value;,+
sentence->set_value;,char
sentence->set_value;,double
sentence->set_value;,int
sentence->set_value;,}
sentence->set_value;,{
sentence->set_value;,(
sentence->set_value;,id
项目集77:
set_value->left=.E,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集78:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集79:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,)
bool_expression->.GopH,)
while_expression->while(.bool_expression)whilesentence,scanf
while_expression->while(.bool_expression)whilesentence,printf
while_expression->while(.bool_expression)whilesentence,if
while_expression->while(.bool_expression)whilesentence,while
while_expression->while(.bool_expression)whilesentence,for
while_expression->while(.bool_expression)whilesentence,return
while_expression->while(.bool_expression)whilesentence,array
while_expression->while(.bool_expression)whilesentence,num
while_expression->while(.bool_expression)whilesentence,/
while_expression->while(.bool_expression)whilesentence,*
while_expression->while(.bool_expression)whilesentence,-
while_expression->while(.bool_expression)whilesentence,+
while_expression->while(.bool_expression)whilesentence,char
while_expression->while(.bool_expression)whilesentence,double
while_expression->while(.bool_expression)whilesentence,int
while_expression->while(.bool_expression)whilesentence,}
while_expression->while(.bool_expression)whilesentence,{
while_expression->while(.bool_expression)whilesentence,(
while_expression->while(.bool_expression)whilesentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集80:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,while
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)sentence,scanf
if_expression->if(.bool_expression)sentence,printf
if_expression->if(.bool_expression)sentence,if
if_expression->if(.bool_expression)sentence,while
if_expression->if(.bool_expression)sentence,for
if_expression->if(.bool_expression)sentence,return
if_expression->if(.bool_expression)sentence,array
if_expression->if(.bool_expression)sentence,num
if_expression->if(.bool_expression)sentence,/
if_expression->if(.bool_expression)sentence,*
if_expression->if(.bool_expression)sentence,-
if_expression->if(.bool_expression)sentence,+
if_expression->if(.bool_expression)sentence,char
if_expression->if(.bool_expression)sentence,double
if_expression->if(.bool_expression)sentence,int
if_expression->if(.bool_expression)sentence,}
if_expression->if(.bool_expression)sentence,{
if_expression->if(.bool_expression)sentence,(
if_expression->if(.bool_expression)sentence,id
bool_expression->.F,)
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集81:
printf_expression->printf(.string,expressions);,scanf
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,while
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,while
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目集82:
scanf_expression->scanf(.string,getaddr);,scanf
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,while
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目集83:
function_define->function_typeid(function_define_list){block.},char
function_define->function_typeid(function_define_list){block.},double
function_define->function_typeid(function_define_list){block.},int
function_define->function_typeid(function_define_list){block.},void
function_define->function_typeid(function_define_list){block.},#
项目集84:
function_define_list->function_define_list,typeid,,
function_define_list->function_define_list,typeid,)
项目集85:
F->id,,
F->id,)
function_call->id.(function_call_list),,
function_call->id.(function_call_list),)
function_call->id.(),,
function_call->id.(),)
项目集86:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),,
F->(.E),)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集87:
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),;
项目集88:
F->function_call,,
F->function_call,)
项目集89:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目集90:
function_call_list->F,,
function_call_list->F,)
项目集91:
F->num,,
F->num,)
项目集92:
F->array.[E],,
F->array.[E],)
项目集93:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目集94:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集95:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),;
项目集96:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集97:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集98:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集99:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集100:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集101:
sentence->{block},scanf
sentence->{block},printf
sentence->{block},if
sentence->{block},while
sentence->{block},for
sentence->{block},return
sentence->{block},array
sentence->{block},num
sentence->{block},/
sentence->{block},*
sentence->{block},-
sentence->{block},+
sentence->{block},char
sentence->{block},double
sentence->{block},int
sentence->{block},}
sentence->{block},{
sentence->{block},(
sentence->{block},id
项目集102:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,while
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目集103:
id_name->id;,scanf
id_name->id;,printf
id_name->id;,if
id_name->id;,while
id_name->id;,for
id_name->id;,return
id_name->id;,array
id_name->id;,num
id_name->id;,/
id_name->id;,*
id_name->id;,-
id_name->id;,+
id_name->id;,char
id_name->id;,double
id_name->id;,int
id_name->id;,}
id_name->id;,{
id_name->id;,(
id_name->id;,id
项目集104:
id_name->array[.num]={nums};,scanf
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,while
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目集105:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
E->E+T,+
E->E+T,;
项目集106:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
E->E-T,+
E->E-T,;
项目集107:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,;
项目集108:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,;
项目集109:
F->id,]
F->id,/
F->id,*
F->id,-
F->id,+
function_call->id.(function_call_list),]
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),]
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目集110:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集111:
F->function_call,]
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
项目集112:
T->F,]
T->F,/
T->F,*
T->F,-
T->F,+
项目集113:
left->array[E.],=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集114:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
E->T,-
E->T,+
项目集115:
F->num,]
F->num,/
F->num,*
F->num,-
F->num,+
项目集116:
F->array.[E],]
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集117:
sentence->returnE;,scanf
sentence->returnE;,printf
sentence->returnE;,if
sentence->returnE;,while
sentence->returnE;,for
sentence->returnE;,return
sentence->returnE;,array
sentence->returnE;,num
sentence->returnE;,/
sentence->returnE;,*
sentence->returnE;,-
sentence->returnE;,+
sentence->returnE;,char
sentence->returnE;,double
sentence->returnE;,int
sentence->returnE;,}
sentence->returnE;,{
sentence->returnE;,(
sentence->returnE;,id
项目集118:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集119:
set_value->left=E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集120:
left->id,=
项目集121:
left->array.[E],=
项目集122:
for_set_value->set_value,;
项目集123:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目集124:
F->id,>
F->id,<
F->id,<=
F->id,>=
F->id,/
F->id,*
F->id,-
F->id,+
F->id,)
function_call->id.(function_call_list),>
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目集125:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集126:
F->function_call,>
F->function_call,<
F->function_call,<=
F->function_call,>=
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,)
项目集127:
bool_expression->F,)
T->F,>
T->F,<
T->F,<=
T->F,>=
T->F,/
T->F,*
T->F,-
T->F,+
项目集128:
G->E,>
G->E,<
G->E,<=
G->E,>=
E->E.-T,>
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目集129:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
E->T,<
E->T,<=
E->T,>=
E->T,-
E->T,+
项目集130:
F->num,>
F->num,<
F->num,<=
F->num,>=
F->num,/
F->num,*
F->num,-
F->num,+
F->num,)
项目集131:
F->array.[E],>
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目集132:
while_expression->while(bool_expression.)whilesentence,scanf
while_expression->while(bool_expression.)whilesentence,printf
while_expression->while(bool_expression.)whilesentence,if
while_expression->while(bool_expression.)whilesentence,while
while_expression->while(bool_expression.)whilesentence,for
while_expression->while(bool_expression.)whilesentence,return
while_expression->while(bool_expression.)whilesentence,array
while_expression->while(bool_expression.)whilesentence,num
while_expression->while(bool_expression.)whilesentence,/
while_expression->while(bool_expression.)whilesentence,*
while_expression->while(bool_expression.)whilesentence,-
while_expression->while(bool_expression.)whilesentence,+
while_expression->while(bool_expression.)whilesentence,char
while_expression->while(bool_expression.)whilesentence,double
while_expression->while(bool_expression.)whilesentence,int
while_expression->while(bool_expression.)whilesentence,}
while_expression->while(bool_expression.)whilesentence,{
while_expression->while(bool_expression.)whilesentence,(
while_expression->while(bool_expression.)whilesentence,id
项目集133:
op->.>,array
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,)
项目集134:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,while
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)sentence,scanf
if_expression->if(bool_expression.)sentence,printf
if_expression->if(bool_expression.)sentence,if
if_expression->if(bool_expression.)sentence,while
if_expression->if(bool_expression.)sentence,for
if_expression->if(bool_expression.)sentence,return
if_expression->if(bool_expression.)sentence,array
if_expression->if(bool_expression.)sentence,num
if_expression->if(bool_expression.)sentence,/
if_expression->if(bool_expression.)sentence,*
if_expression->if(bool_expression.)sentence,-
if_expression->if(bool_expression.)sentence,+
if_expression->if(bool_expression.)sentence,char
if_expression->if(bool_expression.)sentence,double
if_expression->if(bool_expression.)sentence,int
if_expression->if(bool_expression.)sentence,}
if_expression->if(bool_expression.)sentence,{
if_expression->if(bool_expression.)sentence,(
if_expression->if(bool_expression.)sentence,id
项目集135:
printf_expression->printf(string.,expressions);,scanf
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,while
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,while
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目集136:
scanf_expression->scanf(string.,getaddr);,scanf
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,while
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目集137:
function_define->function_typeid(function_define_list){block},char
function_define->function_typeid(function_define_list){block},double
function_define->function_typeid(function_define_list){block},int
function_define->function_typeid(function_define_list){block},void
function_define->function_typeid(function_define_list){block},#
项目集138:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),,
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),,
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目集139:
F->(E.),,
F->(E.),)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集140:
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),;
项目集141:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->function_call_list,.F,,
function_call_list->function_call_list,.F,)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->.id(),,
function_call->.id(),)
项目集142:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],,
F->array[.E],)
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集143:
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),)
项目集144:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目集145:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),)
项目集146:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
E->E+T,+
E->E+T,)
项目集147:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
E->E-T,+
E->E-T,)
项目集148:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,)
项目集149:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,)
项目集150:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集151:
id_name->id,id_name,scanf
id_name->id,id_name,printf
id_name->id,id_name,if
id_name->id,id_name,while
id_name->id,id_name,for
id_name->id,id_name,return
id_name->id,id_name,array
id_name->id,id_name,num
id_name->id,id_name,/
id_name->id,id_name,*
id_name->id,id_name,-
id_name->id,id_name,+
id_name->id,id_name,char
id_name->id,id_name,double
id_name->id,id_name,int
id_name->id,id_name,}
id_name->id,id_name,{
id_name->id,id_name,(
id_name->id,id_name,id
项目集152:
id_name->array[num.]={nums};,scanf
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,while
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目集153:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),]
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),]
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->.id(),,
function_call->.id(),)
项目集154:
F->(E.),]
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集155:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集156:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集157:
left->array[E],=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集158:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集159:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集160:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集161:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集162:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集163:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,;
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集164:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目集165:
F->(E.),>
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集166:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集167:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集168:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集169:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集170:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集171:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
whilesentence->.sentence,scanf
whilesentence->.sentence,printf
whilesentence->.sentence,if
whilesentence->.sentence,while
whilesentence->.sentence,for
whilesentence->.sentence,return
whilesentence->.sentence,array
whilesentence->.sentence,num
whilesentence->.sentence,/
whilesentence->.sentence,*
whilesentence->.sentence,-
whilesentence->.sentence,+
whilesentence->.sentence,char
whilesentence->.sentence,double
whilesentence->.sentence,int
whilesentence->.sentence,}
whilesentence->.sentence,{
whilesentence->.sentence,(
whilesentence->.sentence,id
while_expression->while(bool_expression).whilesentence,scanf
while_expression->while(bool_expression).whilesentence,printf
while_expression->while(bool_expression).whilesentence,if
while_expression->while(bool_expression).whilesentence,while
while_expression->while(bool_expression).whilesentence,for
while_expression->while(bool_expression).whilesentence,return
while_expression->while(bool_expression).whilesentence,array
while_expression->while(bool_expression).whilesentence,num
while_expression->while(bool_expression).whilesentence,/
while_expression->while(bool_expression).whilesentence,*
while_expression->while(bool_expression).whilesentence,-
while_expression->while(bool_expression).whilesentence,+
while_expression->while(bool_expression).whilesentence,char
while_expression->while(bool_expression).whilesentence,double
while_expression->while(bool_expression).whilesentence,int
while_expression->while(bool_expression).whilesentence,}
while_expression->while(bool_expression).whilesentence,{
while_expression->while(bool_expression).whilesentence,(
while_expression->while(bool_expression).whilesentence,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集172:
H->.E,)
bool_expression->Gop.H,)
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集173:
op->>=,array
op->>=,num
op->>=,/
op->>=,*
op->>=,-
op->>=,+
op->>=,(
op->>=,id
项目集174:
op-><=,array
op-><=,num
op-><=,/
op-><=,*
op-><=,-
op-><=,+
op-><=,(
op-><=,id
项目集175:
op-><,array
op-><,num
op-><,/
op-><,*
op-><,-
op-><,+
op-><,(
op-><,id
项目集176:
op->>,array
op->>,num
op->>,/
op->>,*
op->>,-
op->>,+
op->>,(
op->>,id
项目集177:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,while
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->if(bool_expression).sentence,scanf
if_expression->if(bool_expression).sentence,printf
if_expression->if(bool_expression).sentence,if
if_expression->if(bool_expression).sentence,while
if_expression->if(bool_expression).sentence,for
if_expression->if(bool_expression).sentence,return
if_expression->if(bool_expression).sentence,array
if_expression->if(bool_expression).sentence,num
if_expression->if(bool_expression).sentence,/
if_expression->if(bool_expression).sentence,*
if_expression->if(bool_expression).sentence,-
if_expression->if(bool_expression).sentence,+
if_expression->if(bool_expression).sentence,char
if_expression->if(bool_expression).sentence,double
if_expression->if(bool_expression).sentence,int
if_expression->if(bool_expression).sentence,}
if_expression->if(bool_expression).sentence,{
if_expression->if(bool_expression).sentence,(
if_expression->if(bool_expression).sentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集178:
printf_expression->printf(string).;,scanf
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,while
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目集179:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,while
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目集180:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,while
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目集181:
function_call->id(),,
function_call->id(),)
项目集182:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),,
function_call->id(function_call_list.),)
项目集183:
F->(E),,
F->(E),)
项目集184:
function_call_list->function_call_list,F,,
function_call_list->function_call_list,F,)
项目集185:
F->array[E.],,
F->array[E.],)
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集186:
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),)
项目集187:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],)
项目集188:
id_name->array[num].={nums};,scanf
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,while
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目集189:
function_call->id(),]
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
项目集190:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),]
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目集191:
F->(E),]
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集192:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
E->E+T,-
E->E+T,+
项目集193:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
E->E-T,-
E->E-T,+
项目集194:
T->T*F,]
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集195:
T->T/F,]
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集196:
F->array[E.],]
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集197:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集198:
left->array[E.],=
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集199:
F->id,>
F->id,<
F->id,<=
F->id,>=
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
function_call->id.(function_call_list),>
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目集200:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集201:
F->function_call,>
F->function_call,<
F->function_call,<=
F->function_call,>=
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,;
项目集202:
bool_expression->F,;
T->F,>
T->F,<
T->F,<=
T->F,>=
T->F,/
T->F,*
T->F,-
T->F,+
项目集203:
F->num,>
F->num,<
F->num,<=
F->num,>=
F->num,/
F->num,*
F->num,-
F->num,+
F->num,;
项目集204:
F->array.[E],>
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集205:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目集206:
op->.>,array
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,;
项目集207:
function_call->id(),>
function_call->id(),<
function_call->id(),<=
function_call->id(),>=
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),)
项目集208:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目集209:
F->(E),>
F->(E),<
F->(E),<=
F->(E),>=
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),)
项目集210:
F->id,>
F->id,<
F->id,<=
F->id,>=
F->id,/
F->id,*
F->id,-
F->id,+
function_call->id.(function_call_list),>
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目集211:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集212:
F->function_call,>
F->function_call,<
F->function_call,<=
F->function_call,>=
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
项目集213:
T->F,>
T->F,<
T->F,<=
T->F,>=
T->F,/
T->F,*
T->F,-
T->F,+
项目集214:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
E->E+T,<
E->E+T,<=
E->E+T,>=
E->E+T,-
E->E+T,+
项目集215:
F->num,>
F->num,<
F->num,<=
F->num,>=
F->num,/
F->num,*
F->num,-
F->num,+
项目集216:
F->array.[E],>
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集217:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
E->E-T,<
E->E-T,<=
E->E-T,>=
E->E-T,-
E->E-T,+
项目集218:
T->T*F,>
T->T*F,<
T->T*F,<=
T->T*F,>=
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集219:
T->T/F,>
T->T/F,<
T->T/F,<=
T->T/F,>=
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集220:
F->array[E.],>
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集221:
whilesentence->sentence,scanf
whilesentence->sentence,printf
whilesentence->sentence,if
whilesentence->sentence,while
whilesentence->sentence,for
whilesentence->sentence,return
whilesentence->sentence,array
whilesentence->sentence,num
whilesentence->sentence,/
whilesentence->sentence,*
whilesentence->sentence,-
whilesentence->sentence,+
whilesentence->sentence,char
whilesentence->sentence,double
whilesentence->sentence,int
whilesentence->sentence,}
whilesentence->sentence,{
whilesentence->sentence,(
whilesentence->sentence,id
项目集222:
while_expression->while(bool_expression)whilesentence,scanf
while_expression->while(bool_expression)whilesentence,printf
while_expression->while(bool_expression)whilesentence,if
while_expression->while(bool_expression)whilesentence,while
while_expression->while(bool_expression)whilesentence,for
while_expression->while(bool_expression)whilesentence,return
while_expression->while(bool_expression)whilesentence,array
while_expression->while(bool_expression)whilesentence,num
while_expression->while(bool_expression)whilesentence,/
while_expression->while(bool_expression)whilesentence,*
while_expression->while(bool_expression)whilesentence,-
while_expression->while(bool_expression)whilesentence,+
while_expression->while(bool_expression)whilesentence,char
while_expression->while(bool_expression)whilesentence,double
while_expression->while(bool_expression)whilesentence,int
while_expression->while(bool_expression)whilesentence,}
while_expression->while(bool_expression)whilesentence,{
while_expression->while(bool_expression)whilesentence,(
while_expression->while(bool_expression)whilesentence,id
项目集223:
H->E,)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集224:
bool_expression->GopH,)
项目集225:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},else
sentence->{.block},if
sentence->{.block},while
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集226:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,else
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,else
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,else
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,else
define->type.id_name,if
define->type.id_name,while
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目集227:
ifsentence->sentence,else
if_expression->if(bool_expression)sentence,scanf
if_expression->if(bool_expression)sentence,printf
if_expression->if(bool_expression)sentence,if
if_expression->if(bool_expression)sentence,while
if_expression->if(bool_expression)sentence,for
if_expression->if(bool_expression)sentence,return
if_expression->if(bool_expression)sentence,array
if_expression->if(bool_expression)sentence,num
if_expression->if(bool_expression)sentence,/
if_expression->if(bool_expression)sentence,*
if_expression->if(bool_expression)sentence,-
if_expression->if(bool_expression)sentence,+
if_expression->if(bool_expression)sentence,char
if_expression->if(bool_expression)sentence,double
if_expression->if(bool_expression)sentence,int
if_expression->if(bool_expression)sentence,}
if_expression->if(bool_expression)sentence,{
if_expression->if(bool_expression)sentence,(
if_expression->if(bool_expression)sentence,id
项目集228:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
sentence->E.;,printf
sentence->E.;,else
sentence->E.;,if
sentence->E.;,while
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目集229:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,else
sentence->return.E;,if
sentence->return.E;,while
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集230:
sentence->define,scanf
sentence->define,printf
sentence->define,else
sentence->define,if
sentence->define,while
sentence->define,for
sentence->define,return
sentence->define,array
sentence->define,num
sentence->define,/
sentence->define,*
sentence->define,-
sentence->define,+
sentence->define,char
sentence->define,double
sentence->define,int
sentence->define,}
sentence->define,{
sentence->define,(
sentence->define,id
项目集231:
sentence->set_value.;,scanf
sentence->set_value.;,printf
sentence->set_value.;,else
sentence->set_value.;,if
sentence->set_value.;,while
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目集232:
sentence->loop_expression,scanf
sentence->loop_expression,printf
sentence->loop_expression,else
sentence->loop_expression,if
sentence->loop_expression,while
sentence->loop_expression,for
sentence->loop_expression,return
sentence->loop_expression,array
sentence->loop_expression,num
sentence->loop_expression,/
sentence->loop_expression,*
sentence->loop_expression,-
sentence->loop_expression,+
sentence->loop_expression,char
sentence->loop_expression,double
sentence->loop_expression,int
sentence->loop_expression,}
sentence->loop_expression,{
sentence->loop_expression,(
sentence->loop_expression,id
项目集233:
sentence->while_expression,scanf
sentence->while_expression,printf
sentence->while_expression,else
sentence->while_expression,if
sentence->while_expression,while
sentence->while_expression,for
sentence->while_expression,return
sentence->while_expression,array
sentence->while_expression,num
sentence->while_expression,/
sentence->while_expression,*
sentence->while_expression,-
sentence->while_expression,+
sentence->while_expression,char
sentence->while_expression,double
sentence->while_expression,int
sentence->while_expression,}
sentence->while_expression,{
sentence->while_expression,(
sentence->while_expression,id
项目集234:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目集235:
while_expression->while.(bool_expression)whilesentence,scanf
while_expression->while.(bool_expression)whilesentence,printf
while_expression->while.(bool_expression)whilesentence,else
while_expression->while.(bool_expression)whilesentence,if
while_expression->while.(bool_expression)whilesentence,while
while_expression->while.(bool_expression)whilesentence,for
while_expression->while.(bool_expression)whilesentence,return
while_expression->while.(bool_expression)whilesentence,array
while_expression->while.(bool_expression)whilesentence,num
while_expression->while.(bool_expression)whilesentence,/
while_expression->while.(bool_expression)whilesentence,*
while_expression->while.(bool_expression)whilesentence,-
while_expression->while.(bool_expression)whilesentence,+
while_expression->while.(bool_expression)whilesentence,char
while_expression->while.(bool_expression)whilesentence,double
while_expression->while.(bool_expression)whilesentence,int
while_expression->while.(bool_expression)whilesentence,}
while_expression->while.(bool_expression)whilesentence,{
while_expression->while.(bool_expression)whilesentence,(
while_expression->while.(bool_expression)whilesentence,id
项目集236:
sentence->if_expression,scanf
sentence->if_expression,printf
sentence->if_expression,else
sentence->if_expression,if
sentence->if_expression,while
sentence->if_expression,for
sentence->if_expression,return
sentence->if_expression,array
sentence->if_expression,num
sentence->if_expression,/
sentence->if_expression,*
sentence->if_expression,-
sentence->if_expression,+
sentence->if_expression,char
sentence->if_expression,double
sentence->if_expression,int
sentence->if_expression,}
sentence->if_expression,{
sentence->if_expression,(
sentence->if_expression,id
项目集237:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,else
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,while
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)sentence,scanf
if_expression->if.(bool_expression)sentence,printf
if_expression->if.(bool_expression)sentence,else
if_expression->if.(bool_expression)sentence,if
if_expression->if.(bool_expression)sentence,while
if_expression->if.(bool_expression)sentence,for
if_expression->if.(bool_expression)sentence,return
if_expression->if.(bool_expression)sentence,array
if_expression->if.(bool_expression)sentence,num
if_expression->if.(bool_expression)sentence,/
if_expression->if.(bool_expression)sentence,*
if_expression->if.(bool_expression)sentence,-
if_expression->if.(bool_expression)sentence,+
if_expression->if.(bool_expression)sentence,char
if_expression->if.(bool_expression)sentence,double
if_expression->if.(bool_expression)sentence,int
if_expression->if.(bool_expression)sentence,}
if_expression->if.(bool_expression)sentence,{
if_expression->if.(bool_expression)sentence,(
if_expression->if.(bool_expression)sentence,id
项目集238:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,while
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目集239:
sentence->inout_expression,scanf
sentence->inout_expression,printf
sentence->inout_expression,else
sentence->inout_expression,if
sentence->inout_expression,while
sentence->inout_expression,for
sentence->inout_expression,return
sentence->inout_expression,array
sentence->inout_expression,num
sentence->inout_expression,/
sentence->inout_expression,*
sentence->inout_expression,-
sentence->inout_expression,+
sentence->inout_expression,char
sentence->inout_expression,double
sentence->inout_expression,int
sentence->inout_expression,}
sentence->inout_expression,{
sentence->inout_expression,(
sentence->inout_expression,id
项目集240:
inout_expression->printf_expression,scanf
inout_expression->printf_expression,printf
inout_expression->printf_expression,else
inout_expression->printf_expression,if
inout_expression->printf_expression,while
inout_expression->printf_expression,for
inout_expression->printf_expression,return
inout_expression->printf_expression,array
inout_expression->printf_expression,num
inout_expression->printf_expression,/
inout_expression->printf_expression,*
inout_expression->printf_expression,-
inout_expression->printf_expression,+
inout_expression->printf_expression,char
inout_expression->printf_expression,double
inout_expression->printf_expression,int
inout_expression->printf_expression,}
inout_expression->printf_expression,{
inout_expression->printf_expression,(
inout_expression->printf_expression,id
项目集241:
inout_expression->scanf_expression,scanf
inout_expression->scanf_expression,printf
inout_expression->scanf_expression,else
inout_expression->scanf_expression,if
inout_expression->scanf_expression,while
inout_expression->scanf_expression,for
inout_expression->scanf_expression,return
inout_expression->scanf_expression,array
inout_expression->scanf_expression,num
inout_expression->scanf_expression,/
inout_expression->scanf_expression,*
inout_expression->scanf_expression,-
inout_expression->scanf_expression,+
inout_expression->scanf_expression,char
inout_expression->scanf_expression,double
inout_expression->scanf_expression,int
inout_expression->scanf_expression,}
inout_expression->scanf_expression,{
inout_expression->scanf_expression,(
inout_expression->scanf_expression,id
项目集242:
printf_expression->printf.(string,expressions);,scanf
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,else
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,while
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,else
printf_expression->printf.(string);,if
printf_expression->printf.(string);,while
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目集243:
scanf_expression->scanf.(string,getaddr);,scanf
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,else
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,while
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目集244:
printf_expression->printf(string);,scanf
printf_expression->printf(string);,printf
printf_expression->printf(string);,if
printf_expression->printf(string);,while
printf_expression->printf(string);,for
printf_expression->printf(string);,return
printf_expression->printf(string);,array
printf_expression->printf(string);,num
printf_expression->printf(string);,/
printf_expression->printf(string);,*
printf_expression->printf(string);,-
printf_expression->printf(string);,+
printf_expression->printf(string);,char
printf_expression->printf(string);,double
printf_expression->printf(string);,int
printf_expression->printf(string);,}
printf_expression->printf(string);,{
printf_expression->printf(string);,(
printf_expression->printf(string);,id
项目集245:
expressions->id,)
expressions->id.,expressions,)
项目集246:
printf_expression->printf(string,expressions.);,scanf
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,while
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目集247:
scanf_expression->scanf(string,getaddr.);,scanf
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,while
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目集248:
getaddr->&.id,)
项目集249:
function_call->id(function_call_list),,
function_call->id(function_call_list),)
项目集250:
F->array[E],,
F->array[E],)
项目集251:
id_name->array[num]=.{nums};,scanf
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,while
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目集252:
function_call->id(function_call_list),]
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
项目集253:
F->array[E],]
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集254:
left->array[E],=
项目集255:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
function_call->.id(),,
function_call->.id(),)
项目集256:
F->(E.),>
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集257:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集258:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目集259:
H->.E,;
bool_expression->Gop.H,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集260:
function_call->id(function_call_list),>
function_call->id(function_call_list),<
function_call->id(function_call_list),<=
function_call->id(function_call_list),>=
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),)
项目集261:
F->.function_call,,
F->.function_call,)
F->.array[E],,
F->.array[E],)
F->.id,,
F->.id,)
F->.num,,
F->.num,)
F->.(E),,
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->.id(),,
function_call->.id(),)
项目集262:
F->(E.),>
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集263:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集264:
F->array[E],>
F->array[E],<
F->array[E],<=
F->array[E],>=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],)
项目集265:
sentence->{block.},scanf
sentence->{block.},printf
sentence->{block.},else
sentence->{block.},if
sentence->{block.},while
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目集266:
id_name->id.;,scanf
id_name->id.;,printf
id_name->id.;,else
id_name->id.;,if
id_name->id.;,while
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
id_name->id.,id_name,printf
id_name->id.,id_name,else
id_name->id.,id_name,if
id_name->id.,id_name,while
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目集267:
id_name->array.[num]={nums};,scanf
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,else
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,while
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目集268:
define->typeid_name,scanf
define->typeid_name,printf
define->typeid_name,else
define->typeid_name,if
define->typeid_name,while
define->typeid_name,for
define->typeid_name,return
define->typeid_name,array
define->typeid_name,num
define->typeid_name,/
define->typeid_name,*
define->typeid_name,-
define->typeid_name,+
define->typeid_name,char
define->typeid_name,double
define->typeid_name,int
define->typeid_name,}
define->typeid_name,{
define->typeid_name,(
define->typeid_name,id
项目集269:
sentence->E;,scanf
sentence->E;,printf
sentence->E;,else
sentence->E;,if
sentence->E;,while
sentence->E;,for
sentence->E;,return
sentence->E;,array
sentence->E;,num
sentence->E;,/
sentence->E;,*
sentence->E;,-
sentence->E;,+
sentence->E;,char
sentence->E;,double
sentence->E;,int
sentence->E;,}
sentence->E;,{
sentence->E;,(
sentence->E;,id
项目集270:
sentence->returnE.;,scanf
sentence->returnE.;,printf
sentence->returnE.;,else
sentence->returnE.;,if
sentence->returnE.;,while
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集271:
sentence->set_value;,scanf
sentence->set_value;,printf
sentence->set_value;,else
sentence->set_value;,if
sentence->set_value;,while
sentence->set_value;,for
sentence->set_value;,return
sentence->set_value;,array
sentence->set_value;,num
sentence->set_value;,/
sentence->set_value;,*
sentence->set_value;,-
sentence->set_value;,+
sentence->set_value;,char
sentence->set_value;,double
sentence->set_value;,int
sentence->set_value;,}
sentence->set_value;,{
sentence->set_value;,(
sentence->set_value;,id
项目集272:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集273:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,)
bool_expression->.GopH,)
while_expression->while(.bool_expression)whilesentence,scanf
while_expression->while(.bool_expression)whilesentence,printf
while_expression->while(.bool_expression)whilesentence,else
while_expression->while(.bool_expression)whilesentence,if
while_expression->while(.bool_expression)whilesentence,while
while_expression->while(.bool_expression)whilesentence,for
while_expression->while(.bool_expression)whilesentence,return
while_expression->while(.bool_expression)whilesentence,array
while_expression->while(.bool_expression)whilesentence,num
while_expression->while(.bool_expression)whilesentence,/
while_expression->while(.bool_expression)whilesentence,*
while_expression->while(.bool_expression)whilesentence,-
while_expression->while(.bool_expression)whilesentence,+
while_expression->while(.bool_expression)whilesentence,char
while_expression->while(.bool_expression)whilesentence,double
while_expression->while(.bool_expression)whilesentence,int
while_expression->while(.bool_expression)whilesentence,}
while_expression->while(.bool_expression)whilesentence,{
while_expression->while(.bool_expression)whilesentence,(
while_expression->while(.bool_expression)whilesentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集274:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,else
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,while
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)sentence,scanf
if_expression->if(.bool_expression)sentence,printf
if_expression->if(.bool_expression)sentence,else
if_expression->if(.bool_expression)sentence,if
if_expression->if(.bool_expression)sentence,while
if_expression->if(.bool_expression)sentence,for
if_expression->if(.bool_expression)sentence,return
if_expression->if(.bool_expression)sentence,array
if_expression->if(.bool_expression)sentence,num
if_expression->if(.bool_expression)sentence,/
if_expression->if(.bool_expression)sentence,*
if_expression->if(.bool_expression)sentence,-
if_expression->if(.bool_expression)sentence,+
if_expression->if(.bool_expression)sentence,char
if_expression->if(.bool_expression)sentence,double
if_expression->if(.bool_expression)sentence,int
if_expression->if(.bool_expression)sentence,}
if_expression->if(.bool_expression)sentence,{
if_expression->if(.bool_expression)sentence,(
if_expression->if(.bool_expression)sentence,id
bool_expression->.F,)
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集275:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,while
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集276:
printf_expression->printf(.string,expressions);,scanf
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,else
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,while
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,else
printf_expression->printf(.string);,if
printf_expression->printf(.string);,while
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目集277:
scanf_expression->scanf(.string,getaddr);,scanf
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,else
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,while
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目集278:
expressions->.id,)
expressions->id,.expressions,)
expressions->.id,expressions,)
项目集279:
printf_expression->printf(string,expressions).;,scanf
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,while
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目集280:
scanf_expression->scanf(string,getaddr).;,scanf
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,while
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目集281:
getaddr->&id,)
项目集282:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,while
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目集283:
function_call->id(),>
function_call->id(),<
function_call->id(),<=
function_call->id(),>=
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),;
项目集284:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目集285:
F->(E),>
F->(E),<
F->(E),<=
F->(E),>=
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),;
项目集286:
F->array[E.],>
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集287:
Dec_expression->id.--,)
Inc_expression->id.++,)
项目集288:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目集289:
IncorDec->Inc_expression,)
项目集290:
IncorDec->Dec_expression,)
项目集291:
H->E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集292:
bool_expression->GopH,;
项目集293:
function_call->id(),>
function_call->id(),<
function_call->id(),<=
function_call->id(),>=
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
项目集294:
function_call_list->function_call_list.,F,,
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目集295:
F->(E),>
F->(E),<
F->(E),<=
F->(E),>=
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集296:
F->array[E.],>
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集297:
sentence->{block},scanf
sentence->{block},printf
sentence->{block},else
sentence->{block},if
sentence->{block},while
sentence->{block},for
sentence->{block},return
sentence->{block},array
sentence->{block},num
sentence->{block},/
sentence->{block},*
sentence->{block},-
sentence->{block},+
sentence->{block},char
sentence->{block},double
sentence->{block},int
sentence->{block},}
sentence->{block},{
sentence->{block},(
sentence->{block},id
项目集298:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,else
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,else
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,else
id_name->id,.id_name,if
id_name->id,.id_name,while
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,else
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目集299:
id_name->id;,scanf
id_name->id;,printf
id_name->id;,else
id_name->id;,if
id_name->id;,while
id_name->id;,for
id_name->id;,return
id_name->id;,array
id_name->id;,num
id_name->id;,/
id_name->id;,*
id_name->id;,-
id_name->id;,+
id_name->id;,char
id_name->id;,double
id_name->id;,int
id_name->id;,}
id_name->id;,{
id_name->id;,(
id_name->id;,id
项目集300:
id_name->array[.num]={nums};,scanf
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,else
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,while
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目集301:
sentence->returnE;,scanf
sentence->returnE;,printf
sentence->returnE;,else
sentence->returnE;,if
sentence->returnE;,while
sentence->returnE;,for
sentence->returnE;,return
sentence->returnE;,array
sentence->returnE;,num
sentence->returnE;,/
sentence->returnE;,*
sentence->returnE;,-
sentence->returnE;,+
sentence->returnE;,char
sentence->returnE;,double
sentence->returnE;,int
sentence->returnE;,}
sentence->returnE;,{
sentence->returnE;,(
sentence->returnE;,id
项目集302:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目集303:
while_expression->while(bool_expression.)whilesentence,scanf
while_expression->while(bool_expression.)whilesentence,printf
while_expression->while(bool_expression.)whilesentence,else
while_expression->while(bool_expression.)whilesentence,if
while_expression->while(bool_expression.)whilesentence,while
while_expression->while(bool_expression.)whilesentence,for
while_expression->while(bool_expression.)whilesentence,return
while_expression->while(bool_expression.)whilesentence,array
while_expression->while(bool_expression.)whilesentence,num
while_expression->while(bool_expression.)whilesentence,/
while_expression->while(bool_expression.)whilesentence,*
while_expression->while(bool_expression.)whilesentence,-
while_expression->while(bool_expression.)whilesentence,+
while_expression->while(bool_expression.)whilesentence,char
while_expression->while(bool_expression.)whilesentence,double
while_expression->while(bool_expression.)whilesentence,int
while_expression->while(bool_expression.)whilesentence,}
while_expression->while(bool_expression.)whilesentence,{
while_expression->while(bool_expression.)whilesentence,(
while_expression->while(bool_expression.)whilesentence,id
项目集304:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,else
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,while
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)sentence,scanf
if_expression->if(bool_expression.)sentence,printf
if_expression->if(bool_expression.)sentence,else
if_expression->if(bool_expression.)sentence,if
if_expression->if(bool_expression.)sentence,while
if_expression->if(bool_expression.)sentence,for
if_expression->if(bool_expression.)sentence,return
if_expression->if(bool_expression.)sentence,array
if_expression->if(bool_expression.)sentence,num
if_expression->if(bool_expression.)sentence,/
if_expression->if(bool_expression.)sentence,*
if_expression->if(bool_expression.)sentence,-
if_expression->if(bool_expression.)sentence,+
if_expression->if(bool_expression.)sentence,char
if_expression->if(bool_expression.)sentence,double
if_expression->if(bool_expression.)sentence,int
if_expression->if(bool_expression.)sentence,}
if_expression->if(bool_expression.)sentence,{
if_expression->if(bool_expression.)sentence,(
if_expression->if(bool_expression.)sentence,id
项目集305:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
if_expression->if(bool_expression)ifsentenceelsesentence,printf
if_expression->if(bool_expression)ifsentenceelsesentence,if
if_expression->if(bool_expression)ifsentenceelsesentence,while
if_expression->if(bool_expression)ifsentenceelsesentence,for
if_expression->if(bool_expression)ifsentenceelsesentence,return
if_expression->if(bool_expression)ifsentenceelsesentence,array
if_expression->if(bool_expression)ifsentenceelsesentence,num
if_expression->if(bool_expression)ifsentenceelsesentence,/
if_expression->if(bool_expression)ifsentenceelsesentence,*
if_expression->if(bool_expression)ifsentenceelsesentence,-
if_expression->if(bool_expression)ifsentenceelsesentence,+
if_expression->if(bool_expression)ifsentenceelsesentence,char
if_expression->if(bool_expression)ifsentenceelsesentence,double
if_expression->if(bool_expression)ifsentenceelsesentence,int
if_expression->if(bool_expression)ifsentenceelsesentence,}
if_expression->if(bool_expression)ifsentenceelsesentence,{
if_expression->if(bool_expression)ifsentenceelsesentence,(
if_expression->if(bool_expression)ifsentenceelsesentence,id
项目集306:
printf_expression->printf(string.,expressions);,scanf
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,else
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,while
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,else
printf_expression->printf(string.);,if
printf_expression->printf(string.);,while
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目集307:
scanf_expression->scanf(string.,getaddr);,scanf
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,else
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,while
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目集308:
expressions->id,expressions,)
项目集309:
printf_expression->printf(string,expressions);,scanf
printf_expression->printf(string,expressions);,printf
printf_expression->printf(string,expressions);,if
printf_expression->printf(string,expressions);,while
printf_expression->printf(string,expressions);,for
printf_expression->printf(string,expressions);,return
printf_expression->printf(string,expressions);,array
printf_expression->printf(string,expressions);,num
printf_expression->printf(string,expressions);,/
printf_expression->printf(string,expressions);,*
printf_expression->printf(string,expressions);,-
printf_expression->printf(string,expressions);,+
printf_expression->printf(string,expressions);,char
printf_expression->printf(string,expressions);,double
printf_expression->printf(string,expressions);,int
printf_expression->printf(string,expressions);,}
printf_expression->printf(string,expressions);,{
printf_expression->printf(string,expressions);,(
printf_expression->printf(string,expressions);,id
项目集310:
scanf_expression->scanf(string,getaddr);,scanf
scanf_expression->scanf(string,getaddr);,printf
scanf_expression->scanf(string,getaddr);,if
scanf_expression->scanf(string,getaddr);,while
scanf_expression->scanf(string,getaddr);,for
scanf_expression->scanf(string,getaddr);,return
scanf_expression->scanf(string,getaddr);,array
scanf_expression->scanf(string,getaddr);,num
scanf_expression->scanf(string,getaddr);,/
scanf_expression->scanf(string,getaddr);,*
scanf_expression->scanf(string,getaddr);,-
scanf_expression->scanf(string,getaddr);,+
scanf_expression->scanf(string,getaddr);,char
scanf_expression->scanf(string,getaddr);,double
scanf_expression->scanf(string,getaddr);,int
scanf_expression->scanf(string,getaddr);,}
scanf_expression->scanf(string,getaddr);,{
scanf_expression->scanf(string,getaddr);,(
scanf_expression->scanf(string,getaddr);,id
项目集311:
nums->num,}
nums->num.,nums,}
项目集312:
id_name->array[num]={nums.};,scanf
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,while
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目集313:
function_call->id(function_call_list),>
function_call->id(function_call_list),<
function_call->id(function_call_list),<=
function_call->id(function_call_list),>=
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),;
项目集314:
F->array[E],>
F->array[E],<
F->array[E],<=
F->array[E],>=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集315:
Inc_expression->id++,)
项目集316:
Dec_expression->id--,)
项目集317:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,while
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集318:
function_call->id(function_call_list),>
function_call->id(function_call_list),<
function_call->id(function_call_list),<=
function_call->id(function_call_list),>=
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
项目集319:
F->array[E],>
F->array[E],<
F->array[E],<=
F->array[E],>=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集320:
id_name->id,id_name,scanf
id_name->id,id_name,printf
id_name->id,id_name,else
id_name->id,id_name,if
id_name->id,id_name,while
id_name->id,id_name,for
id_name->id,id_name,return
id_name->id,id_name,array
id_name->id,id_name,num
id_name->id,id_name,/
id_name->id,id_name,*
id_name->id,id_name,-
id_name->id,id_name,+
id_name->id,id_name,char
id_name->id,id_name,double
id_name->id,id_name,int
id_name->id,id_name,}
id_name->id,id_name,{
id_name->id,id_name,(
id_name->id,id_name,id
项目集321:
id_name->array[num.]={nums};,scanf
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,else
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,while
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目集322:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,;
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集323:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
whilesentence->.sentence,scanf
whilesentence->.sentence,printf
whilesentence->.sentence,else
whilesentence->.sentence,if
whilesentence->.sentence,while
whilesentence->.sentence,for
whilesentence->.sentence,return
whilesentence->.sentence,array
whilesentence->.sentence,num
whilesentence->.sentence,/
whilesentence->.sentence,*
whilesentence->.sentence,-
whilesentence->.sentence,+
whilesentence->.sentence,char
whilesentence->.sentence,double
whilesentence->.sentence,int
whilesentence->.sentence,}
whilesentence->.sentence,{
whilesentence->.sentence,(
whilesentence->.sentence,id
while_expression->while(bool_expression).whilesentence,scanf
while_expression->while(bool_expression).whilesentence,printf
while_expression->while(bool_expression).whilesentence,else
while_expression->while(bool_expression).whilesentence,if
while_expression->while(bool_expression).whilesentence,while
while_expression->while(bool_expression).whilesentence,for
while_expression->while(bool_expression).whilesentence,return
while_expression->while(bool_expression).whilesentence,array
while_expression->while(bool_expression).whilesentence,num
while_expression->while(bool_expression).whilesentence,/
while_expression->while(bool_expression).whilesentence,*
while_expression->while(bool_expression).whilesentence,-
while_expression->while(bool_expression).whilesentence,+
while_expression->while(bool_expression).whilesentence,char
while_expression->while(bool_expression).whilesentence,double
while_expression->while(bool_expression).whilesentence,int
while_expression->while(bool_expression).whilesentence,}
while_expression->while(bool_expression).whilesentence,{
while_expression->while(bool_expression).whilesentence,(
while_expression->while(bool_expression).whilesentence,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集324:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,while
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->if(bool_expression).sentence,scanf
if_expression->if(bool_expression).sentence,printf
if_expression->if(bool_expression).sentence,else
if_expression->if(bool_expression).sentence,if
if_expression->if(bool_expression).sentence,while
if_expression->if(bool_expression).sentence,for
if_expression->if(bool_expression).sentence,return
if_expression->if(bool_expression).sentence,array
if_expression->if(bool_expression).sentence,num
if_expression->if(bool_expression).sentence,/
if_expression->if(bool_expression).sentence,*
if_expression->if(bool_expression).sentence,-
if_expression->if(bool_expression).sentence,+
if_expression->if(bool_expression).sentence,char
if_expression->if(bool_expression).sentence,double
if_expression->if(bool_expression).sentence,int
if_expression->if(bool_expression).sentence,}
if_expression->if(bool_expression).sentence,{
if_expression->if(bool_expression).sentence,(
if_expression->if(bool_expression).sentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集325:
printf_expression->printf(string).;,scanf
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,else
printf_expression->printf(string).;,if
printf_expression->printf(string).;,while
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目集326:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,else
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,while
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目集327:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,else
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,while
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目集328:
nums->.num,}
nums->num,.nums,}
nums->.num,nums,}
项目集329:
id_name->array[num]={nums}.;,scanf
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,while
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目集330:
forsentence->sentence,scanf
forsentence->sentence,printf
forsentence->sentence,if
forsentence->sentence,while
forsentence->sentence,for
forsentence->sentence,return
forsentence->sentence,array
forsentence->sentence,num
forsentence->sentence,/
forsentence->sentence,*
forsentence->sentence,-
forsentence->sentence,+
forsentence->sentence,char
forsentence->sentence,double
forsentence->sentence,int
forsentence->sentence,}
forsentence->sentence,{
forsentence->sentence,(
forsentence->sentence,id
项目集331:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
项目集332:
id_name->array[num].={nums};,scanf
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,else
id_name->array[num].={nums};,if
id_name->array[num].={nums};,while
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目集333:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目集334:
whilesentence->sentence,scanf
whilesentence->sentence,printf
whilesentence->sentence,else
whilesentence->sentence,if
whilesentence->sentence,while
whilesentence->sentence,for
whilesentence->sentence,return
whilesentence->sentence,array
whilesentence->sentence,num
whilesentence->sentence,/
whilesentence->sentence,*
whilesentence->sentence,-
whilesentence->sentence,+
whilesentence->sentence,char
whilesentence->sentence,double
whilesentence->sentence,int
whilesentence->sentence,}
whilesentence->sentence,{
whilesentence->sentence,(
whilesentence->sentence,id
项目集335:
while_expression->while(bool_expression)whilesentence,scanf
while_expression->while(bool_expression)whilesentence,printf
while_expression->while(bool_expression)whilesentence,else
while_expression->while(bool_expression)whilesentence,if
while_expression->while(bool_expression)whilesentence,while
while_expression->while(bool_expression)whilesentence,for
while_expression->while(bool_expression)whilesentence,return
while_expression->while(bool_expression)whilesentence,array
while_expression->while(bool_expression)whilesentence,num
while_expression->while(bool_expression)whilesentence,/
while_expression->while(bool_expression)whilesentence,*
while_expression->while(bool_expression)whilesentence,-
while_expression->while(bool_expression)whilesentence,+
while_expression->while(bool_expression)whilesentence,char
while_expression->while(bool_expression)whilesentence,double
while_expression->while(bool_expression)whilesentence,int
while_expression->while(bool_expression)whilesentence,}
while_expression->while(bool_expression)whilesentence,{
while_expression->while(bool_expression)whilesentence,(
while_expression->while(bool_expression)whilesentence,id
项目集336:
ifsentence->sentence,else
if_expression->if(bool_expression)sentence,scanf
if_expression->if(bool_expression)sentence,printf
if_expression->if(bool_expression)sentence,else
if_expression->if(bool_expression)sentence,if
if_expression->if(bool_expression)sentence,while
if_expression->if(bool_expression)sentence,for
if_expression->if(bool_expression)sentence,return
if_expression->if(bool_expression)sentence,array
if_expression->if(bool_expression)sentence,num
if_expression->if(bool_expression)sentence,/
if_expression->if(bool_expression)sentence,*
if_expression->if(bool_expression)sentence,-
if_expression->if(bool_expression)sentence,+
if_expression->if(bool_expression)sentence,char
if_expression->if(bool_expression)sentence,double
if_expression->if(bool_expression)sentence,int
if_expression->if(bool_expression)sentence,}
if_expression->if(bool_expression)sentence,{
if_expression->if(bool_expression)sentence,(
if_expression->if(bool_expression)sentence,id
项目集337:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,else
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,while
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目集338:
printf_expression->printf(string);,scanf
printf_expression->printf(string);,printf
printf_expression->printf(string);,else
printf_expression->printf(string);,if
printf_expression->printf(string);,while
printf_expression->printf(string);,for
printf_expression->printf(string);,return
printf_expression->printf(string);,array
printf_expression->printf(string);,num
printf_expression->printf(string);,/
printf_expression->printf(string);,*
printf_expression->printf(string);,-
printf_expression->printf(string);,+
printf_expression->printf(string);,char
printf_expression->printf(string);,double
printf_expression->printf(string);,int
printf_expression->printf(string);,}
printf_expression->printf(string);,{
printf_expression->printf(string);,(
printf_expression->printf(string);,id
项目集339:
printf_expression->printf(string,expressions.);,scanf
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,else
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,while
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目集340:
scanf_expression->scanf(string,getaddr.);,scanf
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,else
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,while
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目集341:
nums->num,nums,}
项目集342:
id_name->array[num]={nums};,scanf
id_name->array[num]={nums};,printf
id_name->array[num]={nums};,if
id_name->array[num]={nums};,while
id_name->array[num]={nums};,for
id_name->array[num]={nums};,return
id_name->array[num]={nums};,array
id_name->array[num]={nums};,num
id_name->array[num]={nums};,/
id_name->array[num]={nums};,*
id_name->array[num]={nums};,-
id_name->array[num]={nums};,+
id_name->array[num]={nums};,char
id_name->array[num]={nums};,double
id_name->array[num]={nums};,int
id_name->array[num]={nums};,}
id_name->array[num]={nums};,{
id_name->array[num]={nums};,(
id_name->array[num]={nums};,id
项目集343:
id_name->array[num]=.{nums};,scanf
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,else
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,while
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目集344:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目集345:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,while
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集346:
printf_expression->printf(string,expressions).;,scanf
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,else
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,while
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目集347:
scanf_expression->scanf(string,getaddr).;,scanf
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,else
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,while
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目集348:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,else
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,while
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目集349:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目集350:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
if_expression->if(bool_expression)ifsentenceelsesentence,printf
if_expression->if(bool_expression)ifsentenceelsesentence,else
if_expression->if(bool_expression)ifsentenceelsesentence,if
if_expression->if(bool_expression)ifsentenceelsesentence,while
if_expression->if(bool_expression)ifsentenceelsesentence,for
if_expression->if(bool_expression)ifsentenceelsesentence,return
if_expression->if(bool_expression)ifsentenceelsesentence,array
if_expression->if(bool_expression)ifsentenceelsesentence,num
if_expression->if(bool_expression)ifsentenceelsesentence,/
if_expression->if(bool_expression)ifsentenceelsesentence,*
if_expression->if(bool_expression)ifsentenceelsesentence,-
if_expression->if(bool_expression)ifsentenceelsesentence,+
if_expression->if(bool_expression)ifsentenceelsesentence,char
if_expression->if(bool_expression)ifsentenceelsesentence,double
if_expression->if(bool_expression)ifsentenceelsesentence,int
if_expression->if(bool_expression)ifsentenceelsesentence,}
if_expression->if(bool_expression)ifsentenceelsesentence,{
if_expression->if(bool_expression)ifsentenceelsesentence,(
if_expression->if(bool_expression)ifsentenceelsesentence,id
项目集351:
printf_expression->printf(string,expressions);,scanf
printf_expression->printf(string,expressions);,printf
printf_expression->printf(string,expressions);,else
printf_expression->printf(string,expressions);,if
printf_expression->printf(string,expressions);,while
printf_expression->printf(string,expressions);,for
printf_expression->printf(string,expressions);,return
printf_expression->printf(string,expressions);,array
printf_expression->printf(string,expressions);,num
printf_expression->printf(string,expressions);,/
printf_expression->printf(string,expressions);,*
printf_expression->printf(string,expressions);,-
printf_expression->printf(string,expressions);,+
printf_expression->printf(string,expressions);,char
printf_expression->printf(string,expressions);,double
printf_expression->printf(string,expressions);,int
printf_expression->printf(string,expressions);,}
printf_expression->printf(string,expressions);,{
printf_expression->printf(string,expressions);,(
printf_expression->printf(string,expressions);,id
项目集352:
scanf_expression->scanf(string,getaddr);,scanf
scanf_expression->scanf(string,getaddr);,printf
scanf_expression->scanf(string,getaddr);,else
scanf_expression->scanf(string,getaddr);,if
scanf_expression->scanf(string,getaddr);,while
scanf_expression->scanf(string,getaddr);,for
scanf_expression->scanf(string,getaddr);,return
scanf_expression->scanf(string,getaddr);,array
scanf_expression->scanf(string,getaddr);,num
scanf_expression->scanf(string,getaddr);,/
scanf_expression->scanf(string,getaddr);,*
scanf_expression->scanf(string,getaddr);,-
scanf_expression->scanf(string,getaddr);,+
scanf_expression->scanf(string,getaddr);,char
scanf_expression->scanf(string,getaddr);,double
scanf_expression->scanf(string,getaddr);,int
scanf_expression->scanf(string,getaddr);,}
scanf_expression->scanf(string,getaddr);,{
scanf_expression->scanf(string,getaddr);,(
scanf_expression->scanf(string,getaddr);,id
项目集353:
id_name->array[num]={nums.};,scanf
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,else
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,while
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目集354:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,else
forsentence->.sentence,if
forsentence->.sentence,while
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
while_expression->.while(bool_expression)whilesentence,scanf
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集355:
id_name->array[num]={nums}.;,scanf
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,else
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,while
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目集356:
forsentence->sentence,scanf
forsentence->sentence,printf
forsentence->sentence,else
forsentence->sentence,if
forsentence->sentence,while
forsentence->sentence,for
forsentence->sentence,return
forsentence->sentence,array
forsentence->sentence,num
forsentence->sentence,/
forsentence->sentence,*
forsentence->sentence,-
forsentence->sentence,+
forsentence->sentence,char
forsentence->sentence,double
forsentence->sentence,int
forsentence->sentence,}
forsentence->sentence,{
forsentence->sentence,(
forsentence->sentence,id
项目集357:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
项目集358:
id_name->array[num]={nums};,scanf
id_name->array[num]={nums};,printf
id_name->array[num]={nums};,else
id_name->array[num]={nums};,if
id_name->array[num]={nums};,while
id_name->array[num]={nums};,for
id_name->array[num]={nums};,return
id_name->array[num]={nums};,array
id_name->array[num]={nums};,num
id_name->array[num]={nums};,/
id_name->array[num]={nums};,*
id_name->array[num]={nums};,-
id_name->array[num]={nums};,+
id_name->array[num]={nums};,char
id_name->array[num]={nums};,double
id_name->array[num]={nums};,int
id_name->array[num]={nums};,}
id_name->array[num]={nums};,{
id_name->array[num]={nums};,(
id_name->array[num]={nums};,id
项目0:
S'->.S,#
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
S->.function,#
function_type->.void,id
shift:5
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->.functionfunction_define,char
function->.functionfunction_define,double
function->.functionfunction_define,int
function->.functionfunction_define,void
function->.functionfunction_define,#
function->.function_define,char
function->.function_define,double
function->.function_define,int
function->.function_define,void
function->.function_define,#
项目1:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
S->function,#
reduce:12
function_type->.void,id
shift:5
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->function.function_define,char
function->function.function_define,double
function->function.function_define,int
function->function.function_define,void
function->function.function_define,#
项目2:
function->function_define,char
reduce:0
function->function_define,double
reduce:0
function->function_define,int
reduce:0
function->function_define,void
reduce:0
function->function_define,#
reduce:0
项目3:
function_define->function_type.id(function_define_list){block},char
shift:11
function_define->function_type.id(function_define_list){block},double
function_define->function_type.id(function_define_list){block},int
function_define->function_type.id(function_define_list){block},void
function_define->function_type.id(function_define_list){block},#
function_define->function_type.id(){block},char
function_define->function_type.id(){block},double
function_define->function_type.id(){block},int
function_define->function_type.id(){block},void
function_define->function_type.id(){block},#
项目4:
function_type->type,id
reduce:4
项目5:
function_type->void,id
reduce:5
项目6:
S'->S,#
Accept
项目7:
type->int,id
reduce:13
项目8:
type->double,id
reduce:14
项目9:
type->char,id
reduce:15
项目10:
function->functionfunction_define,char
reduce:1
function->functionfunction_define,double
reduce:1
function->functionfunction_define,int
reduce:1
function->functionfunction_define,void
reduce:1
function->functionfunction_define,#
reduce:1
项目11:
function_define->function_typeid.(function_define_list){block},char
shift:12
function_define->function_typeid.(function_define_list){block},double
function_define->function_typeid.(function_define_list){block},int
function_define->function_typeid.(function_define_list){block},void
function_define->function_typeid.(function_define_list){block},#
function_define->function_typeid.(){block},char
function_define->function_typeid.(){block},double
function_define->function_typeid.(){block},int
function_define->function_typeid.(){block},void
function_define->function_typeid.(){block},#
项目12:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
function_define_list->.function_define_list,typeid,,
function_define_list->.function_define_list,typeid,)
function_define_list->.typeid,,
function_define_list->.typeid,)
function_define->function_typeid(.function_define_list){block},char
function_define->function_typeid(.function_define_list){block},double
function_define->function_typeid(.function_define_list){block},int
function_define->function_typeid(.function_define_list){block},void
function_define->function_typeid(.function_define_list){block},#
function_define->function_typeid(.){block},char
shift:13
function_define->function_typeid(.){block},double
function_define->function_typeid(.){block},int
function_define->function_typeid(.){block},void
function_define->function_typeid(.){block},#
项目13:
function_define->function_typeid().{block},char
shift:16
function_define->function_typeid().{block},double
function_define->function_typeid().{block},int
function_define->function_typeid().{block},void
function_define->function_typeid().{block},#
项目14:
function_define_list->function_define_list.,typeid,,
shift:18
function_define_list->function_define_list.,typeid,)
function_define->function_typeid(function_define_list.){block},char
shift:17
function_define->function_typeid(function_define_list.){block},double
function_define->function_typeid(function_define_list.){block},int
function_define->function_typeid(function_define_list.){block},void
function_define->function_typeid(function_define_list.){block},#
项目15:
function_define_list->type.id,,
shift:19
function_define_list->type.id,)
项目16:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(){.block},char
function_define->function_typeid(){.block},double
function_define->function_typeid(){.block},int
function_define->function_typeid(){.block},void
function_define->function_typeid(){.block},#
项目17:
function_define->function_typeid(function_define_list).{block},char
shift:50
function_define->function_typeid(function_define_list).{block},double
function_define->function_typeid(function_define_list).{block},int
function_define->function_typeid(function_define_list).{block},void
function_define->function_typeid(function_define_list).{block},#
项目18:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
function_define_list->function_define_list,.typeid,,
function_define_list->function_define_list,.typeid,)
项目19:
function_define_list->typeid,,
reduce:6
function_define_list->typeid,)
reduce:6
项目20:
left->id,=
reduce:41
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,;
reduce:28
function_call->id.(function_call_list),/
shift:52
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目21:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目22:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},while
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目23:
function_define->function_typeid(){block.},char
shift:62
function_define->function_typeid(){block.},double
function_define->function_typeid(){block.},int
function_define->function_typeid(){block.},void
function_define->function_typeid(){block.},#
项目24:
id_name->.array[num]={nums};,scanf
shift:64
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
shift:63
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,while
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目25:
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,;
reduce:30
项目26:
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
T->F,;
reduce:25
项目27:
type->int,array
reduce:13
type->int,id
reduce:13
项目28:
type->double,array
reduce:14
type->double,id
reduce:14
项目29:
type->char,array
reduce:15
type->char,id
reduce:15
项目30:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
reduce:16
block->.sentence,}
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目31:
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
shift:67
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,while
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目32:
T->T./F,/
shift:71
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:70
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
reduce:22
E->T,+
reduce:22
E->T,;
reduce:22
项目33:
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,;
reduce:27
项目34:
left->array.[E],=
shift:72
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目35:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,while
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目36:
sentence->define,scanf
reduce:32
sentence->define,printf
reduce:32
sentence->define,if
reduce:32
sentence->define,while
reduce:32
sentence->define,for
reduce:32
sentence->define,return
reduce:32
sentence->define,array
reduce:32
sentence->define,num
reduce:32
sentence->define,/
reduce:32
sentence->define,*
reduce:32
sentence->define,-
reduce:32
sentence->define,+
reduce:32
sentence->define,char
reduce:32
sentence->define,double
reduce:32
sentence->define,int
reduce:32
sentence->define,}
reduce:32
sentence->define,{
reduce:32
sentence->define,(
reduce:32
sentence->define,id
reduce:32
项目37:
sentence->set_value.;,scanf
shift:76
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,while
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目38:
set_value->left.=E,;
shift:77
项目39:
sentence->loop_expression,scanf
reduce:43
sentence->loop_expression,printf
reduce:43
sentence->loop_expression,if
reduce:43
sentence->loop_expression,while
reduce:43
sentence->loop_expression,for
reduce:43
sentence->loop_expression,return
reduce:43
sentence->loop_expression,array
reduce:43
sentence->loop_expression,num
reduce:43
sentence->loop_expression,/
reduce:43
sentence->loop_expression,*
reduce:43
sentence->loop_expression,-
reduce:43
sentence->loop_expression,+
reduce:43
sentence->loop_expression,char
reduce:43
sentence->loop_expression,double
reduce:43
sentence->loop_expression,int
reduce:43
sentence->loop_expression,}
reduce:43
sentence->loop_expression,{
reduce:43
sentence->loop_expression,(
reduce:43
sentence->loop_expression,id
reduce:43
项目40:
sentence->while_expression,scanf
reduce:44
sentence->while_expression,printf
reduce:44
sentence->while_expression,if
reduce:44
sentence->while_expression,while
reduce:44
sentence->while_expression,for
reduce:44
sentence->while_expression,return
reduce:44
sentence->while_expression,array
reduce:44
sentence->while_expression,num
reduce:44
sentence->while_expression,/
reduce:44
sentence->while_expression,*
reduce:44
sentence->while_expression,-
reduce:44
sentence->while_expression,+
reduce:44
sentence->while_expression,char
reduce:44
sentence->while_expression,double
reduce:44
sentence->while_expression,int
reduce:44
sentence->while_expression,}
reduce:44
sentence->while_expression,{
reduce:44
sentence->while_expression,(
reduce:44
sentence->while_expression,id
reduce:44
项目41:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:78
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目42:
while_expression->while.(bool_expression)whilesentence,scanf
shift:79
while_expression->while.(bool_expression)whilesentence,printf
while_expression->while.(bool_expression)whilesentence,if
while_expression->while.(bool_expression)whilesentence,while
while_expression->while.(bool_expression)whilesentence,for
while_expression->while.(bool_expression)whilesentence,return
while_expression->while.(bool_expression)whilesentence,array
while_expression->while.(bool_expression)whilesentence,num
while_expression->while.(bool_expression)whilesentence,/
while_expression->while.(bool_expression)whilesentence,*
while_expression->while.(bool_expression)whilesentence,-
while_expression->while.(bool_expression)whilesentence,+
while_expression->while.(bool_expression)whilesentence,char
while_expression->while.(bool_expression)whilesentence,double
while_expression->while.(bool_expression)whilesentence,int
while_expression->while.(bool_expression)whilesentence,}
while_expression->while.(bool_expression)whilesentence,{
while_expression->while.(bool_expression)whilesentence,(
while_expression->while.(bool_expression)whilesentence,id
项目43:
sentence->if_expression,scanf
reduce:61
sentence->if_expression,printf
reduce:61
sentence->if_expression,if
reduce:61
sentence->if_expression,while
reduce:61
sentence->if_expression,for
reduce:61
sentence->if_expression,return
reduce:61
sentence->if_expression,array
reduce:61
sentence->if_expression,num
reduce:61
sentence->if_expression,/
reduce:61
sentence->if_expression,*
reduce:61
sentence->if_expression,-
reduce:61
sentence->if_expression,+
reduce:61
sentence->if_expression,char
reduce:61
sentence->if_expression,double
reduce:61
sentence->if_expression,int
reduce:61
sentence->if_expression,}
reduce:61
sentence->if_expression,{
reduce:61
sentence->if_expression,(
reduce:61
sentence->if_expression,id
reduce:61
项目44:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
shift:80
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,while
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)sentence,scanf
if_expression->if.(bool_expression)sentence,printf
if_expression->if.(bool_expression)sentence,if
if_expression->if.(bool_expression)sentence,while
if_expression->if.(bool_expression)sentence,for
if_expression->if.(bool_expression)sentence,return
if_expression->if.(bool_expression)sentence,array
if_expression->if.(bool_expression)sentence,num
if_expression->if.(bool_expression)sentence,/
if_expression->if.(bool_expression)sentence,*
if_expression->if.(bool_expression)sentence,-
if_expression->if.(bool_expression)sentence,+
if_expression->if.(bool_expression)sentence,char
if_expression->if.(bool_expression)sentence,double
if_expression->if.(bool_expression)sentence,int
if_expression->if.(bool_expression)sentence,}
if_expression->if.(bool_expression)sentence,{
if_expression->if.(bool_expression)sentence,(
if_expression->if.(bool_expression)sentence,id
项目45:
sentence->inout_expression,scanf
reduce:65
sentence->inout_expression,printf
reduce:65
sentence->inout_expression,if
reduce:65
sentence->inout_expression,while
reduce:65
sentence->inout_expression,for
reduce:65
sentence->inout_expression,return
reduce:65
sentence->inout_expression,array
reduce:65
sentence->inout_expression,num
reduce:65
sentence->inout_expression,/
reduce:65
sentence->inout_expression,*
reduce:65
sentence->inout_expression,-
reduce:65
sentence->inout_expression,+
reduce:65
sentence->inout_expression,char
reduce:65
sentence->inout_expression,double
reduce:65
sentence->inout_expression,int
reduce:65
sentence->inout_expression,}
reduce:65
sentence->inout_expression,{
reduce:65
sentence->inout_expression,(
reduce:65
sentence->inout_expression,id
reduce:65
项目46:
inout_expression->printf_expression,scanf
reduce:66
inout_expression->printf_expression,printf
reduce:66
inout_expression->printf_expression,if
reduce:66
inout_expression->printf_expression,while
reduce:66
inout_expression->printf_expression,for
reduce:66
inout_expression->printf_expression,return
reduce:66
inout_expression->printf_expression,array
reduce:66
inout_expression->printf_expression,num
reduce:66
inout_expression->printf_expression,/
reduce:66
inout_expression->printf_expression,*
reduce:66
inout_expression->printf_expression,-
reduce:66
inout_expression->printf_expression,+
reduce:66
inout_expression->printf_expression,char
reduce:66
inout_expression->printf_expression,double
reduce:66
inout_expression->printf_expression,int
reduce:66
inout_expression->printf_expression,}
reduce:66
inout_expression->printf_expression,{
reduce:66
inout_expression->printf_expression,(
reduce:66
inout_expression->printf_expression,id
reduce:66
项目47:
inout_expression->scanf_expression,scanf
reduce:67
inout_expression->scanf_expression,printf
reduce:67
inout_expression->scanf_expression,if
reduce:67
inout_expression->scanf_expression,while
reduce:67
inout_expression->scanf_expression,for
reduce:67
inout_expression->scanf_expression,return
reduce:67
inout_expression->scanf_expression,array
reduce:67
inout_expression->scanf_expression,num
reduce:67
inout_expression->scanf_expression,/
reduce:67
inout_expression->scanf_expression,*
reduce:67
inout_expression->scanf_expression,-
reduce:67
inout_expression->scanf_expression,+
reduce:67
inout_expression->scanf_expression,char
reduce:67
inout_expression->scanf_expression,double
reduce:67
inout_expression->scanf_expression,int
reduce:67
inout_expression->scanf_expression,}
reduce:67
inout_expression->scanf_expression,{
reduce:67
inout_expression->scanf_expression,(
reduce:67
inout_expression->scanf_expression,id
reduce:67
项目48:
printf_expression->printf.(string,expressions);,scanf
shift:81
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,while
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,while
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目49:
scanf_expression->scanf.(string,getaddr);,scanf
shift:82
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,while
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目50:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(function_define_list){.block},char
function_define->function_typeid(function_define_list){.block},double
function_define->function_typeid(function_define_list){.block},int
function_define->function_typeid(function_define_list){.block},void
function_define->function_typeid(function_define_list){.block},#
项目51:
function_define_list->function_define_list,type.id,,
shift:84
function_define_list->function_define_list,type.id,)
项目52:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),/
shift:87
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
function_call->.id(),,
function_call->.id(),)
项目53:
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,)
reduce:28
function_call->id.(function_call_list),/
shift:93
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目54:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目55:
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,)
reduce:30
项目56:
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
T->F,)
reduce:25
项目57:
F->(E.),/
shift:95
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目58:
T->T./F,/
shift:99
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:98
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
reduce:22
E->T,+
reduce:22
E->T,)
reduce:22
项目59:
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,)
reduce:27
项目60:
F->array.[E],/
shift:100
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目61:
sentence->{block.},scanf
shift:101
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},while
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目62:
function_define->function_typeid(){block},char
reduce:2
function_define->function_typeid(){block},double
reduce:2
function_define->function_typeid(){block},int
reduce:2
function_define->function_typeid(){block},void
reduce:2
function_define->function_typeid(){block},#
reduce:2
项目63:
id_name->id.;,scanf
shift:103
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,while
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
shift:102
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,while
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目64:
id_name->array.[num]={nums};,scanf
shift:104
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,while
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目65:
define->typeid_name,scanf
reduce:33
define->typeid_name,printf
reduce:33
define->typeid_name,if
reduce:33
define->typeid_name,while
reduce:33
define->typeid_name,for
reduce:33
define->typeid_name,return
reduce:33
define->typeid_name,array
reduce:33
define->typeid_name,num
reduce:33
define->typeid_name,/
reduce:33
define->typeid_name,*
reduce:33
define->typeid_name,-
reduce:33
define->typeid_name,+
reduce:33
define->typeid_name,char
reduce:33
define->typeid_name,double
reduce:33
define->typeid_name,int
reduce:33
define->typeid_name,}
reduce:33
define->typeid_name,{
reduce:33
define->typeid_name,(
reduce:33
define->typeid_name,id
reduce:33
项目66:
block->sentenceblock,}
reduce:17
项目67:
sentence->E;,scanf
reduce:19
sentence->E;,printf
reduce:19
sentence->E;,if
reduce:19
sentence->E;,while
reduce:19
sentence->E;,for
reduce:19
sentence->E;,return
reduce:19
sentence->E;,array
reduce:19
sentence->E;,num
reduce:19
sentence->E;,/
reduce:19
sentence->E;,*
reduce:19
sentence->E;,-
reduce:19
sentence->E;,+
reduce:19
sentence->E;,char
reduce:19
sentence->E;,double
reduce:19
sentence->E;,int
reduce:19
sentence->E;,}
reduce:19
sentence->E;,{
reduce:19
sentence->E;,(
reduce:19
sentence->E;,id
reduce:19
项目68:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目69:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目70:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目71:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目72:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目73:
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,;
reduce:28
function_call->id.(function_call_list),/
shift:52
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目74:
sentence->returnE.;,scanf
shift:117
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,while
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
项目75:
F->array.[E],/
shift:118
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目76:
sentence->set_value;,scanf
reduce:39
sentence->set_value;,printf
reduce:39
sentence->set_value;,if
reduce:39
sentence->set_value;,while
reduce:39
sentence->set_value;,for
reduce:39
sentence->set_value;,return
reduce:39
sentence->set_value;,array
reduce:39
sentence->set_value;,num
reduce:39
sentence->set_value;,/
reduce:39
sentence->set_value;,*
reduce:39
sentence->set_value;,-
reduce:39
sentence->set_value;,+
reduce:39
sentence->set_value;,char
reduce:39
sentence->set_value;,double
reduce:39
sentence->set_value;,int
reduce:39
sentence->set_value;,}
reduce:39
sentence->set_value;,{
reduce:39
sentence->set_value;,(
reduce:39
sentence->set_value;,id
reduce:39
项目77:
set_value->left=.E,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目78:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
shift:121
left->.id,=
shift:120
set_value->.left=E,;
项目79:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,)
bool_expression->.GopH,)
while_expression->while(.bool_expression)whilesentence,scanf
while_expression->while(.bool_expression)whilesentence,printf
while_expression->while(.bool_expression)whilesentence,if
while_expression->while(.bool_expression)whilesentence,while
while_expression->while(.bool_expression)whilesentence,for
while_expression->while(.bool_expression)whilesentence,return
while_expression->while(.bool_expression)whilesentence,array
while_expression->while(.bool_expression)whilesentence,num
while_expression->while(.bool_expression)whilesentence,/
while_expression->while(.bool_expression)whilesentence,*
while_expression->while(.bool_expression)whilesentence,-
while_expression->while(.bool_expression)whilesentence,+
while_expression->while(.bool_expression)whilesentence,char
while_expression->while(.bool_expression)whilesentence,double
while_expression->while(.bool_expression)whilesentence,int
while_expression->while(.bool_expression)whilesentence,}
while_expression->while(.bool_expression)whilesentence,{
while_expression->while(.bool_expression)whilesentence,(
while_expression->while(.bool_expression)whilesentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
shift:131
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
shift:124
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
shift:130
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
shift:125
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目80:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,while
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)sentence,scanf
if_expression->if(.bool_expression)sentence,printf
if_expression->if(.bool_expression)sentence,if
if_expression->if(.bool_expression)sentence,while
if_expression->if(.bool_expression)sentence,for
if_expression->if(.bool_expression)sentence,return
if_expression->if(.bool_expression)sentence,array
if_expression->if(.bool_expression)sentence,num
if_expression->if(.bool_expression)sentence,/
if_expression->if(.bool_expression)sentence,*
if_expression->if(.bool_expression)sentence,-
if_expression->if(.bool_expression)sentence,+
if_expression->if(.bool_expression)sentence,char
if_expression->if(.bool_expression)sentence,double
if_expression->if(.bool_expression)sentence,int
if_expression->if(.bool_expression)sentence,}
if_expression->if(.bool_expression)sentence,{
if_expression->if(.bool_expression)sentence,(
if_expression->if(.bool_expression)sentence,id
bool_expression->.F,)
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
shift:131
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
shift:124
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
shift:130
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
shift:125
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目81:
printf_expression->printf(.string,expressions);,scanf
shift:135
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,while
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,while
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目82:
scanf_expression->scanf(.string,getaddr);,scanf
shift:136
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,while
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目83:
function_define->function_typeid(function_define_list){block.},char
shift:137
function_define->function_typeid(function_define_list){block.},double
function_define->function_typeid(function_define_list){block.},int
function_define->function_typeid(function_define_list){block.},void
function_define->function_typeid(function_define_list){block.},#
项目84:
function_define_list->function_define_list,typeid,,
reduce:7
function_define_list->function_define_list,typeid,)
reduce:7
项目85:
F->id,,
reduce:28
F->id,)
reduce:28
function_call->id.(function_call_list),,
shift:138
function_call->id.(function_call_list),)
function_call->id.(),,
function_call->id.(),)
项目86:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),,
F->(.E),)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目87:
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),;
reduce:8
项目88:
F->function_call,,
reduce:30
F->function_call,)
reduce:30
项目89:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),/
shift:140
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目90:
function_call_list->F,,
reduce:10
function_call_list->F,)
reduce:10
项目91:
F->num,,
reduce:27
F->num,)
reduce:27
项目92:
F->array.[E],,
shift:142
F->array.[E],)
项目93:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),/
shift:143
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目94:
F->(E.),/
shift:145
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目95:
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),;
reduce:26
项目96:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目97:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目98:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目99:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目100:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目101:
sentence->{block},scanf
reduce:18
sentence->{block},printf
reduce:18
sentence->{block},if
reduce:18
sentence->{block},while
reduce:18
sentence->{block},for
reduce:18
sentence->{block},return
reduce:18
sentence->{block},array
reduce:18
sentence->{block},num
reduce:18
sentence->{block},/
reduce:18
sentence->{block},*
reduce:18
sentence->{block},-
reduce:18
sentence->{block},+
reduce:18
sentence->{block},char
reduce:18
sentence->{block},double
reduce:18
sentence->{block},int
reduce:18
sentence->{block},}
reduce:18
sentence->{block},{
reduce:18
sentence->{block},(
reduce:18
sentence->{block},id
reduce:18
项目102:
id_name->.array[num]={nums};,scanf
shift:64
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
shift:63
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,while
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目103:
id_name->id;,scanf
reduce:35
id_name->id;,printf
reduce:35
id_name->id;,if
reduce:35
id_name->id;,while
reduce:35
id_name->id;,for
reduce:35
id_name->id;,return
reduce:35
id_name->id;,array
reduce:35
id_name->id;,num
reduce:35
id_name->id;,/
reduce:35
id_name->id;,*
reduce:35
id_name->id;,-
reduce:35
id_name->id;,+
reduce:35
id_name->id;,char
reduce:35
id_name->id;,double
reduce:35
id_name->id;,int
reduce:35
id_name->id;,}
reduce:35
id_name->id;,{
reduce:35
id_name->id;,(
reduce:35
id_name->id;,id
reduce:35
项目104:
id_name->array[.num]={nums};,scanf
shift:152
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,while
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目105:
T->T./F,/
shift:71
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:70
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
reduce:20
E->E+T,+
reduce:20
E->E+T,;
reduce:20
项目106:
T->T./F,/
shift:71
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:70
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
reduce:21
E->E-T,+
reduce:21
E->E-T,;
reduce:21
项目107:
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
T->T*F,;
reduce:23
项目108:
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
T->T/F,;
reduce:24
项目109:
F->id,]
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
function_call->id.(function_call_list),]
shift:153
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),]
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目110:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目111:
F->function_call,]
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
项目112:
T->F,]
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目113:
left->array[E.],=
shift:157
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目114:
T->T./F,]
shift:159
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:158
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
reduce:22
E->T,-
reduce:22
E->T,+
reduce:22
项目115:
F->num,]
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
项目116:
F->array.[E],]
shift:160
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目117:
sentence->returnE;,scanf
reduce:31
sentence->returnE;,printf
reduce:31
sentence->returnE;,if
reduce:31
sentence->returnE;,while
reduce:31
sentence->returnE;,for
reduce:31
sentence->returnE;,return
reduce:31
sentence->returnE;,array
reduce:31
sentence->returnE;,num
reduce:31
sentence->returnE;,/
reduce:31
sentence->returnE;,*
reduce:31
sentence->returnE;,-
reduce:31
sentence->returnE;,+
reduce:31
sentence->returnE;,char
reduce:31
sentence->returnE;,double
reduce:31
sentence->returnE;,int
reduce:31
sentence->returnE;,}
reduce:31
sentence->returnE;,{
reduce:31
sentence->returnE;,(
reduce:31
sentence->returnE;,id
reduce:31
项目118:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目119:
set_value->left=E,;
reduce:40
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
项目120:
left->id,=
reduce:41
项目121:
left->array.[E],=
shift:162
项目122:
for_set_value->set_value,;
reduce:56
项目123:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
shift:163
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目124:
F->id,>
reduce:28
F->id,<
reduce:28
F->id,<=
reduce:28
F->id,>=
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,)
reduce:28
function_call->id.(function_call_list),>
shift:164
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目125:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目126:
F->function_call,>
reduce:30
F->function_call,<
reduce:30
F->function_call,<=
reduce:30
F->function_call,>=
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,)
reduce:30
项目127:
bool_expression->F,)
reduce:49
T->F,>
reduce:25
T->F,<
reduce:25
T->F,<=
reduce:25
T->F,>=
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目128:
G->E,>
reduce:74
G->E,<
reduce:74
G->E,<=
reduce:74
G->E,>=
reduce:74
E->E.-T,>
shift:167
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
shift:166
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目129:
T->T./F,>
shift:169
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:168
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
reduce:22
E->T,<
reduce:22
E->T,<=
reduce:22
E->T,>=
reduce:22
E->T,-
reduce:22
E->T,+
reduce:22
项目130:
F->num,>
reduce:27
F->num,<
reduce:27
F->num,<=
reduce:27
F->num,>=
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,)
reduce:27
项目131:
F->array.[E],>
shift:170
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目132:
while_expression->while(bool_expression.)whilesentence,scanf
shift:171
while_expression->while(bool_expression.)whilesentence,printf
while_expression->while(bool_expression.)whilesentence,if
while_expression->while(bool_expression.)whilesentence,while
while_expression->while(bool_expression.)whilesentence,for
while_expression->while(bool_expression.)whilesentence,return
while_expression->while(bool_expression.)whilesentence,array
while_expression->while(bool_expression.)whilesentence,num
while_expression->while(bool_expression.)whilesentence,/
while_expression->while(bool_expression.)whilesentence,*
while_expression->while(bool_expression.)whilesentence,-
while_expression->while(bool_expression.)whilesentence,+
while_expression->while(bool_expression.)whilesentence,char
while_expression->while(bool_expression.)whilesentence,double
while_expression->while(bool_expression.)whilesentence,int
while_expression->while(bool_expression.)whilesentence,}
while_expression->while(bool_expression.)whilesentence,{
while_expression->while(bool_expression.)whilesentence,(
while_expression->while(bool_expression.)whilesentence,id
项目133:
op->.>,array
shift:176
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
shift:175
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
shift:174
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
shift:173
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,)
项目134:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
shift:177
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,while
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)sentence,scanf
if_expression->if(bool_expression.)sentence,printf
if_expression->if(bool_expression.)sentence,if
if_expression->if(bool_expression.)sentence,while
if_expression->if(bool_expression.)sentence,for
if_expression->if(bool_expression.)sentence,return
if_expression->if(bool_expression.)sentence,array
if_expression->if(bool_expression.)sentence,num
if_expression->if(bool_expression.)sentence,/
if_expression->if(bool_expression.)sentence,*
if_expression->if(bool_expression.)sentence,-
if_expression->if(bool_expression.)sentence,+
if_expression->if(bool_expression.)sentence,char
if_expression->if(bool_expression.)sentence,double
if_expression->if(bool_expression.)sentence,int
if_expression->if(bool_expression.)sentence,}
if_expression->if(bool_expression.)sentence,{
if_expression->if(bool_expression.)sentence,(
if_expression->if(bool_expression.)sentence,id
项目135:
printf_expression->printf(string.,expressions);,scanf
shift:179
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,while
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
shift:178
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,while
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目136:
scanf_expression->scanf(string.,getaddr);,scanf
shift:180
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,while
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目137:
function_define->function_typeid(function_define_list){block},char
reduce:3
function_define->function_typeid(function_define_list){block},double
reduce:3
function_define->function_typeid(function_define_list){block},int
reduce:3
function_define->function_typeid(function_define_list){block},void
reduce:3
function_define->function_typeid(function_define_list){block},#
reduce:3
项目138:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),,
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),,
shift:181
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目139:
F->(E.),,
shift:183
F->(E.),)
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目140:
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),;
reduce:9
项目141:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->function_call_list,.F,,
function_call_list->function_call_list,.F,)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->.id(),,
function_call->.id(),)
项目142:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],,
F->array[.E],)
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目143:
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),)
reduce:8
项目144:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),/
shift:186
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目145:
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),)
reduce:26
项目146:
T->T./F,/
shift:99
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:98
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
reduce:20
E->E+T,+
reduce:20
E->E+T,)
reduce:20
项目147:
T->T./F,/
shift:99
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:98
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
reduce:21
E->E-T,+
reduce:21
E->E-T,)
reduce:21
项目148:
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
T->T*F,)
reduce:23
项目149:
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
T->T/F,)
reduce:24
项目150:
F->array[E.],/
shift:187
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目151:
id_name->id,id_name,scanf
reduce:34
id_name->id,id_name,printf
reduce:34
id_name->id,id_name,if
reduce:34
id_name->id,id_name,while
reduce:34
id_name->id,id_name,for
reduce:34
id_name->id,id_name,return
reduce:34
id_name->id,id_name,array
reduce:34
id_name->id,id_name,num
reduce:34
id_name->id,id_name,/
reduce:34
id_name->id,id_name,*
reduce:34
id_name->id,id_name,-
reduce:34
id_name->id,id_name,+
reduce:34
id_name->id,id_name,char
reduce:34
id_name->id,id_name,double
reduce:34
id_name->id,id_name,int
reduce:34
id_name->id,id_name,}
reduce:34
id_name->id,id_name,{
reduce:34
id_name->id,id_name,(
reduce:34
id_name->id,id_name,id
reduce:34
项目152:
id_name->array[num.]={nums};,scanf
shift:188
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,while
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目153:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),]
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),]
shift:189
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->.id(),,
function_call->.id(),)
项目154:
F->(E.),]
shift:191
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目155:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目156:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目157:
left->array[E],=
reduce:42
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],;
reduce:29
项目158:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目159:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目160:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目161:
F->array[E.],/
shift:197
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目162:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目163:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,;
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],>
shift:204
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,>
shift:199
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,>
shift:203
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),>
shift:200
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目164:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
shift:207
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
function_call->.id(),,
function_call->.id(),)
项目165:
F->(E.),>
shift:209
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目166:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:216
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:210
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:215
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:211
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目167:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:216
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:210
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:215
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:211
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目168:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:216
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:210
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:215
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:211
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目169:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:216
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:210
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:215
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:211
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目170:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目171:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
whilesentence->.sentence,scanf
whilesentence->.sentence,printf
whilesentence->.sentence,if
whilesentence->.sentence,while
whilesentence->.sentence,for
whilesentence->.sentence,return
whilesentence->.sentence,array
whilesentence->.sentence,num
whilesentence->.sentence,/
whilesentence->.sentence,*
whilesentence->.sentence,-
whilesentence->.sentence,+
whilesentence->.sentence,char
whilesentence->.sentence,double
whilesentence->.sentence,int
whilesentence->.sentence,}
whilesentence->.sentence,{
whilesentence->.sentence,(
whilesentence->.sentence,id
while_expression->while(bool_expression).whilesentence,scanf
while_expression->while(bool_expression).whilesentence,printf
while_expression->while(bool_expression).whilesentence,if
while_expression->while(bool_expression).whilesentence,while
while_expression->while(bool_expression).whilesentence,for
while_expression->while(bool_expression).whilesentence,return
while_expression->while(bool_expression).whilesentence,array
while_expression->while(bool_expression).whilesentence,num
while_expression->while(bool_expression).whilesentence,/
while_expression->while(bool_expression).whilesentence,*
while_expression->while(bool_expression).whilesentence,-
while_expression->while(bool_expression).whilesentence,+
while_expression->while(bool_expression).whilesentence,char
while_expression->while(bool_expression).whilesentence,double
while_expression->while(bool_expression).whilesentence,int
while_expression->while(bool_expression).whilesentence,}
while_expression->while(bool_expression).whilesentence,{
while_expression->while(bool_expression).whilesentence,(
while_expression->while(bool_expression).whilesentence,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目172:
H->.E,)
bool_expression->Gop.H,)
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目173:
op->>=,array
reduce:50
op->>=,num
reduce:50
op->>=,/
reduce:50
op->>=,*
reduce:50
op->>=,-
reduce:50
op->>=,+
reduce:50
op->>=,(
reduce:50
op->>=,id
reduce:50
项目174:
op-><=,array
reduce:51
op-><=,num
reduce:51
op-><=,/
reduce:51
op-><=,*
reduce:51
op-><=,-
reduce:51
op-><=,+
reduce:51
op-><=,(
reduce:51
op-><=,id
reduce:51
项目175:
op-><,array
reduce:52
op-><,num
reduce:52
op-><,/
reduce:52
op-><,*
reduce:52
op-><,-
reduce:52
op-><,+
reduce:52
op-><,(
reduce:52
op-><,id
reduce:52
项目176:
op->>,array
reduce:53
op->>,num
reduce:53
op->>,/
reduce:53
op->>,*
reduce:53
op->>,-
reduce:53
op->>,+
reduce:53
op->>,(
reduce:53
op->>,id
reduce:53
项目177:
scanf_expression->.scanf(string,getaddr);,scanf
shift:243
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:242
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,while
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:237
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->if(bool_expression).sentence,scanf
if_expression->if(bool_expression).sentence,printf
if_expression->if(bool_expression).sentence,if
if_expression->if(bool_expression).sentence,while
if_expression->if(bool_expression).sentence,for
if_expression->if(bool_expression).sentence,return
if_expression->if(bool_expression).sentence,array
if_expression->if(bool_expression).sentence,num
if_expression->if(bool_expression).sentence,/
if_expression->if(bool_expression).sentence,*
if_expression->if(bool_expression).sentence,-
if_expression->if(bool_expression).sentence,+
if_expression->if(bool_expression).sentence,char
if_expression->if(bool_expression).sentence,double
if_expression->if(bool_expression).sentence,int
if_expression->if(bool_expression).sentence,}
if_expression->if(bool_expression).sentence,{
if_expression->if(bool_expression).sentence,(
if_expression->if(bool_expression).sentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:235
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:234
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:229
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:225
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目178:
printf_expression->printf(string).;,scanf
shift:244
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,while
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目179:
expressions->.id,)
shift:245
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,while
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目180:
getaddr->.&id,)
shift:248
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,while
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目181:
function_call->id(),,
reduce:8
function_call->id(),)
reduce:8
项目182:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),,
shift:249
function_call->id(function_call_list.),)
项目183:
F->(E),,
reduce:26
F->(E),)
reduce:26
项目184:
function_call_list->function_call_list,F,,
reduce:11
function_call_list->function_call_list,F,)
reduce:11
项目185:
F->array[E.],,
shift:250
F->array[E.],)
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目186:
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),)
reduce:9
项目187:
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],)
reduce:29
项目188:
id_name->array[num].={nums};,scanf
shift:251
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,while
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目189:
function_call->id(),]
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
项目190:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),]
shift:252
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目191:
F->(E),]
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
项目192:
T->T./F,]
shift:159
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:158
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
reduce:20
E->E+T,-
reduce:20
E->E+T,+
reduce:20
项目193:
T->T./F,]
shift:159
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:158
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
reduce:21
E->E-T,-
reduce:21
E->E-T,+
reduce:21
项目194:
T->T*F,]
reduce:23
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
项目195:
T->T/F,]
reduce:24
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
项目196:
F->array[E.],]
shift:253
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目197:
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],;
reduce:29
项目198:
left->array[E.],=
shift:254
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目199:
F->id,>
reduce:28
F->id,<
reduce:28
F->id,<=
reduce:28
F->id,>=
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,;
reduce:28
function_call->id.(function_call_list),>
shift:255
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目200:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目201:
F->function_call,>
reduce:30
F->function_call,<
reduce:30
F->function_call,<=
reduce:30
F->function_call,>=
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,;
reduce:30
项目202:
bool_expression->F,;
reduce:49
T->F,>
reduce:25
T->F,<
reduce:25
T->F,<=
reduce:25
T->F,>=
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目203:
F->num,>
reduce:27
F->num,<
reduce:27
F->num,<=
reduce:27
F->num,>=
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,;
reduce:27
项目204:
F->array.[E],>
shift:257
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目205:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
shift:258
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目206:
op->.>,array
shift:176
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
shift:175
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
shift:174
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
shift:173
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,;
项目207:
function_call->id(),>
reduce:8
function_call->id(),<
reduce:8
function_call->id(),<=
reduce:8
function_call->id(),>=
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),)
reduce:8
项目208:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
shift:260
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目209:
F->(E),>
reduce:26
F->(E),<
reduce:26
F->(E),<=
reduce:26
F->(E),>=
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),)
reduce:26
项目210:
F->id,>
reduce:28
F->id,<
reduce:28
F->id,<=
reduce:28
F->id,>=
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
function_call->id.(function_call_list),>
shift:261
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目211:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:60
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:53
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:59
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:54
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目212:
F->function_call,>
reduce:30
F->function_call,<
reduce:30
F->function_call,<=
reduce:30
F->function_call,>=
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
项目213:
T->F,>
reduce:25
T->F,<
reduce:25
T->F,<=
reduce:25
T->F,>=
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目214:
T->T./F,>
shift:169
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:168
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
reduce:20
E->E+T,<
reduce:20
E->E+T,<=
reduce:20
E->E+T,>=
reduce:20
E->E+T,-
reduce:20
E->E+T,+
reduce:20
项目215:
F->num,>
reduce:27
F->num,<
reduce:27
F->num,<=
reduce:27
F->num,>=
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
项目216:
F->array.[E],>
shift:263
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目217:
T->T./F,>
shift:169
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:168
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
reduce:21
E->E-T,<
reduce:21
E->E-T,<=
reduce:21
E->E-T,>=
reduce:21
E->E-T,-
reduce:21
E->E-T,+
reduce:21
项目218:
T->T*F,>
reduce:23
T->T*F,<
reduce:23
T->T*F,<=
reduce:23
T->T*F,>=
reduce:23
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
项目219:
T->T/F,>
reduce:24
T->T/F,<
reduce:24
T->T/F,<=
reduce:24
T->T/F,>=
reduce:24
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
项目220:
F->array[E.],>
shift:264
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目221:
whilesentence->sentence,scanf
reduce:47
whilesentence->sentence,printf
reduce:47
whilesentence->sentence,if
reduce:47
whilesentence->sentence,while
reduce:47
whilesentence->sentence,for
reduce:47
whilesentence->sentence,return
reduce:47
whilesentence->sentence,array
reduce:47
whilesentence->sentence,num
reduce:47
whilesentence->sentence,/
reduce:47
whilesentence->sentence,*
reduce:47
whilesentence->sentence,-
reduce:47
whilesentence->sentence,+
reduce:47
whilesentence->sentence,char
reduce:47
whilesentence->sentence,double
reduce:47
whilesentence->sentence,int
reduce:47
whilesentence->sentence,}
reduce:47
whilesentence->sentence,{
reduce:47
whilesentence->sentence,(
reduce:47
whilesentence->sentence,id
reduce:47
项目222:
while_expression->while(bool_expression)whilesentence,scanf
reduce:46
while_expression->while(bool_expression)whilesentence,printf
reduce:46
while_expression->while(bool_expression)whilesentence,if
reduce:46
while_expression->while(bool_expression)whilesentence,while
reduce:46
while_expression->while(bool_expression)whilesentence,for
reduce:46
while_expression->while(bool_expression)whilesentence,return
reduce:46
while_expression->while(bool_expression)whilesentence,array
reduce:46
while_expression->while(bool_expression)whilesentence,num
reduce:46
while_expression->while(bool_expression)whilesentence,/
reduce:46
while_expression->while(bool_expression)whilesentence,*
reduce:46
while_expression->while(bool_expression)whilesentence,-
reduce:46
while_expression->while(bool_expression)whilesentence,+
reduce:46
while_expression->while(bool_expression)whilesentence,char
reduce:46
while_expression->while(bool_expression)whilesentence,double
reduce:46
while_expression->while(bool_expression)whilesentence,int
reduce:46
while_expression->while(bool_expression)whilesentence,}
reduce:46
while_expression->while(bool_expression)whilesentence,{
reduce:46
while_expression->while(bool_expression)whilesentence,(
reduce:46
while_expression->while(bool_expression)whilesentence,id
reduce:46
项目223:
H->E,)
reduce:54
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目224:
bool_expression->GopH,)
reduce:48
项目225:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},else
sentence->{.block},if
sentence->{.block},while
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目226:
id_name->.array[num]={nums};,scanf
shift:267
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,else
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
shift:266
id_name->.id;,printf
id_name->.id;,else
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,else
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,else
define->type.id_name,if
define->type.id_name,while
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目227:
ifsentence->sentence,else
reduce:64
if_expression->if(bool_expression)sentence,scanf
reduce:62
if_expression->if(bool_expression)sentence,printf
reduce:62
if_expression->if(bool_expression)sentence,if
reduce:62
if_expression->if(bool_expression)sentence,while
reduce:62
if_expression->if(bool_expression)sentence,for
reduce:62
if_expression->if(bool_expression)sentence,return
reduce:62
if_expression->if(bool_expression)sentence,array
reduce:62
if_expression->if(bool_expression)sentence,num
reduce:62
if_expression->if(bool_expression)sentence,/
reduce:62
if_expression->if(bool_expression)sentence,*
reduce:62
if_expression->if(bool_expression)sentence,-
reduce:62
if_expression->if(bool_expression)sentence,+
reduce:62
if_expression->if(bool_expression)sentence,char
reduce:62
if_expression->if(bool_expression)sentence,double
reduce:62
if_expression->if(bool_expression)sentence,int
reduce:62
if_expression->if(bool_expression)sentence,}
reduce:62
if_expression->if(bool_expression)sentence,{
reduce:62
if_expression->if(bool_expression)sentence,(
reduce:62
if_expression->if(bool_expression)sentence,id
reduce:62
项目228:
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
shift:269
sentence->E.;,printf
sentence->E.;,else
sentence->E.;,if
sentence->E.;,while
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目229:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,else
sentence->return.E;,if
sentence->return.E;,while
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目230:
sentence->define,scanf
reduce:32
sentence->define,printf
reduce:32
sentence->define,else
reduce:32
sentence->define,if
reduce:32
sentence->define,while
reduce:32
sentence->define,for
reduce:32
sentence->define,return
reduce:32
sentence->define,array
reduce:32
sentence->define,num
reduce:32
sentence->define,/
reduce:32
sentence->define,*
reduce:32
sentence->define,-
reduce:32
sentence->define,+
reduce:32
sentence->define,char
reduce:32
sentence->define,double
reduce:32
sentence->define,int
reduce:32
sentence->define,}
reduce:32
sentence->define,{
reduce:32
sentence->define,(
reduce:32
sentence->define,id
reduce:32
项目231:
sentence->set_value.;,scanf
shift:271
sentence->set_value.;,printf
sentence->set_value.;,else
sentence->set_value.;,if
sentence->set_value.;,while
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目232:
sentence->loop_expression,scanf
reduce:43
sentence->loop_expression,printf
reduce:43
sentence->loop_expression,else
reduce:43
sentence->loop_expression,if
reduce:43
sentence->loop_expression,while
reduce:43
sentence->loop_expression,for
reduce:43
sentence->loop_expression,return
reduce:43
sentence->loop_expression,array
reduce:43
sentence->loop_expression,num
reduce:43
sentence->loop_expression,/
reduce:43
sentence->loop_expression,*
reduce:43
sentence->loop_expression,-
reduce:43
sentence->loop_expression,+
reduce:43
sentence->loop_expression,char
reduce:43
sentence->loop_expression,double
reduce:43
sentence->loop_expression,int
reduce:43
sentence->loop_expression,}
reduce:43
sentence->loop_expression,{
reduce:43
sentence->loop_expression,(
reduce:43
sentence->loop_expression,id
reduce:43
项目233:
sentence->while_expression,scanf
reduce:44
sentence->while_expression,printf
reduce:44
sentence->while_expression,else
reduce:44
sentence->while_expression,if
reduce:44
sentence->while_expression,while
reduce:44
sentence->while_expression,for
reduce:44
sentence->while_expression,return
reduce:44
sentence->while_expression,array
reduce:44
sentence->while_expression,num
reduce:44
sentence->while_expression,/
reduce:44
sentence->while_expression,*
reduce:44
sentence->while_expression,-
reduce:44
sentence->while_expression,+
reduce:44
sentence->while_expression,char
reduce:44
sentence->while_expression,double
reduce:44
sentence->while_expression,int
reduce:44
sentence->while_expression,}
reduce:44
sentence->while_expression,{
reduce:44
sentence->while_expression,(
reduce:44
sentence->while_expression,id
reduce:44
项目234:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:272
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目235:
while_expression->while.(bool_expression)whilesentence,scanf
shift:273
while_expression->while.(bool_expression)whilesentence,printf
while_expression->while.(bool_expression)whilesentence,else
while_expression->while.(bool_expression)whilesentence,if
while_expression->while.(bool_expression)whilesentence,while
while_expression->while.(bool_expression)whilesentence,for
while_expression->while.(bool_expression)whilesentence,return
while_expression->while.(bool_expression)whilesentence,array
while_expression->while.(bool_expression)whilesentence,num
while_expression->while.(bool_expression)whilesentence,/
while_expression->while.(bool_expression)whilesentence,*
while_expression->while.(bool_expression)whilesentence,-
while_expression->while.(bool_expression)whilesentence,+
while_expression->while.(bool_expression)whilesentence,char
while_expression->while.(bool_expression)whilesentence,double
while_expression->while.(bool_expression)whilesentence,int
while_expression->while.(bool_expression)whilesentence,}
while_expression->while.(bool_expression)whilesentence,{
while_expression->while.(bool_expression)whilesentence,(
while_expression->while.(bool_expression)whilesentence,id
项目236:
sentence->if_expression,scanf
reduce:61
sentence->if_expression,printf
reduce:61
sentence->if_expression,else
reduce:61
sentence->if_expression,if
reduce:61
sentence->if_expression,while
reduce:61
sentence->if_expression,for
reduce:61
sentence->if_expression,return
reduce:61
sentence->if_expression,array
reduce:61
sentence->if_expression,num
reduce:61
sentence->if_expression,/
reduce:61
sentence->if_expression,*
reduce:61
sentence->if_expression,-
reduce:61
sentence->if_expression,+
reduce:61
sentence->if_expression,char
reduce:61
sentence->if_expression,double
reduce:61
sentence->if_expression,int
reduce:61
sentence->if_expression,}
reduce:61
sentence->if_expression,{
reduce:61
sentence->if_expression,(
reduce:61
sentence->if_expression,id
reduce:61
项目237:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
shift:274
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,else
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,while
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
if_expression->if.(bool_expression)sentence,scanf
if_expression->if.(bool_expression)sentence,printf
if_expression->if.(bool_expression)sentence,else
if_expression->if.(bool_expression)sentence,if
if_expression->if.(bool_expression)sentence,while
if_expression->if.(bool_expression)sentence,for
if_expression->if.(bool_expression)sentence,return
if_expression->if.(bool_expression)sentence,array
if_expression->if.(bool_expression)sentence,num
if_expression->if.(bool_expression)sentence,/
if_expression->if.(bool_expression)sentence,*
if_expression->if.(bool_expression)sentence,-
if_expression->if.(bool_expression)sentence,+
if_expression->if.(bool_expression)sentence,char
if_expression->if.(bool_expression)sentence,double
if_expression->if.(bool_expression)sentence,int
if_expression->if.(bool_expression)sentence,}
if_expression->if.(bool_expression)sentence,{
if_expression->if.(bool_expression)sentence,(
if_expression->if.(bool_expression)sentence,id
项目238:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
shift:275
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,while
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目239:
sentence->inout_expression,scanf
reduce:65
sentence->inout_expression,printf
reduce:65
sentence->inout_expression,else
reduce:65
sentence->inout_expression,if
reduce:65
sentence->inout_expression,while
reduce:65
sentence->inout_expression,for
reduce:65
sentence->inout_expression,return
reduce:65
sentence->inout_expression,array
reduce:65
sentence->inout_expression,num
reduce:65
sentence->inout_expression,/
reduce:65
sentence->inout_expression,*
reduce:65
sentence->inout_expression,-
reduce:65
sentence->inout_expression,+
reduce:65
sentence->inout_expression,char
reduce:65
sentence->inout_expression,double
reduce:65
sentence->inout_expression,int
reduce:65
sentence->inout_expression,}
reduce:65
sentence->inout_expression,{
reduce:65
sentence->inout_expression,(
reduce:65
sentence->inout_expression,id
reduce:65
项目240:
inout_expression->printf_expression,scanf
reduce:66
inout_expression->printf_expression,printf
reduce:66
inout_expression->printf_expression,else
reduce:66
inout_expression->printf_expression,if
reduce:66
inout_expression->printf_expression,while
reduce:66
inout_expression->printf_expression,for
reduce:66
inout_expression->printf_expression,return
reduce:66
inout_expression->printf_expression,array
reduce:66
inout_expression->printf_expression,num
reduce:66
inout_expression->printf_expression,/
reduce:66
inout_expression->printf_expression,*
reduce:66
inout_expression->printf_expression,-
reduce:66
inout_expression->printf_expression,+
reduce:66
inout_expression->printf_expression,char
reduce:66
inout_expression->printf_expression,double
reduce:66
inout_expression->printf_expression,int
reduce:66
inout_expression->printf_expression,}
reduce:66
inout_expression->printf_expression,{
reduce:66
inout_expression->printf_expression,(
reduce:66
inout_expression->printf_expression,id
reduce:66
项目241:
inout_expression->scanf_expression,scanf
reduce:67
inout_expression->scanf_expression,printf
reduce:67
inout_expression->scanf_expression,else
reduce:67
inout_expression->scanf_expression,if
reduce:67
inout_expression->scanf_expression,while
reduce:67
inout_expression->scanf_expression,for
reduce:67
inout_expression->scanf_expression,return
reduce:67
inout_expression->scanf_expression,array
reduce:67
inout_expression->scanf_expression,num
reduce:67
inout_expression->scanf_expression,/
reduce:67
inout_expression->scanf_expression,*
reduce:67
inout_expression->scanf_expression,-
reduce:67
inout_expression->scanf_expression,+
reduce:67
inout_expression->scanf_expression,char
reduce:67
inout_expression->scanf_expression,double
reduce:67
inout_expression->scanf_expression,int
reduce:67
inout_expression->scanf_expression,}
reduce:67
inout_expression->scanf_expression,{
reduce:67
inout_expression->scanf_expression,(
reduce:67
inout_expression->scanf_expression,id
reduce:67
项目242:
printf_expression->printf.(string,expressions);,scanf
shift:276
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,else
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,while
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,else
printf_expression->printf.(string);,if
printf_expression->printf.(string);,while
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目243:
scanf_expression->scanf.(string,getaddr);,scanf
shift:277
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,else
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,while
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目244:
printf_expression->printf(string);,scanf
reduce:68
printf_expression->printf(string);,printf
reduce:68
printf_expression->printf(string);,if
reduce:68
printf_expression->printf(string);,while
reduce:68
printf_expression->printf(string);,for
reduce:68
printf_expression->printf(string);,return
reduce:68
printf_expression->printf(string);,array
reduce:68
printf_expression->printf(string);,num
reduce:68
printf_expression->printf(string);,/
reduce:68
printf_expression->printf(string);,*
reduce:68
printf_expression->printf(string);,-
reduce:68
printf_expression->printf(string);,+
reduce:68
printf_expression->printf(string);,char
reduce:68
printf_expression->printf(string);,double
reduce:68
printf_expression->printf(string);,int
reduce:68
printf_expression->printf(string);,}
reduce:68
printf_expression->printf(string);,{
reduce:68
printf_expression->printf(string);,(
reduce:68
printf_expression->printf(string);,id
reduce:68
项目245:
expressions->id,)
reduce:71
expressions->id.,expressions,)
shift:278
项目246:
printf_expression->printf(string,expressions.);,scanf
shift:279
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,while
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目247:
scanf_expression->scanf(string,getaddr.);,scanf
shift:280
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,while
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目248:
getaddr->&.id,)
shift:281
项目249:
function_call->id(function_call_list),,
reduce:9
function_call->id(function_call_list),)
reduce:9
项目250:
F->array[E],,
reduce:29
F->array[E],)
reduce:29
项目251:
id_name->array[num]=.{nums};,scanf
shift:282
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,while
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目252:
function_call->id(function_call_list),]
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
项目253:
F->array[E],]
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
项目254:
left->array[E],=
reduce:42
项目255:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
shift:283
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
function_call->.id(),,
function_call->.id(),)
项目256:
F->(E.),>
shift:285
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目257:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目258:
Dec_expression->.id--,)
shift:287
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目259:
H->.E,;
bool_expression->Gop.H,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:75
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:73
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目260:
function_call->id(function_call_list),>
reduce:9
function_call->id(function_call_list),<
reduce:9
function_call->id(function_call_list),<=
reduce:9
function_call->id(function_call_list),>=
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),)
reduce:9
项目261:
F->.function_call,,
F->.function_call,)
F->.array[E],,
shift:92
F->.array[E],)
F->.id,,
shift:85
F->.id,)
F->.num,,
shift:91
F->.num,)
F->.(E),,
shift:86
F->.(E),)
function_call_list->.function_call_list,F,,
function_call_list->.function_call_list,F,)
function_call_list->.F,,
function_call_list->.F,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->.id(function_call_list),,
function_call->.id(function_call_list),)
function_call->id(.),>
shift:293
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->.id(),,
function_call->.id(),)
项目262:
F->(E.),>
shift:295
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:97
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:96
E->E.+T,+
E->E.+T,)
项目263:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:116
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:109
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:115
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:110
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目264:
F->array[E],>
reduce:29
F->array[E],<
reduce:29
F->array[E],<=
reduce:29
F->array[E],>=
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],)
reduce:29
项目265:
sentence->{block.},scanf
shift:297
sentence->{block.},printf
sentence->{block.},else
sentence->{block.},if
sentence->{block.},while
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目266:
id_name->id.;,scanf
shift:299
id_name->id.;,printf
id_name->id.;,else
id_name->id.;,if
id_name->id.;,while
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
shift:298
id_name->id.,id_name,printf
id_name->id.,id_name,else
id_name->id.,id_name,if
id_name->id.,id_name,while
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目267:
id_name->array.[num]={nums};,scanf
shift:300
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,else
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,while
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目268:
define->typeid_name,scanf
reduce:33
define->typeid_name,printf
reduce:33
define->typeid_name,else
reduce:33
define->typeid_name,if
reduce:33
define->typeid_name,while
reduce:33
define->typeid_name,for
reduce:33
define->typeid_name,return
reduce:33
define->typeid_name,array
reduce:33
define->typeid_name,num
reduce:33
define->typeid_name,/
reduce:33
define->typeid_name,*
reduce:33
define->typeid_name,-
reduce:33
define->typeid_name,+
reduce:33
define->typeid_name,char
reduce:33
define->typeid_name,double
reduce:33
define->typeid_name,int
reduce:33
define->typeid_name,}
reduce:33
define->typeid_name,{
reduce:33
define->typeid_name,(
reduce:33
define->typeid_name,id
reduce:33
项目269:
sentence->E;,scanf
reduce:19
sentence->E;,printf
reduce:19
sentence->E;,else
reduce:19
sentence->E;,if
reduce:19
sentence->E;,while
reduce:19
sentence->E;,for
reduce:19
sentence->E;,return
reduce:19
sentence->E;,array
reduce:19
sentence->E;,num
reduce:19
sentence->E;,/
reduce:19
sentence->E;,*
reduce:19
sentence->E;,-
reduce:19
sentence->E;,+
reduce:19
sentence->E;,char
reduce:19
sentence->E;,double
reduce:19
sentence->E;,int
reduce:19
sentence->E;,}
reduce:19
sentence->E;,{
reduce:19
sentence->E;,(
reduce:19
sentence->E;,id
reduce:19
项目270:
sentence->returnE.;,scanf
shift:301
sentence->returnE.;,printf
sentence->returnE.;,else
sentence->returnE.;,if
sentence->returnE.;,while
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
项目271:
sentence->set_value;,scanf
reduce:39
sentence->set_value;,printf
reduce:39
sentence->set_value;,else
reduce:39
sentence->set_value;,if
reduce:39
sentence->set_value;,while
reduce:39
sentence->set_value;,for
reduce:39
sentence->set_value;,return
reduce:39
sentence->set_value;,array
reduce:39
sentence->set_value;,num
reduce:39
sentence->set_value;,/
reduce:39
sentence->set_value;,*
reduce:39
sentence->set_value;,-
reduce:39
sentence->set_value;,+
reduce:39
sentence->set_value;,char
reduce:39
sentence->set_value;,double
reduce:39
sentence->set_value;,int
reduce:39
sentence->set_value;,}
reduce:39
sentence->set_value;,{
reduce:39
sentence->set_value;,(
reduce:39
sentence->set_value;,id
reduce:39
项目272:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
shift:121
left->.id,=
shift:120
set_value->.left=E,;
项目273:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,)
bool_expression->.GopH,)
while_expression->while(.bool_expression)whilesentence,scanf
while_expression->while(.bool_expression)whilesentence,printf
while_expression->while(.bool_expression)whilesentence,else
while_expression->while(.bool_expression)whilesentence,if
while_expression->while(.bool_expression)whilesentence,while
while_expression->while(.bool_expression)whilesentence,for
while_expression->while(.bool_expression)whilesentence,return
while_expression->while(.bool_expression)whilesentence,array
while_expression->while(.bool_expression)whilesentence,num
while_expression->while(.bool_expression)whilesentence,/
while_expression->while(.bool_expression)whilesentence,*
while_expression->while(.bool_expression)whilesentence,-
while_expression->while(.bool_expression)whilesentence,+
while_expression->while(.bool_expression)whilesentence,char
while_expression->while(.bool_expression)whilesentence,double
while_expression->while(.bool_expression)whilesentence,int
while_expression->while(.bool_expression)whilesentence,}
while_expression->while(.bool_expression)whilesentence,{
while_expression->while(.bool_expression)whilesentence,(
while_expression->while(.bool_expression)whilesentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
shift:131
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
shift:124
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
shift:130
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
shift:125
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目274:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,else
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,while
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
if_expression->if(.bool_expression)sentence,scanf
if_expression->if(.bool_expression)sentence,printf
if_expression->if(.bool_expression)sentence,else
if_expression->if(.bool_expression)sentence,if
if_expression->if(.bool_expression)sentence,while
if_expression->if(.bool_expression)sentence,for
if_expression->if(.bool_expression)sentence,return
if_expression->if(.bool_expression)sentence,array
if_expression->if(.bool_expression)sentence,num
if_expression->if(.bool_expression)sentence,/
if_expression->if(.bool_expression)sentence,*
if_expression->if(.bool_expression)sentence,-
if_expression->if(.bool_expression)sentence,+
if_expression->if(.bool_expression)sentence,char
if_expression->if(.bool_expression)sentence,double
if_expression->if(.bool_expression)sentence,int
if_expression->if(.bool_expression)sentence,}
if_expression->if(.bool_expression)sentence,{
if_expression->if(.bool_expression)sentence,(
if_expression->if(.bool_expression)sentence,id
bool_expression->.F,)
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],>
shift:131
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,>
shift:124
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,>
shift:130
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),>
shift:125
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目275:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,while
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目276:
printf_expression->printf(.string,expressions);,scanf
shift:306
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,else
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,while
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,else
printf_expression->printf(.string);,if
printf_expression->printf(.string);,while
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目277:
scanf_expression->scanf(.string,getaddr);,scanf
shift:307
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,else
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,while
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目278:
expressions->.id,)
shift:245
expressions->id,.expressions,)
expressions->.id,expressions,)
项目279:
printf_expression->printf(string,expressions).;,scanf
shift:309
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,while
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目280:
scanf_expression->scanf(string,getaddr).;,scanf
shift:310
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,while
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目281:
getaddr->&id,)
reduce:73
项目282:
nums->.num,}
shift:311
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,while
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目283:
function_call->id(),>
reduce:8
function_call->id(),<
reduce:8
function_call->id(),<=
reduce:8
function_call->id(),>=
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),;
reduce:8
项目284:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
shift:313
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目285:
F->(E),>
reduce:26
F->(E),<
reduce:26
F->(E),<=
reduce:26
F->(E),>=
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),;
reduce:26
项目286:
F->array[E.],>
shift:314
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目287:
Dec_expression->id.--,)
shift:316
Inc_expression->id.++,)
shift:315
项目288:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
shift:317
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目289:
IncorDec->Inc_expression,)
reduce:57
项目290:
IncorDec->Dec_expression,)
reduce:58
项目291:
H->E,;
reduce:54
E->E.-T,-
shift:69
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:68
E->E.+T,+
E->E.+T,;
项目292:
bool_expression->GopH,;
reduce:48
项目293:
function_call->id(),>
reduce:8
function_call->id(),<
reduce:8
function_call->id(),<=
reduce:8
function_call->id(),>=
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
项目294:
function_call_list->function_call_list.,F,,
shift:141
function_call_list->function_call_list.,F,)
function_call->id(function_call_list.),>
shift:318
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目295:
F->(E),>
reduce:26
F->(E),<
reduce:26
F->(E),<=
reduce:26
F->(E),>=
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
项目296:
F->array[E.],>
shift:319
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:156
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:155
E->E.+T,-
E->E.+T,+
项目297:
sentence->{block},scanf
reduce:18
sentence->{block},printf
reduce:18
sentence->{block},else
reduce:18
sentence->{block},if
reduce:18
sentence->{block},while
reduce:18
sentence->{block},for
reduce:18
sentence->{block},return
reduce:18
sentence->{block},array
reduce:18
sentence->{block},num
reduce:18
sentence->{block},/
reduce:18
sentence->{block},*
reduce:18
sentence->{block},-
reduce:18
sentence->{block},+
reduce:18
sentence->{block},char
reduce:18
sentence->{block},double
reduce:18
sentence->{block},int
reduce:18
sentence->{block},}
reduce:18
sentence->{block},{
reduce:18
sentence->{block},(
reduce:18
sentence->{block},id
reduce:18
项目298:
id_name->.array[num]={nums};,scanf
shift:267
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,else
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,while
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id;,scanf
shift:266
id_name->.id;,printf
id_name->.id;,else
id_name->.id;,if
id_name->.id;,while
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,else
id_name->id,.id_name,if
id_name->id,.id_name,while
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,else
id_name->.id,id_name,if
id_name->.id,id_name,while
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目299:
id_name->id;,scanf
reduce:35
id_name->id;,printf
reduce:35
id_name->id;,else
reduce:35
id_name->id;,if
reduce:35
id_name->id;,while
reduce:35
id_name->id;,for
reduce:35
id_name->id;,return
reduce:35
id_name->id;,array
reduce:35
id_name->id;,num
reduce:35
id_name->id;,/
reduce:35
id_name->id;,*
reduce:35
id_name->id;,-
reduce:35
id_name->id;,+
reduce:35
id_name->id;,char
reduce:35
id_name->id;,double
reduce:35
id_name->id;,int
reduce:35
id_name->id;,}
reduce:35
id_name->id;,{
reduce:35
id_name->id;,(
reduce:35
id_name->id;,id
reduce:35
项目300:
id_name->array[.num]={nums};,scanf
shift:321
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,else
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,while
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目301:
sentence->returnE;,scanf
reduce:31
sentence->returnE;,printf
reduce:31
sentence->returnE;,else
reduce:31
sentence->returnE;,if
reduce:31
sentence->returnE;,while
reduce:31
sentence->returnE;,for
reduce:31
sentence->returnE;,return
reduce:31
sentence->returnE;,array
reduce:31
sentence->returnE;,num
reduce:31
sentence->returnE;,/
reduce:31
sentence->returnE;,*
reduce:31
sentence->returnE;,-
reduce:31
sentence->returnE;,+
reduce:31
sentence->returnE;,char
reduce:31
sentence->returnE;,double
reduce:31
sentence->returnE;,int
reduce:31
sentence->returnE;,}
reduce:31
sentence->returnE;,{
reduce:31
sentence->returnE;,(
reduce:31
sentence->returnE;,id
reduce:31
项目302:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
shift:322
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目303:
while_expression->while(bool_expression.)whilesentence,scanf
shift:323
while_expression->while(bool_expression.)whilesentence,printf
while_expression->while(bool_expression.)whilesentence,else
while_expression->while(bool_expression.)whilesentence,if
while_expression->while(bool_expression.)whilesentence,while
while_expression->while(bool_expression.)whilesentence,for
while_expression->while(bool_expression.)whilesentence,return
while_expression->while(bool_expression.)whilesentence,array
while_expression->while(bool_expression.)whilesentence,num
while_expression->while(bool_expression.)whilesentence,/
while_expression->while(bool_expression.)whilesentence,*
while_expression->while(bool_expression.)whilesentence,-
while_expression->while(bool_expression.)whilesentence,+
while_expression->while(bool_expression.)whilesentence,char
while_expression->while(bool_expression.)whilesentence,double
while_expression->while(bool_expression.)whilesentence,int
while_expression->while(bool_expression.)whilesentence,}
while_expression->while(bool_expression.)whilesentence,{
while_expression->while(bool_expression.)whilesentence,(
while_expression->while(bool_expression.)whilesentence,id
项目304:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
shift:324
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,else
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,while
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
if_expression->if(bool_expression.)sentence,scanf
if_expression->if(bool_expression.)sentence,printf
if_expression->if(bool_expression.)sentence,else
if_expression->if(bool_expression.)sentence,if
if_expression->if(bool_expression.)sentence,while
if_expression->if(bool_expression.)sentence,for
if_expression->if(bool_expression.)sentence,return
if_expression->if(bool_expression.)sentence,array
if_expression->if(bool_expression.)sentence,num
if_expression->if(bool_expression.)sentence,/
if_expression->if(bool_expression.)sentence,*
if_expression->if(bool_expression.)sentence,-
if_expression->if(bool_expression.)sentence,+
if_expression->if(bool_expression.)sentence,char
if_expression->if(bool_expression.)sentence,double
if_expression->if(bool_expression.)sentence,int
if_expression->if(bool_expression.)sentence,}
if_expression->if(bool_expression.)sentence,{
if_expression->if(bool_expression.)sentence,(
if_expression->if(bool_expression.)sentence,id
项目305:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,printf
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,if
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,while
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,for
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,return
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,array
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,num
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,/
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,*
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,-
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,+
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,char
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,double
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,int
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,}
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,{
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,(
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,id
reduce:63
项目306:
printf_expression->printf(string.,expressions);,scanf
shift:326
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,else
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,while
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
shift:325
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,else
printf_expression->printf(string.);,if
printf_expression->printf(string.);,while
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目307:
scanf_expression->scanf(string.,getaddr);,scanf
shift:327
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,else
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,while
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目308:
expressions->id,expressions,)
reduce:70
项目309:
printf_expression->printf(string,expressions);,scanf
reduce:69
printf_expression->printf(string,expressions);,printf
reduce:69
printf_expression->printf(string,expressions);,if
reduce:69
printf_expression->printf(string,expressions);,while
reduce:69
printf_expression->printf(string,expressions);,for
reduce:69
printf_expression->printf(string,expressions);,return
reduce:69
printf_expression->printf(string,expressions);,array
reduce:69
printf_expression->printf(string,expressions);,num
reduce:69
printf_expression->printf(string,expressions);,/
reduce:69
printf_expression->printf(string,expressions);,*
reduce:69
printf_expression->printf(string,expressions);,-
reduce:69
printf_expression->printf(string,expressions);,+
reduce:69
printf_expression->printf(string,expressions);,char
reduce:69
printf_expression->printf(string,expressions);,double
reduce:69
printf_expression->printf(string,expressions);,int
reduce:69
printf_expression->printf(string,expressions);,}
reduce:69
printf_expression->printf(string,expressions);,{
reduce:69
printf_expression->printf(string,expressions);,(
reduce:69
printf_expression->printf(string,expressions);,id
reduce:69
项目310:
scanf_expression->scanf(string,getaddr);,scanf
reduce:72
scanf_expression->scanf(string,getaddr);,printf
reduce:72
scanf_expression->scanf(string,getaddr);,if
reduce:72
scanf_expression->scanf(string,getaddr);,while
reduce:72
scanf_expression->scanf(string,getaddr);,for
reduce:72
scanf_expression->scanf(string,getaddr);,return
reduce:72
scanf_expression->scanf(string,getaddr);,array
reduce:72
scanf_expression->scanf(string,getaddr);,num
reduce:72
scanf_expression->scanf(string,getaddr);,/
reduce:72
scanf_expression->scanf(string,getaddr);,*
reduce:72
scanf_expression->scanf(string,getaddr);,-
reduce:72
scanf_expression->scanf(string,getaddr);,+
reduce:72
scanf_expression->scanf(string,getaddr);,char
reduce:72
scanf_expression->scanf(string,getaddr);,double
reduce:72
scanf_expression->scanf(string,getaddr);,int
reduce:72
scanf_expression->scanf(string,getaddr);,}
reduce:72
scanf_expression->scanf(string,getaddr);,{
reduce:72
scanf_expression->scanf(string,getaddr);,(
reduce:72
scanf_expression->scanf(string,getaddr);,id
reduce:72
项目311:
nums->num,}
reduce:38
nums->num.,nums,}
shift:328
项目312:
id_name->array[num]={nums.};,scanf
shift:329
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,while
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目313:
function_call->id(function_call_list),>
reduce:9
function_call->id(function_call_list),<
reduce:9
function_call->id(function_call_list),<=
reduce:9
function_call->id(function_call_list),>=
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),;
reduce:9
项目314:
F->array[E],>
reduce:29
F->array[E],<
reduce:29
F->array[E],<=
reduce:29
F->array[E],>=
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],;
reduce:29
项目315:
Inc_expression->id++,)
reduce:59
项目316:
Dec_expression->id--,)
reduce:60
项目317:
scanf_expression->.scanf(string,getaddr);,scanf
shift:49
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:48
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:44
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,while
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:42
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:41
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目318:
function_call->id(function_call_list),>
reduce:9
function_call->id(function_call_list),<
reduce:9
function_call->id(function_call_list),<=
reduce:9
function_call->id(function_call_list),>=
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
项目319:
F->array[E],>
reduce:29
F->array[E],<
reduce:29
F->array[E],<=
reduce:29
F->array[E],>=
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
项目320:
id_name->id,id_name,scanf
reduce:34
id_name->id,id_name,printf
reduce:34
id_name->id,id_name,else
reduce:34
id_name->id,id_name,if
reduce:34
id_name->id,id_name,while
reduce:34
id_name->id,id_name,for
reduce:34
id_name->id,id_name,return
reduce:34
id_name->id,id_name,array
reduce:34
id_name->id,id_name,num
reduce:34
id_name->id,id_name,/
reduce:34
id_name->id,id_name,*
reduce:34
id_name->id,id_name,-
reduce:34
id_name->id,id_name,+
reduce:34
id_name->id,id_name,char
reduce:34
id_name->id,id_name,double
reduce:34
id_name->id,id_name,int
reduce:34
id_name->id,id_name,}
reduce:34
id_name->id,id_name,{
reduce:34
id_name->id,id_name,(
reduce:34
id_name->id,id_name,id
reduce:34
项目321:
id_name->array[num.]={nums};,scanf
shift:332
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,else
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,while
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目322:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.F,;
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,while
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],>
shift:204
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,>
shift:199
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,>
shift:203
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),>
shift:200
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目323:
scanf_expression->.scanf(string,getaddr);,scanf
shift:243
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:242
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:237
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
whilesentence->.sentence,scanf
whilesentence->.sentence,printf
whilesentence->.sentence,else
whilesentence->.sentence,if
whilesentence->.sentence,while
whilesentence->.sentence,for
whilesentence->.sentence,return
whilesentence->.sentence,array
whilesentence->.sentence,num
whilesentence->.sentence,/
whilesentence->.sentence,*
whilesentence->.sentence,-
whilesentence->.sentence,+
whilesentence->.sentence,char
whilesentence->.sentence,double
whilesentence->.sentence,int
whilesentence->.sentence,}
whilesentence->.sentence,{
whilesentence->.sentence,(
whilesentence->.sentence,id
while_expression->while(bool_expression).whilesentence,scanf
while_expression->while(bool_expression).whilesentence,printf
while_expression->while(bool_expression).whilesentence,else
while_expression->while(bool_expression).whilesentence,if
while_expression->while(bool_expression).whilesentence,while
while_expression->while(bool_expression).whilesentence,for
while_expression->while(bool_expression).whilesentence,return
while_expression->while(bool_expression).whilesentence,array
while_expression->while(bool_expression).whilesentence,num
while_expression->while(bool_expression).whilesentence,/
while_expression->while(bool_expression).whilesentence,*
while_expression->while(bool_expression).whilesentence,-
while_expression->while(bool_expression).whilesentence,+
while_expression->while(bool_expression).whilesentence,char
while_expression->while(bool_expression).whilesentence,double
while_expression->while(bool_expression).whilesentence,int
while_expression->while(bool_expression).whilesentence,}
while_expression->while(bool_expression).whilesentence,{
while_expression->while(bool_expression).whilesentence,(
while_expression->while(bool_expression).whilesentence,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:235
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:234
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:229
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:225
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目324:
scanf_expression->.scanf(string,getaddr);,scanf
shift:243
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:242
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,while
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:237
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->if(bool_expression).sentence,scanf
if_expression->if(bool_expression).sentence,printf
if_expression->if(bool_expression).sentence,else
if_expression->if(bool_expression).sentence,if
if_expression->if(bool_expression).sentence,while
if_expression->if(bool_expression).sentence,for
if_expression->if(bool_expression).sentence,return
if_expression->if(bool_expression).sentence,array
if_expression->if(bool_expression).sentence,num
if_expression->if(bool_expression).sentence,/
if_expression->if(bool_expression).sentence,*
if_expression->if(bool_expression).sentence,-
if_expression->if(bool_expression).sentence,+
if_expression->if(bool_expression).sentence,char
if_expression->if(bool_expression).sentence,double
if_expression->if(bool_expression).sentence,int
if_expression->if(bool_expression).sentence,}
if_expression->if(bool_expression).sentence,{
if_expression->if(bool_expression).sentence,(
if_expression->if(bool_expression).sentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:235
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:234
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:229
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:225
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目325:
printf_expression->printf(string).;,scanf
shift:338
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,else
printf_expression->printf(string).;,if
printf_expression->printf(string).;,while
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目326:
expressions->.id,)
shift:245
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,else
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,while
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目327:
getaddr->.&id,)
shift:248
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,else
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,while
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目328:
nums->.num,}
shift:311
nums->num,.nums,}
nums->.num,nums,}
项目329:
id_name->array[num]={nums}.;,scanf
shift:342
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,while
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目330:
forsentence->sentence,scanf
reduce:55
forsentence->sentence,printf
reduce:55
forsentence->sentence,if
reduce:55
forsentence->sentence,while
reduce:55
forsentence->sentence,for
reduce:55
forsentence->sentence,return
reduce:55
forsentence->sentence,array
reduce:55
forsentence->sentence,num
reduce:55
forsentence->sentence,/
reduce:55
forsentence->sentence,*
reduce:55
forsentence->sentence,-
reduce:55
forsentence->sentence,+
reduce:55
forsentence->sentence,char
reduce:55
forsentence->sentence,double
reduce:55
forsentence->sentence,int
reduce:55
forsentence->sentence,}
reduce:55
forsentence->sentence,{
reduce:55
forsentence->sentence,(
reduce:55
forsentence->sentence,id
reduce:55
项目331:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,while
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
reduce:45
项目332:
id_name->array[num].={nums};,scanf
shift:343
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,else
id_name->array[num].={nums};,if
id_name->array[num].={nums};,while
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目333:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
shift:344
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目334:
whilesentence->sentence,scanf
reduce:47
whilesentence->sentence,printf
reduce:47
whilesentence->sentence,else
reduce:47
whilesentence->sentence,if
reduce:47
whilesentence->sentence,while
reduce:47
whilesentence->sentence,for
reduce:47
whilesentence->sentence,return
reduce:47
whilesentence->sentence,array
reduce:47
whilesentence->sentence,num
reduce:47
whilesentence->sentence,/
reduce:47
whilesentence->sentence,*
reduce:47
whilesentence->sentence,-
reduce:47
whilesentence->sentence,+
reduce:47
whilesentence->sentence,char
reduce:47
whilesentence->sentence,double
reduce:47
whilesentence->sentence,int
reduce:47
whilesentence->sentence,}
reduce:47
whilesentence->sentence,{
reduce:47
whilesentence->sentence,(
reduce:47
whilesentence->sentence,id
reduce:47
项目335:
while_expression->while(bool_expression)whilesentence,scanf
reduce:46
while_expression->while(bool_expression)whilesentence,printf
reduce:46
while_expression->while(bool_expression)whilesentence,else
reduce:46
while_expression->while(bool_expression)whilesentence,if
reduce:46
while_expression->while(bool_expression)whilesentence,while
reduce:46
while_expression->while(bool_expression)whilesentence,for
reduce:46
while_expression->while(bool_expression)whilesentence,return
reduce:46
while_expression->while(bool_expression)whilesentence,array
reduce:46
while_expression->while(bool_expression)whilesentence,num
reduce:46
while_expression->while(bool_expression)whilesentence,/
reduce:46
while_expression->while(bool_expression)whilesentence,*
reduce:46
while_expression->while(bool_expression)whilesentence,-
reduce:46
while_expression->while(bool_expression)whilesentence,+
reduce:46
while_expression->while(bool_expression)whilesentence,char
reduce:46
while_expression->while(bool_expression)whilesentence,double
reduce:46
while_expression->while(bool_expression)whilesentence,int
reduce:46
while_expression->while(bool_expression)whilesentence,}
reduce:46
while_expression->while(bool_expression)whilesentence,{
reduce:46
while_expression->while(bool_expression)whilesentence,(
reduce:46
while_expression->while(bool_expression)whilesentence,id
reduce:46
项目336:
ifsentence->sentence,else
reduce:64
if_expression->if(bool_expression)sentence,scanf
reduce:62
if_expression->if(bool_expression)sentence,printf
reduce:62
if_expression->if(bool_expression)sentence,else
规约-规约冲突！
if_expression->if(bool_expression)sentence,if
reduce:62
if_expression->if(bool_expression)sentence,while
reduce:62
if_expression->if(bool_expression)sentence,for
reduce:62
if_expression->if(bool_expression)sentence,return
reduce:62
if_expression->if(bool_expression)sentence,array
reduce:62
if_expression->if(bool_expression)sentence,num
reduce:62
if_expression->if(bool_expression)sentence,/
reduce:62
if_expression->if(bool_expression)sentence,*
reduce:62
if_expression->if(bool_expression)sentence,-
reduce:62
if_expression->if(bool_expression)sentence,+
reduce:62
if_expression->if(bool_expression)sentence,char
reduce:62
if_expression->if(bool_expression)sentence,double
reduce:62
if_expression->if(bool_expression)sentence,int
reduce:62
if_expression->if(bool_expression)sentence,}
reduce:62
if_expression->if(bool_expression)sentence,{
reduce:62
if_expression->if(bool_expression)sentence,(
reduce:62
if_expression->if(bool_expression)sentence,id
reduce:62
项目337:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
shift:345
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,else
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,while
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目338:
printf_expression->printf(string);,scanf
reduce:68
printf_expression->printf(string);,printf
reduce:68
printf_expression->printf(string);,else
reduce:68
printf_expression->printf(string);,if
reduce:68
printf_expression->printf(string);,while
reduce:68
printf_expression->printf(string);,for
reduce:68
printf_expression->printf(string);,return
reduce:68
printf_expression->printf(string);,array
reduce:68
printf_expression->printf(string);,num
reduce:68
printf_expression->printf(string);,/
reduce:68
printf_expression->printf(string);,*
reduce:68
printf_expression->printf(string);,-
reduce:68
printf_expression->printf(string);,+
reduce:68
printf_expression->printf(string);,char
reduce:68
printf_expression->printf(string);,double
reduce:68
printf_expression->printf(string);,int
reduce:68
printf_expression->printf(string);,}
reduce:68
printf_expression->printf(string);,{
reduce:68
printf_expression->printf(string);,(
reduce:68
printf_expression->printf(string);,id
reduce:68
项目339:
printf_expression->printf(string,expressions.);,scanf
shift:346
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,else
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,while
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目340:
scanf_expression->scanf(string,getaddr.);,scanf
shift:347
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,else
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,while
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目341:
nums->num,nums,}
reduce:37
项目342:
id_name->array[num]={nums};,scanf
reduce:36
id_name->array[num]={nums};,printf
reduce:36
id_name->array[num]={nums};,if
reduce:36
id_name->array[num]={nums};,while
reduce:36
id_name->array[num]={nums};,for
reduce:36
id_name->array[num]={nums};,return
reduce:36
id_name->array[num]={nums};,array
reduce:36
id_name->array[num]={nums};,num
reduce:36
id_name->array[num]={nums};,/
reduce:36
id_name->array[num]={nums};,*
reduce:36
id_name->array[num]={nums};,-
reduce:36
id_name->array[num]={nums};,+
reduce:36
id_name->array[num]={nums};,char
reduce:36
id_name->array[num]={nums};,double
reduce:36
id_name->array[num]={nums};,int
reduce:36
id_name->array[num]={nums};,}
reduce:36
id_name->array[num]={nums};,{
reduce:36
id_name->array[num]={nums};,(
reduce:36
id_name->array[num]={nums};,id
reduce:36
项目343:
id_name->array[num]=.{nums};,scanf
shift:348
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,else
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,while
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目344:
Dec_expression->.id--,)
shift:287
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,while
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目345:
scanf_expression->.scanf(string,getaddr);,scanf
shift:243
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:242
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,while
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:237
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:235
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:234
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:229
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:225
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目346:
printf_expression->printf(string,expressions).;,scanf
shift:351
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,else
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,while
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目347:
scanf_expression->scanf(string,getaddr).;,scanf
shift:352
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,else
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,while
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目348:
nums->.num,}
shift:311
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,else
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,while
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目349:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
shift:354
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目350:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,printf
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,else
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,if
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,while
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,for
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,return
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,array
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,num
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,/
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,*
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,-
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,+
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,char
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,double
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,int
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,}
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,{
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,(
reduce:63
if_expression->if(bool_expression)ifsentenceelsesentence,id
reduce:63
项目351:
printf_expression->printf(string,expressions);,scanf
reduce:69
printf_expression->printf(string,expressions);,printf
reduce:69
printf_expression->printf(string,expressions);,else
reduce:69
printf_expression->printf(string,expressions);,if
reduce:69
printf_expression->printf(string,expressions);,while
reduce:69
printf_expression->printf(string,expressions);,for
reduce:69
printf_expression->printf(string,expressions);,return
reduce:69
printf_expression->printf(string,expressions);,array
reduce:69
printf_expression->printf(string,expressions);,num
reduce:69
printf_expression->printf(string,expressions);,/
reduce:69
printf_expression->printf(string,expressions);,*
reduce:69
printf_expression->printf(string,expressions);,-
reduce:69
printf_expression->printf(string,expressions);,+
reduce:69
printf_expression->printf(string,expressions);,char
reduce:69
printf_expression->printf(string,expressions);,double
reduce:69
printf_expression->printf(string,expressions);,int
reduce:69
printf_expression->printf(string,expressions);,}
reduce:69
printf_expression->printf(string,expressions);,{
reduce:69
printf_expression->printf(string,expressions);,(
reduce:69
printf_expression->printf(string,expressions);,id
reduce:69
项目352:
scanf_expression->scanf(string,getaddr);,scanf
reduce:72
scanf_expression->scanf(string,getaddr);,printf
reduce:72
scanf_expression->scanf(string,getaddr);,else
reduce:72
scanf_expression->scanf(string,getaddr);,if
reduce:72
scanf_expression->scanf(string,getaddr);,while
reduce:72
scanf_expression->scanf(string,getaddr);,for
reduce:72
scanf_expression->scanf(string,getaddr);,return
reduce:72
scanf_expression->scanf(string,getaddr);,array
reduce:72
scanf_expression->scanf(string,getaddr);,num
reduce:72
scanf_expression->scanf(string,getaddr);,/
reduce:72
scanf_expression->scanf(string,getaddr);,*
reduce:72
scanf_expression->scanf(string,getaddr);,-
reduce:72
scanf_expression->scanf(string,getaddr);,+
reduce:72
scanf_expression->scanf(string,getaddr);,char
reduce:72
scanf_expression->scanf(string,getaddr);,double
reduce:72
scanf_expression->scanf(string,getaddr);,int
reduce:72
scanf_expression->scanf(string,getaddr);,}
reduce:72
scanf_expression->scanf(string,getaddr);,{
reduce:72
scanf_expression->scanf(string,getaddr);,(
reduce:72
scanf_expression->scanf(string,getaddr);,id
reduce:72
项目353:
id_name->array[num]={nums.};,scanf
shift:355
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,else
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,while
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目354:
scanf_expression->.scanf(string,getaddr);,scanf
shift:243
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,else
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,while
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:242
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,while
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,else
printf_expression->.printf(string);,if
printf_expression->.printf(string);,while
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,else
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,while
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,else
inout_expression->.printf_expression,if
inout_expression->.printf_expression,while
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,else
sentence->.inout_expression,if
sentence->.inout_expression,while
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:237
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,while
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
if_expression->.if(bool_expression)sentence,scanf
if_expression->.if(bool_expression)sentence,printf
if_expression->.if(bool_expression)sentence,else
if_expression->.if(bool_expression)sentence,if
if_expression->.if(bool_expression)sentence,while
if_expression->.if(bool_expression)sentence,for
if_expression->.if(bool_expression)sentence,return
if_expression->.if(bool_expression)sentence,array
if_expression->.if(bool_expression)sentence,num
if_expression->.if(bool_expression)sentence,/
if_expression->.if(bool_expression)sentence,*
if_expression->.if(bool_expression)sentence,-
if_expression->.if(bool_expression)sentence,+
if_expression->.if(bool_expression)sentence,char
if_expression->.if(bool_expression)sentence,double
if_expression->.if(bool_expression)sentence,int
if_expression->.if(bool_expression)sentence,}
if_expression->.if(bool_expression)sentence,{
if_expression->.if(bool_expression)sentence,(
if_expression->.if(bool_expression)sentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,else
sentence->.if_expression,if
sentence->.if_expression,while
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,else
forsentence->.sentence,if
forsentence->.sentence,while
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
while_expression->.while(bool_expression)whilesentence,scanf
shift:235
while_expression->.while(bool_expression)whilesentence,printf
while_expression->.while(bool_expression)whilesentence,else
while_expression->.while(bool_expression)whilesentence,if
while_expression->.while(bool_expression)whilesentence,while
while_expression->.while(bool_expression)whilesentence,for
while_expression->.while(bool_expression)whilesentence,return
while_expression->.while(bool_expression)whilesentence,array
while_expression->.while(bool_expression)whilesentence,num
while_expression->.while(bool_expression)whilesentence,/
while_expression->.while(bool_expression)whilesentence,*
while_expression->.while(bool_expression)whilesentence,-
while_expression->.while(bool_expression)whilesentence,+
while_expression->.while(bool_expression)whilesentence,char
while_expression->.while(bool_expression)whilesentence,double
while_expression->.while(bool_expression)whilesentence,int
while_expression->.while(bool_expression)whilesentence,}
while_expression->.while(bool_expression)whilesentence,{
while_expression->.while(bool_expression)whilesentence,(
while_expression->.while(bool_expression)whilesentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,while
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:234
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,while
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.while_expression,scanf
sentence->.while_expression,printf
sentence->.while_expression,else
sentence->.while_expression,if
sentence->.while_expression,while
sentence->.while_expression,for
sentence->.while_expression,return
sentence->.while_expression,array
sentence->.while_expression,num
sentence->.while_expression,/
sentence->.while_expression,*
sentence->.while_expression,-
sentence->.while_expression,+
sentence->.while_expression,char
sentence->.while_expression,double
sentence->.while_expression,int
sentence->.while_expression,}
sentence->.while_expression,{
sentence->.while_expression,(
sentence->.while_expression,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,else
sentence->.loop_expression,if
sentence->.loop_expression,while
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,else
sentence->.set_value;,if
sentence->.set_value;,while
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,else
define->.typeid_name,if
define->.typeid_name,while
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,else
sentence->.define,if
sentence->.define,while
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:229
sentence->.returnE;,printf
sentence->.returnE;,else
sentence->.returnE;,if
sentence->.returnE;,while
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,else
sentence->.E;,if
sentence->.E;,while
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:225
sentence->.{block},printf
sentence->.{block},else
sentence->.{block},if
sentence->.{block},while
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:29
type->.char,id
type->.double,array
shift:28
type->.double,id
type->.int,array
shift:27
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目355:
id_name->array[num]={nums}.;,scanf
shift:358
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,else
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,while
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目356:
forsentence->sentence,scanf
reduce:55
forsentence->sentence,printf
reduce:55
forsentence->sentence,else
reduce:55
forsentence->sentence,if
reduce:55
forsentence->sentence,while
reduce:55
forsentence->sentence,for
reduce:55
forsentence->sentence,return
reduce:55
forsentence->sentence,array
reduce:55
forsentence->sentence,num
reduce:55
forsentence->sentence,/
reduce:55
forsentence->sentence,*
reduce:55
forsentence->sentence,-
reduce:55
forsentence->sentence,+
reduce:55
forsentence->sentence,char
reduce:55
forsentence->sentence,double
reduce:55
forsentence->sentence,int
reduce:55
forsentence->sentence,}
reduce:55
forsentence->sentence,{
reduce:55
forsentence->sentence,(
reduce:55
forsentence->sentence,id
reduce:55
项目357:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,while
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
reduce:45
项目358:
id_name->array[num]={nums};,scanf
reduce:36
id_name->array[num]={nums};,printf
reduce:36
id_name->array[num]={nums};,else
reduce:36
id_name->array[num]={nums};,if
reduce:36
id_name->array[num]={nums};,while
reduce:36
id_name->array[num]={nums};,for
reduce:36
id_name->array[num]={nums};,return
reduce:36
id_name->array[num]={nums};,array
reduce:36
id_name->array[num]={nums};,num
reduce:36
id_name->array[num]={nums};,/
reduce:36
id_name->array[num]={nums};,*
reduce:36
id_name->array[num]={nums};,-
reduce:36
id_name->array[num]={nums};,+
reduce:36
id_name->array[num]={nums};,char
reduce:36
id_name->array[num]={nums};,double
reduce:36
id_name->array[num]={nums};,int
reduce:36
id_name->array[num]={nums};,}
reduce:36
id_name->array[num]={nums};,{
reduce:36
id_name->array[num]={nums};,(
reduce:36
id_name->array[num]={nums};,id
reduce:36
Action Table:
        #      id       (       )       {       }    void       ,     int  double    char       ;       +       -       *       /     num   array       [       ]  return       =     for   while      >=      <=       <       >      ++      --      if    else  printf  string   scanf       &
 0    error   error   error   error   error   errorS      5   errorS      7S      8S      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 1 r     12   error   error   error   error   errorS      5   errorS      7S      8S      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 2 r      0   error   error   error   error   errorr      0   errorr      0r      0r      0   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 3    errorS     11   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 4    errorr      4   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 5    errorr      5   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 6      acc   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 7    errorr     13   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 8    errorr     14   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
 9    errorr     15   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
10 r      1   error   error   error   error   errorr      1   errorr      1r      1r      1   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
11    error   errorS     12   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
12    error   error   errorS     13   error   error   error   errorS      7S      8S      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
13    error   error   error   errorS     16   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
14    error   error   errorS     17   error   error   errorS     18   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
15    errorS     19   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
16    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
17    error   error   error   errorS     50   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
18    error   error   error   error   error   error   error   errorS      7S      8S      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
19    error   error   errorr      6   error   error   errorr      6   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
20    error   errorS     52   error   error   error   error   error   error   error   errorr     28r     28r     28r     28r     28   error   error   error   error   errorr     41   error   error   error   error   error   error   error   error   error   error   error   error   error   error
21    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
22    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
23    error   error   error   error   errorS     62   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
24    errorS     63   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS     64   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
25    error   error   error   error   error   error   error   error   error   error   errorr     30r     30r     30r     30r     30   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
26    error   error   error   error   error   error   error   error   error   error   errorr     25r     25r     25r     25r     25   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
27    errorr     13   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorr     13   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
28    errorr     14   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorr     14   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
29    errorr     15   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorr     15   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
30    errorS     20S     21   errorS     22r     16   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
31    error   error   error   error   error   error   error   error   error   error   errorS     67S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
32    error   error   error   error   error   error   error   error   error   error   errorr     22r     22r     22S     70S     71   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
33    error   error   error   error   error   error   error   error   error   error   errorr     27r     27r     27r     27r     27   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
34    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS     72   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
35    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
36    errorr     32r     32   errorr     32r     32   error   errorr     32r     32r     32   errorr     32r     32r     32r     32r     32r     32   error   errorr     32   errorr     32r     32   error   error   error   error   error   errorr     32   errorr     32   errorr     32   error
37    error   error   error   error   error   error   error   error   error   error   errorS     76   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
38    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS     77   error   error   error   error   error   error   error   error   error   error   error   error   error   error
39    errorr     43r     43   errorr     43r     43   error   errorr     43r     43r     43   errorr     43r     43r     43r     43r     43r     43   error   errorr     43   errorr     43r     43   error   error   error   error   error   errorr     43   errorr     43   errorr     43   error
40    errorr     44r     44   errorr     44r     44   error   errorr     44r     44r     44   errorr     44r     44r     44r     44r     44r     44   error   errorr     44   errorr     44r     44   error   error   error   error   error   errorr     44   errorr     44   errorr     44   error
41    error   errorS     78   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
42    error   errorS     79   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
43    errorr     61r     61   errorr     61r     61   error   errorr     61r     61r     61   errorr     61r     61r     61r     61r     61r     61   error   errorr     61   errorr     61r     61   error   error   error   error   error   errorr     61   errorr     61   errorr     61   error
44    error   errorS     80   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
45    errorr     65r     65   errorr     65r     65   error   errorr     65r     65r     65   errorr     65r     65r     65r     65r     65r     65   error   errorr     65   errorr     65r     65   error   error   error   error   error   errorr     65   errorr     65   errorr     65   error
46    errorr     66r     66   errorr     66r     66   error   errorr     66r     66r     66   errorr     66r     66r     66r     66r     66r     66   error   errorr     66   errorr     66r     66   error   error   error   error   error   errorr     66   errorr     66   errorr     66   error
47    errorr     67r     67   errorr     67r     67   error   errorr     67r     67r     67   errorr     67r     67r     67r     67r     67r     67   error   errorr     67   errorr     67r     67   error   error   error   error   error   errorr     67   errorr     67   errorr     67   error
48    error   errorS     81   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
49    error   errorS     82   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
50    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
51    errorS     84   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
52    errorS     85S     86S     87   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
53    error   errorS     93r     28   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
54    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
55    error   error   errorr     30   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
56    error   error   errorr     25   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
57    error   error   errorS     95   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
58    error   error   errorr     22   error   error   error   error   error   error   error   errorr     22r     22S     98S     99   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
59    error   error   errorr     27   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
60    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    100   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
61    error   error   error   error   errorS    101   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
62 r      2   error   error   error   error   errorr      2   errorr      2r      2r      2   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
63    error   error   error   error   error   error   errorS    102   error   error   errorS    103   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
64    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    104   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
65    errorr     33r     33   errorr     33r     33   error   errorr     33r     33r     33   errorr     33r     33r     33r     33r     33r     33   error   errorr     33   errorr     33r     33   error   error   error   error   error   errorr     33   errorr     33   errorr     33   error
66    error   error   error   error   errorr     17   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
67    errorr     19r     19   errorr     19r     19   error   errorr     19r     19r     19   errorr     19r     19r     19r     19r     19r     19   error   errorr     19   errorr     19r     19   error   error   error   error   error   errorr     19   errorr     19   errorr     19   error
68    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
69    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
70    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
71    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
72    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
73    error   errorS     52   error   error   error   error   error   error   error   errorr     28r     28r     28r     28r     28   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
74    error   error   error   error   error   error   error   error   error   error   errorS    117S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
75    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    118   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
76    errorr     39r     39   errorr     39r     39   error   errorr     39r     39r     39   errorr     39r     39r     39r     39r     39r     39   error   errorr     39   errorr     39r     39   error   error   error   error   error   errorr     39   errorr     39   errorr     39   error
77    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
78    errorS    120   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    121   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
79    errorS    124S    125   error   error   error   error   error   error   error   error   error   error   error   error   errorS    130S    131   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
80    errorS    124S    125   error   error   error   error   error   error   error   error   error   error   error   error   errorS    130S    131   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
81    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    135   error   error
82    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    136   error   error
83    error   error   error   error   errorS    137   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
84    error   error   errorr      7   error   error   errorr      7   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
85    error   errorS    138r     28   error   error   errorr     28   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
86    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
87    error   error   error   error   error   error   error   error   error   error   errorr      8r      8r      8r      8r      8   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
88    error   error   errorr     30   error   error   errorr     30   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
89    error   error   errorS    140   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
90    error   error   errorr     10   error   error   errorr     10   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
91    error   error   errorr     27   error   error   errorr     27   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
92    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    142   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
93    errorS     85S     86S    143   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
94    error   error   errorS    145   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
95    error   error   error   error   error   error   error   error   error   error   errorr     26r     26r     26r     26r     26   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
96    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
97    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
98    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
99    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
100    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
101    errorr     18r     18   errorr     18r     18   error   errorr     18r     18r     18   errorr     18r     18r     18r     18r     18r     18   error   errorr     18   errorr     18r     18   error   error   error   error   error   errorr     18   errorr     18   errorr     18   error
102    errorS     63   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS     64   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
103    errorr     35r     35   errorr     35r     35   error   errorr     35r     35r     35   errorr     35r     35r     35r     35r     35r     35   error   errorr     35   errorr     35r     35   error   error   error   error   error   errorr     35   errorr     35   errorr     35   error
104    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    152   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
105    error   error   error   error   error   error   error   error   error   error   errorr     20r     20r     20S     70S     71   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
106    error   error   error   error   error   error   error   error   error   error   errorr     21r     21r     21S     70S     71   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
107    error   error   error   error   error   error   error   error   error   error   errorr     23r     23r     23r     23r     23   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
108    error   error   error   error   error   error   error   error   error   error   errorr     24r     24r     24r     24r     24   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
109    error   errorS    153   error   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   errorr     28   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
110    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
111    error   error   error   error   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   errorr     30   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
112    error   error   error   error   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   errorr     25   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
113    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    157   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
114    error   error   error   error   error   error   error   error   error   error   error   errorr     22r     22S    158S    159   error   error   errorr     22   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
115    error   error   error   error   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   errorr     27   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
116    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    160   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
117    errorr     31r     31   errorr     31r     31   error   errorr     31r     31r     31   errorr     31r     31r     31r     31r     31r     31   error   errorr     31   errorr     31r     31   error   error   error   error   error   errorr     31   errorr     31   errorr     31   error
118    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
119    error   error   error   error   error   error   error   error   error   error   errorr     40S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
120    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorr     41   error   error   error   error   error   error   error   error   error   error   error   error   error   error
121    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    162   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
122    error   error   error   error   error   error   error   error   error   error   errorr     56   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
123    error   error   error   error   error   error   error   error   error   error   errorS    163   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
124    error   errorS    164r     28   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   error
125    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
126    error   error   errorr     30   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   error
127    error   error   errorr     49   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   error
128    error   error   error   error   error   error   error   error   error   error   error   errorS    166S    167   error   error   error   error   error   error   error   error   error   errorr     74r     74r     74r     74   error   error   error   error   error   error   error   error
129    error   error   error   error   error   error   error   error   error   error   error   errorr     22r     22S    168S    169   error   error   error   error   error   error   error   errorr     22r     22r     22r     22   error   error   error   error   error   error   error   error
130    error   error   errorr     27   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   error
131    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    170   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
132    error   error   errorS    171   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
133    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    173S    174S    175S    176   error   error   error   error   error   error   error   error
134    error   error   errorS    177   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
135    error   error   errorS    178   error   error   errorS    179   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
136    error   error   error   error   error   error   errorS    180   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
137 r      3   error   error   error   error   errorr      3   errorr      3r      3r      3   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
138    errorS     85S     86S    181   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
139    error   error   errorS    183   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
140    error   error   error   error   error   error   error   error   error   error   errorr      9r      9r      9r      9r      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
141    errorS     85S     86   error   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
142    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
143    error   error   errorr      8   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
144    error   error   errorS    186   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
145    error   error   errorr     26   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
146    error   error   errorr     20   error   error   error   error   error   error   error   errorr     20r     20S     98S     99   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
147    error   error   errorr     21   error   error   error   error   error   error   error   errorr     21r     21S     98S     99   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
148    error   error   errorr     23   error   error   error   error   error   error   error   errorr     23r     23r     23r     23   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
149    error   error   errorr     24   error   error   error   error   error   error   error   errorr     24r     24r     24r     24   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
150    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    187   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
151    errorr     34r     34   errorr     34r     34   error   errorr     34r     34r     34   errorr     34r     34r     34r     34r     34r     34   error   errorr     34   errorr     34r     34   error   error   error   error   error   errorr     34   errorr     34   errorr     34   error
152    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    188   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
153    errorS     85S     86S    189   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
154    error   error   errorS    191   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
155    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
156    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
157    error   error   error   error   error   error   error   error   error   error   errorr     29r     29r     29r     29r     29   error   error   error   error   errorr     42   error   error   error   error   error   error   error   error   error   error   error   error   error   error
158    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
159    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
160    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
161    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    197   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
162    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
163    errorS    199S    200   error   error   error   error   error   error   error   error   error   error   error   error   errorS    203S    204   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
164    errorS     85S     86S    207   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
165    error   error   errorS    209   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
166    errorS    210S    211   error   error   error   error   error   error   error   error   error   error   error   error   errorS    215S    216   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
167    errorS    210S    211   error   error   error   error   error   error   error   error   error   error   error   error   errorS    215S    216   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
168    errorS    210S    211   error   error   error   error   error   error   error   error   error   error   error   error   errorS    215S    216   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
169    errorS    210S    211   error   error   error   error   error   error   error   error   error   error   error   error   errorS    215S    216   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
170    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
171    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
172    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
173    errorr     50r     50   error   error   error   error   error   error   error   error   errorr     50r     50r     50r     50r     50r     50   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
174    errorr     51r     51   error   error   error   error   error   error   error   error   errorr     51r     51r     51r     51r     51r     51   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
175    errorr     52r     52   error   error   error   error   error   error   error   error   errorr     52r     52r     52r     52r     52r     52   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
176    errorr     53r     53   error   error   error   error   error   error   error   error   errorr     53r     53r     53r     53r     53r     53   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
177    errorS     20S     21   errorS    225   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS    229   errorS    234S    235   error   error   error   error   error   errorS    237   errorS    242   errorS    243   error
178    error   error   error   error   error   error   error   error   error   error   errorS    244   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
179    errorS    245   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
180    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    248
181    error   error   errorr      8   error   error   errorr      8   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
182    error   error   errorS    249   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
183    error   error   errorr     26   error   error   errorr     26   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
184    error   error   errorr     11   error   error   errorr     11   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
185    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    250   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
186    error   error   errorr      9   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
187    error   error   errorr     29   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
188    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    251   error   error   error   error   error   error   error   error   error   error   error   error   error   error
189    error   error   error   error   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   errorr      8   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
190    error   error   errorS    252   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
191    error   error   error   error   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   errorr     26   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
192    error   error   error   error   error   error   error   error   error   error   error   errorr     20r     20S    158S    159   error   error   errorr     20   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
193    error   error   error   error   error   error   error   error   error   error   error   errorr     21r     21S    158S    159   error   error   errorr     21   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
194    error   error   error   error   error   error   error   error   error   error   error   errorr     23r     23r     23r     23   error   error   errorr     23   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
195    error   error   error   error   error   error   error   error   error   error   error   errorr     24r     24r     24r     24   error   error   errorr     24   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
196    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    253   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
197    error   error   error   error   error   error   error   error   error   error   errorr     29r     29r     29r     29r     29   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
198    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    254   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
199    error   errorS    255   error   error   error   error   error   error   error   errorr     28r     28r     28r     28r     28   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   error
200    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
201    error   error   error   error   error   error   error   error   error   error   errorr     30r     30r     30r     30r     30   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   error
202    error   error   error   error   error   error   error   error   error   error   errorr     49r     25r     25r     25r     25   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   error
203    error   error   error   error   error   error   error   error   error   error   errorr     27r     27r     27r     27r     27   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   error
204    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    257   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
205    error   error   error   error   error   error   error   error   error   error   errorS    258   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
206    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    173S    174S    175S    176   error   error   error   error   error   error   error   error
207    error   error   errorr      8   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   error
208    error   error   errorS    260   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
209    error   error   errorr     26   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   error
210    error   errorS    261   error   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   errorr     28r     28r     28r     28   error   error   error   error   error   error   error   error
211    errorS     53S     54   error   error   error   error   error   error   error   error   error   error   error   error   errorS     59S     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
212    error   error   error   error   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   errorr     30r     30r     30r     30   error   error   error   error   error   error   error   error
213    error   error   error   error   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   errorr     25r     25r     25r     25   error   error   error   error   error   error   error   error
214    error   error   error   error   error   error   error   error   error   error   error   errorr     20r     20S    168S    169   error   error   error   error   error   error   error   errorr     20r     20r     20r     20   error   error   error   error   error   error   error   error
215    error   error   error   error   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   errorr     27r     27r     27r     27   error   error   error   error   error   error   error   error
216    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    263   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
217    error   error   error   error   error   error   error   error   error   error   error   errorr     21r     21S    168S    169   error   error   error   error   error   error   error   errorr     21r     21r     21r     21   error   error   error   error   error   error   error   error
218    error   error   error   error   error   error   error   error   error   error   error   errorr     23r     23r     23r     23   error   error   error   error   error   error   error   errorr     23r     23r     23r     23   error   error   error   error   error   error   error   error
219    error   error   error   error   error   error   error   error   error   error   error   errorr     24r     24r     24r     24   error   error   error   error   error   error   error   errorr     24r     24r     24r     24   error   error   error   error   error   error   error   error
220    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    264   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
221    errorr     47r     47   errorr     47r     47   error   errorr     47r     47r     47   errorr     47r     47r     47r     47r     47r     47   error   errorr     47   errorr     47r     47   error   error   error   error   error   errorr     47   errorr     47   errorr     47   error
222    errorr     46r     46   errorr     46r     46   error   errorr     46r     46r     46   errorr     46r     46r     46r     46r     46r     46   error   errorr     46   errorr     46r     46   error   error   error   error   error   errorr     46   errorr     46   errorr     46   error
223    error   error   errorr     54   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
224    error   error   errorr     48   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
225    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
226    errorS    266   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    267   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
227    errorr     62r     62   errorr     62r     62   error   errorr     62r     62r     62   errorr     62r     62r     62r     62r     62r     62   error   errorr     62   errorr     62r     62   error   error   error   error   error   errorr     62r     64r     62   errorr     62   error
228    error   error   error   error   error   error   error   error   error   error   errorS    269S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
229    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
230    errorr     32r     32   errorr     32r     32   error   errorr     32r     32r     32   errorr     32r     32r     32r     32r     32r     32   error   errorr     32   errorr     32r     32   error   error   error   error   error   errorr     32r     32r     32   errorr     32   error
231    error   error   error   error   error   error   error   error   error   error   errorS    271   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
232    errorr     43r     43   errorr     43r     43   error   errorr     43r     43r     43   errorr     43r     43r     43r     43r     43r     43   error   errorr     43   errorr     43r     43   error   error   error   error   error   errorr     43r     43r     43   errorr     43   error
233    errorr     44r     44   errorr     44r     44   error   errorr     44r     44r     44   errorr     44r     44r     44r     44r     44r     44   error   errorr     44   errorr     44r     44   error   error   error   error   error   errorr     44r     44r     44   errorr     44   error
234    error   errorS    272   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
235    error   errorS    273   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
236    errorr     61r     61   errorr     61r     61   error   errorr     61r     61r     61   errorr     61r     61r     61r     61r     61r     61   error   errorr     61   errorr     61r     61   error   error   error   error   error   errorr     61r     61r     61   errorr     61   error
237    error   errorS    274   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
238    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    275   error   error   error   error
239    errorr     65r     65   errorr     65r     65   error   errorr     65r     65r     65   errorr     65r     65r     65r     65r     65r     65   error   errorr     65   errorr     65r     65   error   error   error   error   error   errorr     65r     65r     65   errorr     65   error
240    errorr     66r     66   errorr     66r     66   error   errorr     66r     66r     66   errorr     66r     66r     66r     66r     66r     66   error   errorr     66   errorr     66r     66   error   error   error   error   error   errorr     66r     66r     66   errorr     66   error
241    errorr     67r     67   errorr     67r     67   error   errorr     67r     67r     67   errorr     67r     67r     67r     67r     67r     67   error   errorr     67   errorr     67r     67   error   error   error   error   error   errorr     67r     67r     67   errorr     67   error
242    error   errorS    276   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
243    error   errorS    277   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
244    errorr     68r     68   errorr     68r     68   error   errorr     68r     68r     68   errorr     68r     68r     68r     68r     68r     68   error   errorr     68   errorr     68r     68   error   error   error   error   error   errorr     68   errorr     68   errorr     68   error
245    error   error   errorr     71   error   error   errorS    278   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
246    error   error   errorS    279   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
247    error   error   errorS    280   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
248    errorS    281   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
249    error   error   errorr      9   error   error   errorr      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
250    error   error   errorr     29   error   error   errorr     29   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
251    error   error   error   errorS    282   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
252    error   error   error   error   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   errorr      9   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
253    error   error   error   error   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   errorr     29   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
254    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorr     42   error   error   error   error   error   error   error   error   error   error   error   error   error   error
255    errorS     85S     86S    283   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
256    error   error   errorS    285   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
257    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
258    errorS    287   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
259    errorS     73S     21   error   error   error   error   error   error   error   error   error   error   error   error   errorS     33S     75   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
260    error   error   errorr      9   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   error
261    errorS     85S     86S    293   error   error   error   error   error   error   error   error   error   error   error   errorS     91S     92   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
262    error   error   errorS    295   error   error   error   error   error   error   error   errorS     96S     97   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
263    errorS    109S    110   error   error   error   error   error   error   error   error   error   error   error   error   errorS    115S    116   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
264    error   error   errorr     29   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   error
265    error   error   error   error   errorS    297   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
266    error   error   error   error   error   error   errorS    298   error   error   errorS    299   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
267    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    300   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
268    errorr     33r     33   errorr     33r     33   error   errorr     33r     33r     33   errorr     33r     33r     33r     33r     33r     33   error   errorr     33   errorr     33r     33   error   error   error   error   error   errorr     33r     33r     33   errorr     33   error
269    errorr     19r     19   errorr     19r     19   error   errorr     19r     19r     19   errorr     19r     19r     19r     19r     19r     19   error   errorr     19   errorr     19r     19   error   error   error   error   error   errorr     19r     19r     19   errorr     19   error
270    error   error   error   error   error   error   error   error   error   error   errorS    301S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
271    errorr     39r     39   errorr     39r     39   error   errorr     39r     39r     39   errorr     39r     39r     39r     39r     39r     39   error   errorr     39   errorr     39r     39   error   error   error   error   error   errorr     39r     39r     39   errorr     39   error
272    errorS    120   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    121   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
273    errorS    124S    125   error   error   error   error   error   error   error   error   error   error   error   error   errorS    130S    131   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
274    errorS    124S    125   error   error   error   error   error   error   error   error   error   error   error   error   errorS    130S    131   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
275    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
276    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    306   error   error
277    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    307   error   error
278    errorS    245   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
279    error   error   error   error   error   error   error   error   error   error   errorS    309   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
280    error   error   error   error   error   error   error   error   error   error   errorS    310   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
281    error   error   errorr     73   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
282    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    311   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
283    error   error   error   error   error   error   error   error   error   error   errorr      8r      8r      8r      8r      8   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   error
284    error   error   errorS    313   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
285    error   error   error   error   error   error   error   error   error   error   errorr     26r     26r     26r     26r     26   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   error
286    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    314   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
287    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    315S    316   error   error   error   error   error   error
288    error   error   errorS    317   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
289    error   error   errorr     57   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
290    error   error   errorr     58   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
291    error   error   error   error   error   error   error   error   error   error   errorr     54S     68S     69   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
292    error   error   error   error   error   error   error   error   error   error   errorr     48   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
293    error   error   error   error   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   errorr      8r      8r      8r      8   error   error   error   error   error   error   error   error
294    error   error   errorS    318   error   error   errorS    141   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
295    error   error   error   error   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   errorr     26r     26r     26r     26   error   error   error   error   error   error   error   error
296    error   error   error   error   error   error   error   error   error   error   error   errorS    155S    156   error   error   error   error   errorS    319   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
297    errorr     18r     18   errorr     18r     18   error   errorr     18r     18r     18   errorr     18r     18r     18r     18r     18r     18   error   errorr     18   errorr     18r     18   error   error   error   error   error   errorr     18r     18r     18   errorr     18   error
298    errorS    266   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    267   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
299    errorr     35r     35   errorr     35r     35   error   errorr     35r     35r     35   errorr     35r     35r     35r     35r     35r     35   error   errorr     35   errorr     35r     35   error   error   error   error   error   errorr     35r     35r     35   errorr     35   error
300    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    321   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
301    errorr     31r     31   errorr     31r     31   error   errorr     31r     31r     31   errorr     31r     31r     31r     31r     31r     31   error   errorr     31   errorr     31r     31   error   error   error   error   error   errorr     31r     31r     31   errorr     31   error
302    error   error   error   error   error   error   error   error   error   error   errorS    322   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
303    error   error   errorS    323   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
304    error   error   errorS    324   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
305    errorr     63r     63   errorr     63r     63   error   errorr     63r     63r     63   errorr     63r     63r     63r     63r     63r     63   error   errorr     63   errorr     63r     63   error   error   error   error   error   errorr     63   errorr     63   errorr     63   error
306    error   error   errorS    325   error   error   errorS    326   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
307    error   error   error   error   error   error   errorS    327   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
308    error   error   errorr     70   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
309    errorr     69r     69   errorr     69r     69   error   errorr     69r     69r     69   errorr     69r     69r     69r     69r     69r     69   error   errorr     69   errorr     69r     69   error   error   error   error   error   errorr     69   errorr     69   errorr     69   error
310    errorr     72r     72   errorr     72r     72   error   errorr     72r     72r     72   errorr     72r     72r     72r     72r     72r     72   error   errorr     72   errorr     72r     72   error   error   error   error   error   errorr     72   errorr     72   errorr     72   error
311    error   error   error   error   errorr     38   errorS    328   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
312    error   error   error   error   errorS    329   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
313    error   error   error   error   error   error   error   error   error   error   errorr      9r      9r      9r      9r      9   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   error
314    error   error   error   error   error   error   error   error   error   error   errorr     29r     29r     29r     29r     29   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   error
315    error   error   errorr     59   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
316    error   error   errorr     60   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
317    errorS     20S     21   errorS     22   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS     35   errorS     41S     42   error   error   error   error   error   errorS     44   errorS     48   errorS     49   error
318    error   error   error   error   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   errorr      9r      9r      9r      9   error   error   error   error   error   error   error   error
319    error   error   error   error   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   errorr     29r     29r     29r     29   error   error   error   error   error   error   error   error
320    errorr     34r     34   errorr     34r     34   error   errorr     34r     34r     34   errorr     34r     34r     34r     34r     34r     34   error   errorr     34   errorr     34r     34   error   error   error   error   error   errorr     34r     34r     34   errorr     34   error
321    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    332   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
322    errorS    199S    200   error   error   error   error   error   error   error   error   error   error   error   error   errorS    203S    204   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
323    errorS     20S     21   errorS    225   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS    229   errorS    234S    235   error   error   error   error   error   errorS    237   errorS    242   errorS    243   error
324    errorS     20S     21   errorS    225   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS    229   errorS    234S    235   error   error   error   error   error   errorS    237   errorS    242   errorS    243   error
325    error   error   error   error   error   error   error   error   error   error   errorS    338   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
326    errorS    245   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
327    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    248
328    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    311   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
329    error   error   error   error   error   error   error   error   error   error   errorS    342   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
330    errorr     55r     55   errorr     55r     55   error   errorr     55r     55r     55   errorr     55r     55r     55r     55r     55r     55   error   errorr     55   errorr     55r     55   error   error   error   error   error   errorr     55   errorr     55   errorr     55   error
331    errorr     45r     45   errorr     45r     45   error   errorr     45r     45r     45   errorr     45r     45r     45r     45r     45r     45   error   errorr     45   errorr     45r     45   error   error   error   error   error   errorr     45   errorr     45   errorr     45   error
332    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    343   error   error   error   error   error   error   error   error   error   error   error   error   error   error
333    error   error   error   error   error   error   error   error   error   error   errorS    344   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
334    errorr     47r     47   errorr     47r     47   error   errorr     47r     47r     47   errorr     47r     47r     47r     47r     47r     47   error   errorr     47   errorr     47r     47   error   error   error   error   error   errorr     47r     47r     47   errorr     47   error
335    errorr     46r     46   errorr     46r     46   error   errorr     46r     46r     46   errorr     46r     46r     46r     46r     46r     46   error   errorr     46   errorr     46r     46   error   error   error   error   error   errorr     46r     46r     46   errorr     46   error
336    errorr     62r     62   errorr     62r     62   error   errorr     62r     62r     62   errorr     62r     62r     62r     62r     62r     62   error   errorr     62   errorr     62r     62   error   error   error   error   error   errorr     62r     64r     62   errorr     62   error
337    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    345   error   error   error   error
338    errorr     68r     68   errorr     68r     68   error   errorr     68r     68r     68   errorr     68r     68r     68r     68r     68r     68   error   errorr     68   errorr     68r     68   error   error   error   error   error   errorr     68r     68r     68   errorr     68   error
339    error   error   errorS    346   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
340    error   error   errorS    347   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
341    error   error   error   error   errorr     37   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
342    errorr     36r     36   errorr     36r     36   error   errorr     36r     36r     36   errorr     36r     36r     36r     36r     36r     36   error   errorr     36   errorr     36r     36   error   error   error   error   error   errorr     36   errorr     36   errorr     36   error
343    error   error   error   errorS    348   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
344    errorS    287   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
345    errorS     20S     21   errorS    225   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS    229   errorS    234S    235   error   error   error   error   error   errorS    237   errorS    242   errorS    243   error
346    error   error   error   error   error   error   error   error   error   error   errorS    351   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
347    error   error   error   error   error   error   error   error   error   error   errorS    352   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
348    error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   errorS    311   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
349    error   error   errorS    354   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
350    errorr     63r     63   errorr     63r     63   error   errorr     63r     63r     63   errorr     63r     63r     63r     63r     63r     63   error   errorr     63   errorr     63r     63   error   error   error   error   error   errorr     63r     63r     63   errorr     63   error
351    errorr     69r     69   errorr     69r     69   error   errorr     69r     69r     69   errorr     69r     69r     69r     69r     69r     69   error   errorr     69   errorr     69r     69   error   error   error   error   error   errorr     69r     69r     69   errorr     69   error
352    errorr     72r     72   errorr     72r     72   error   errorr     72r     72r     72   errorr     72r     72r     72r     72r     72r     72   error   errorr     72   errorr     72r     72   error   error   error   error   error   errorr     72r     72r     72   errorr     72   error
353    error   error   error   error   errorS    355   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
354    errorS     20S     21   errorS    225   error   error   errorS     27S     28S     29   error   error   error   error   errorS     33S     34   error   errorS    229   errorS    234S    235   error   error   error   error   error   errorS    237   errorS    242   errorS    243   error
355    error   error   error   error   error   error   error   error   error   error   errorS    358   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error   error
356    errorr     55r     55   errorr     55r     55   error   errorr     55r     55r     55   errorr     55r     55r     55r     55r     55r     55   error   errorr     55   errorr     55r     55   error   error   error   error   error   errorr     55r     55r     55   errorr     55   error
357    errorr     45r     45   errorr     45r     45   error   errorr     45r     45r     45   errorr     45r     45r     45r     45r     45r     45   error   errorr     45   errorr     45r     45   error   error   error   error   error   errorr     45r     45r     45   errorr     45   error
358    errorr     36r     36   errorr     36r     36   error   errorr     36r     36r     36   errorr     36r     36r     36r     36r     36r     36   error   errorr     36   errorr     36r     36   error   error   error   error   error   errorr     36r     36r     36   errorr     36   error
Goto Table:
      functionfunction_definefunction_type        blockfunction_define_list         typefunction_callfunction_call_list            F            S     sentence            E            T       define      id_name         nums    set_value         leftloop_expressionwhile_expressionfor_set_valuebool_expression     IncorDec  forsentencewhilesentence            G           op            HInc_expressionDec_expressionif_expression   ifsentenceinout_expressionprintf_expressionscanf_expression  expressions      getaddr           S'
 0             1             2             3            -1            -1             4            -1            -1            -1             6            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
 1            -1            10             3            -1            -1             4            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 



 5            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 




10            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

12            -1            -1            -1            -1            14            15            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 



16            -1            -1            -1            23            -1            24            25            -1            26            -1            30            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 

18            -1            -1            -1            -1            -1            51            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 


21            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1            57            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
22            -1            -1            -1            61            -1            24            25            -1            26            -1            30            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 
23            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
24            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            65            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 





30            -1            -1            -1            66            -1            24            25            -1            26            -1            30            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 




35            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1            74            32            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 














50            -1            -1            -1            83            -1            24            25            -1            26            -1            30            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 

52            -1            -1            -1            -1            -1            -1            88            89            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

54            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1            94            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 






61            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 






68            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1            -1           105            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
69            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1            -1           106            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
70            -1            -1            -1            -1            -1            -1            25            -1           107            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
71            -1            -1            -1            -1            -1            -1            25            -1           108            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
72            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           113           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 




77            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1           119            32            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
78            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           122            38            -1            -1           123            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
79            -1            -1            -1            -1            -1            -1           126            -1           127            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           132            -1            -1            -1           133            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
80            -1            -1            -1            -1            -1            -1           126            -1           127            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           134            -1            -1            -1           133            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 





86            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           139            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 






93            -1            -1            -1            -1            -1            -1            88           144            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 


96            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1            -1           146            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
97            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1            -1           147            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
98            -1            -1            -1            -1            -1            -1            55            -1           148            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
99            -1            -1            -1            -1            -1            -1            55            -1           149            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
100            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           150           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

102            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           151            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
103            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
104            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
105            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
106            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
107            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
108            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
109            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
110            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           154            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
111            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
112            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
113            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
115            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
116            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
117            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
118            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           161           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
119            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
120            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

122            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
123            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
124            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
125            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           165            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
126            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
127            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
128            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
129            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
130            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
131            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
132            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
133            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           172            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
134            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
135            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
136            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
137            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
138            -1            -1            -1            -1            -1            -1            88           182            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
139            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
140            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
141            -1            -1            -1            -1            -1            -1            88            -1           184            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
142            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           185           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
143            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
144            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
145            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
146            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
147            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
148            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
149            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
150            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

152            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
153            -1            -1            -1            -1            -1            -1            88           190            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
154            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
155            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1            -1           192            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
156            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1            -1           193            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
157            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
158            -1            -1            -1            -1            -1            -1           111            -1           194            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
159            -1            -1            -1            -1            -1            -1           111            -1           195            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
160            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           196           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
161            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
162            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           198           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
163            -1            -1            -1            -1            -1            -1           201            -1           202            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           205            -1            -1            -1           206            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
164            -1            -1            -1            -1            -1            -1            88           208            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
165            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
166            -1            -1            -1            -1            -1            -1           212            -1           213            -1            -1            -1           214            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
167            -1            -1            -1            -1            -1            -1           212            -1           213            -1            -1            -1           217            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
168            -1            -1            -1            -1            -1            -1           212            -1           218            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
169            -1            -1            -1            -1            -1            -1           212            -1           219            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
170            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           220           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
171            -1            -1            -1            -1            -1            24            25            -1            26            -1           221            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1           222            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 
172            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           223            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           224            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
173            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
174            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
175            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
176            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
177            -1            -1            -1            -1            -1           226            25            -1            26            -1           227           228            32           230            -1            -1           231            38           232           233            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           236           238           239           240           241            -1            -1            -1 
178            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
179            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           246            -1            -1 
180            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           247            -1 

182            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
183            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
184            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
185            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
186            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
187            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
188            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
189            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
190            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

192            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
193            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
194            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
195            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
196            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
197            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
198            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
199            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
200            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           256            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
201            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
202            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
203            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
204            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
205            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
206            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           259            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
207            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
208            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
209            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
210            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
211            -1            -1            -1            -1            -1            -1            55            -1            56            -1            -1           262            58            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
212            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
213            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
214            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
215            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
216            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
217            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
218            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
219            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
220            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

222            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
223            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
224            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
225            -1            -1            -1           265            -1            24            25            -1            26            -1            30            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 
226            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           268            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
227            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
228            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
229            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1           270            32            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
230            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

232            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
233            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
234            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
235            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
236            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
237            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
238            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
239            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
240            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

242            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
243            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
244            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
245            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
246            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
247            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
248            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
249            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
250            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

252            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
253            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
254            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
255            -1            -1            -1            -1            -1            -1            88           284            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
256            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
257            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           286           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
258            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           288            -1            -1            -1            -1            -1           289           290            -1            -1            -1            -1            -1            -1            -1            -1 
259            -1            -1            -1            -1            -1            -1            25            -1            26            -1            -1           291            32            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           292            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
260            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
261            -1            -1            -1            -1            -1            -1            88           294            90            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
262            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
263            -1            -1            -1            -1            -1            -1           111            -1           112            -1            -1           296           114            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
264            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
265            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
266            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
267            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
268            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
269            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
270            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

272            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           122            38            -1            -1           302            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
273            -1            -1            -1            -1            -1            -1           126            -1           127            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           303            -1            -1            -1           133            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
274            -1            -1            -1            -1            -1            -1           126            -1           127            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           304            -1            -1            -1           133            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
275            -1            -1            -1            -1            -1            24            25            -1            26            -1           305            31            32            36            -1            -1            37            38            39            40            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 
276            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
277            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
278            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           308            -1            -1 
279            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
280            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

282            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           312            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
283            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
284            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
285            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
286            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
287            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
288            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
289            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
290            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

292            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
293            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
294            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
295            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
296            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
297            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
298            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           320            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
299            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
300            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

302            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
303            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
304            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
305            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
306            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
307            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
308            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
309            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
310            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

312            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
313            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
314            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
315            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
316            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
317            -1            -1            -1            -1            -1            24            25            -1            26            -1           330            31            32            36            -1            -1            37            38            39            40            -1            -1            -1           331            -1            -1            -1            -1            -1            -1            43            -1            45            46            47            -1            -1            -1 
318            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
319            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
320            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

322            -1            -1            -1            -1            -1            -1           201            -1           202            -1            -1           128           129            -1            -1            -1            -1            -1            -1            -1            -1           333            -1            -1            -1           206            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
323            -1            -1            -1            -1            -1           226            25            -1            26            -1           334           228            32           230            -1            -1           231            38           232           233            -1            -1            -1            -1           335            -1            -1            -1            -1            -1           236            -1           239           240           241            -1            -1            -1 
324            -1            -1            -1            -1            -1           226            25            -1            26            -1           336           228            32           230            -1            -1           231            38           232           233            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           236           337           239           240           241            -1            -1            -1 
325            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
326            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           339            -1            -1 
327            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           340            -1 
328            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           341            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
329            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
330            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

332            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
333            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
334            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
335            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
336            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
337            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
338            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
339            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
340            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

342            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
343            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
344            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           349            -1            -1            -1            -1            -1           289           290            -1            -1            -1            -1            -1            -1            -1            -1 
345            -1            -1            -1            -1            -1           226            25            -1            26            -1           350           228            32           230            -1            -1           231            38           232           233            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           236            -1           239           240           241            -1            -1            -1 
346            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
347            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
348            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1           353            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
349            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
350            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 

352            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
353            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
354            -1            -1            -1            -1            -1           226            25            -1            26            -1           356           228            32           230            -1            -1           231            38           232           233            -1            -1            -1           357            -1            -1            -1            -1            -1            -1           236            -1           239           240           241            -1            -1            -1 
355            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
356            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
357            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
358            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1            -1 
(INT,)
(ID, a)
(LPAREN,)
(INT,)
(ID, a)
(RPAREN,)
(LBBRACKET,)
(RETURN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
(INT,)
(ID, main)
(LPAREN,)
(RPAREN,)
(LBBRACKET,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 76)
(COMMA,)
(NUM, 82)
(COMMA,)
(NUM, 90)
(COMMA,)
(NUM, 86)
(COMMA,)
(NUM, 79)
(COMMA,)
(NUM, 62)
(RBBRACKET,)
(SEMI,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 1)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 3)
(RBBRACKET,)
(SEMI,)
(INT,)
(ID, stu_number)
(SEMI,)
(DOUBLE,)
(ID, mean)
(COMMA,)
(ID, sum)
(SEMI,)
(INT,)
(ID, temp)
(SEMI,)
(INT,)
(ID, i)
(ASSIGN,)
(NUM, 3)
(SEMI,)
(INT,)
(ID, k)
(ASSIGN,)
(ID, a)
(LPAREN,)
(ID, i)
(RPAREN,)
(SEMI,)
(INT,)
(ID, k)
(ASSIGN,)
(ID, a)
(LPAREN,)
(NUM, 3)
(RPAREN,)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, please input your student number:)
(RPAREN,)
(SEMI,)
(SCANF,)
(LPAREN,)
(STR, %d)
(COMMA,)
(ADDR,)
(ID, stu_number)
(RPAREN,)
(SEMI,)
(ID, sum)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, temp)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(WHILE,)
(LPAREN,)
(ID, i)
(RPAREN,)
(LBBRACKET,)
(ID, i--)
(SEMI,)
(RBBRACKET,)
(FOR,)
(LPAREN,)
(ID, i)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, i)
(LT,)
(NUM, 6)
(SEMI,)
(ID, i)
(PLUSPLUS,)
(RPAREN,)
(LBBRACKET,)
(ID, sum)
(ASSIGN,)
(ID, sum)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(MULTI,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(ID, temp)
(ASSIGN,)
(ID, temp)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(RBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, sum)
(RDIV,)
(ID, temp)
(SEMI,)
(IF,)
(LPAREN,)
(ID, a)
(GT,)
(NUM, 3)
(RPAREN,)
(LBBRACKET,)
(ID, b)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
(IF,)
(LPAREN,)
(ID, mean)
(GE,)
(NUM, 60)
(RPAREN,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, mean)
(MINUS,)
(NUM, 60)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f higher than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(ELSE,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(NUM, 60)
(MINUS,)
(ID, mean)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f lower than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(RETURN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
find sentence!
token:int
token:id
规约:type->int
token:id
规约:function_type->type
token:id
token:(
token:int
token:id
规约:type->int
token:id
token:)
规约:function_define_list->typeid
token:)
token:{
token:return
token:num
token:;
规约:F->num
token:;
规约:T->F
token:;
规约:E->T
token:;
token:}
规约:sentence->returnE;
token:}
规约:block->sentence
token:}
token:int
规约:function_define->function_typeid(function_define_list){block}
token:int
规约:function->function_define
token:int
token:id
规约:type->int
token:id
规约:function_type->type
token:id
token:(
token:)
token:{
token:int
token:array
规约:type->int
token:array
token:[
token:num
token:]
token:=
token:{
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:}
规约:nums->num
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
token:;
token:int
规约:id_name->array[num]={nums};
token:int
规约:define->typeid_name
token:int
规约:sentence->define
token:int
token:array
规约:type->int
token:array
token:[
token:num
token:]
token:=
token:{
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:,
token:num
token:}
规约:nums->num
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
规约:nums->num,nums
token:}
token:;
token:int
规约:id_name->array[num]={nums};
token:int
规约:define->typeid_name
token:int
规约:sentence->define
token:int
token:id
规约:type->int
token:id
token:;
token:double
规约:id_name->id;
token:double
规约:define->typeid_name
token:double
规约:sentence->define
token:double
token:id
规约:type->double
token:id
token:,
token:id
token:;
token:int
规约:id_name->id;
token:int
规约:id_name->id,id_name
token:int
规约:define->typeid_name
token:int
规约:sentence->define
token:int
token:id
规约:type->int
token:id
token:;
token:int
规约:id_name->id;
token:int
规约:define->typeid_name
token:int
规约:sentence->define
token:int
token:id
规约:type->int
token:id
token:=
10:在=附近出现语法错误!
