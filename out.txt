0:S
1:function
2:function_define
3:function_type
4:function_define_list
5:function_call
6:function_call_list
7:type
8:block
9:sentence
10:E
11:T
12:F
13:id_name
14:nums
15:set_value
16:left
17:loop_expression
18:bool_expression
19:op
20:H
21:forsentence
22:for_set_value
23:IncorDec
24:Inc_expression
25:Dec_expression
26:if_expression
27:ifsentence
28:inout_expression
29:printf_expression
30:expressions
31:scanf_expression
32:getaddr
33:G
34:define
35:main
36:else
37:if
38:int
39:double
40:char
41:return
42:void
43:while
44:for
45:<=
46:>=
47:==
48:!=
49:/*
50:*/
51:<
52:>
53:=
54:+
55:-
56:*
57:/
58:;
59:,
60:(
61:)
62:[
63:]
64:{
65:}
66:num
67:id
68:string
69:&
70:++
71:--
72:printf
73:scanf
74:array
function->function_define 
function->function function_define 
function_define->function_type id ( ) { block } 
function_define->function_type id ( function_define_list ) { block } 
function_type->type 
function_type->void 
function_define_list->type id 
function_define_list->function_define_list , type id 
function_call->id ( ) 
function_call->id ( function_call_list ) 
function_call_list->id 
function_call_list->function_call_list , id 
S->function 
type->int 
type->double 
type->char 
block->sentence 
block->sentence block 
sentence->{ block } 
sentence->E ; 
E->E + T 
E->E - T 
E->T 
T->T * F 
T->T / F 
T->F 
F->( E ) 
F->num 
F->id 
F->array [ E ] 
F->function_call 
sentence->return E ; 
sentence->define 
define->type id_name 
id_name->id , id_name 
id_name->id ; 
id_name->id = E ; 
id_name->array [ num ] = { nums } ; 
nums->num , nums 
nums->num 
sentence->set_value ; 
set_value->left = E 
left->id 
left->array [ E ] 
sentence->loop_expression 
loop_expression->for ( for_set_value ; bool_expression ; IncorDec ) forsentence 
bool_expression->G op H 
op->>= 
op-><= 
op->< 
op->> 
H->E 
forsentence->sentence 
for_set_value->set_value 
IncorDec->Inc_expression 
IncorDec->Dec_expression 
Inc_expression->id ++ 
Dec_expression->id -- 
sentence->if_expression 
if_expression->if ( bool_expression ) ifsentence else sentence 
ifsentence->sentence 
sentence->inout_expression 
inout_expression->printf_expression 
inout_expression->scanf_expression 
printf_expression->printf ( string ) ; 
printf_expression->printf ( string , expressions ) ; 
expressions->id , expressions 
expressions->id 
scanf_expression->scanf ( string , getaddr ) ; 
getaddr->& id 
G->E 
G->E 
符号集：
0:1 #
1:2 function
2:2 function_define
3:2 function_type
4:1 id
5:1 (
6:1 )
7:1 {
8:2 block
9:1 }
10:2 function_define_list
11:2 type
12:1 void
13:1 ,
14:2 function_call
15:2 function_call_list
16:2 S
17:1 int
18:1 double
19:1 char
20:2 sentence
21:2 E
22:1 ;
23:1 +
24:2 T
25:1 -
26:1 *
27:2 F
28:1 /
29:1 num
30:1 array
31:1 [
32:1 ]
33:1 return
34:2 define
35:2 id_name
36:1 =
37:2 nums
38:2 set_value
39:2 left
40:2 loop_expression
41:1 for
42:2 for_set_value
43:2 bool_expression
44:2 IncorDec
45:2 forsentence
46:2 G
47:2 op
48:2 H
49:1 >=
50:1 <=
51:1 <
52:1 >
53:2 Inc_expression
54:2 Dec_expression
55:1 ++
56:1 --
57:2 if_expression
58:1 if
59:2 ifsentence
60:1 else
61:2 inout_expression
62:2 printf_expression
63:2 scanf_expression
64:1 printf
65:1 string
66:2 expressions
67:1 scanf
68:2 getaddr
69:1 &
70:2 S'
规则集:
function->function_define
function->functionfunction_define
function_define->function_typeid(){block}
function_define->function_typeid(function_define_list){block}
function_type->type
function_type->void
function_define_list->typeid
function_define_list->function_define_list,typeid
function_call->id()
function_call->id(function_call_list)
function_call_list->id
function_call_list->function_call_list,id
S->function
type->int
type->double
type->char
block->sentence
block->sentenceblock
sentence->{block}
sentence->E;
E->E+T
E->E-T
E->T
T->T*F
T->T/F
T->F
F->(E)
F->num
F->id
F->array[E]
F->function_call
sentence->returnE;
sentence->define
define->typeid_name
id_name->id,id_name
id_name->id;
id_name->id=E;
id_name->array[num]={nums};
nums->num,nums
nums->num
sentence->set_value;
set_value->left=E
left->id
left->array[E]
sentence->loop_expression
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence
bool_expression->GopH
op->>=
op-><=
op-><
op->>
H->E
forsentence->sentence
for_set_value->set_value
IncorDec->Inc_expression
IncorDec->Dec_expression
Inc_expression->id++
Dec_expression->id--
sentence->if_expression
if_expression->if(bool_expression)ifsentenceelsesentence
ifsentence->sentence
sentence->inout_expression
inout_expression->printf_expression
inout_expression->scanf_expression
printf_expression->printf(string);
printf_expression->printf(string,expressions);
expressions->id,expressions
expressions->id
scanf_expression->scanf(string,getaddr);
getaddr->&id
G->E
S'->S
项目集0:
S'->.S,#
type->.char,id
type->.double,id
type->.int,id
S->.function,#
function_type->.void,id
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->.functionfunction_define,char
function->.functionfunction_define,double
function->.functionfunction_define,int
function->.functionfunction_define,void
function->.functionfunction_define,#
function->.function_define,char
function->.function_define,double
function->.function_define,int
function->.function_define,void
function->.function_define,#
项目集1:
type->.char,id
type->.double,id
type->.int,id
S->function,#
function_type->.void,id
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->function.function_define,char
function->function.function_define,double
function->function.function_define,int
function->function.function_define,void
function->function.function_define,#
项目集2:
function->function_define,char
function->function_define,double
function->function_define,int
function->function_define,void
function->function_define,#
项目集3:
function_define->function_type.id(function_define_list){block},char
function_define->function_type.id(function_define_list){block},double
function_define->function_type.id(function_define_list){block},int
function_define->function_type.id(function_define_list){block},void
function_define->function_type.id(function_define_list){block},#
function_define->function_type.id(){block},char
function_define->function_type.id(){block},double
function_define->function_type.id(){block},int
function_define->function_type.id(){block},void
function_define->function_type.id(){block},#
项目集4:
function_type->type,id
项目集5:
function_type->void,id
项目集6:
S'->S,#
项目集7:
type->int,id
项目集8:
type->double,id
项目集9:
type->char,id
项目集10:
function->functionfunction_define,char
function->functionfunction_define,double
function->functionfunction_define,int
function->functionfunction_define,void
function->functionfunction_define,#
项目集11:
function_define->function_typeid.(function_define_list){block},char
function_define->function_typeid.(function_define_list){block},double
function_define->function_typeid.(function_define_list){block},int
function_define->function_typeid.(function_define_list){block},void
function_define->function_typeid.(function_define_list){block},#
function_define->function_typeid.(){block},char
function_define->function_typeid.(){block},double
function_define->function_typeid.(){block},int
function_define->function_typeid.(){block},void
function_define->function_typeid.(){block},#
项目集12:
type->.char,id
type->.double,id
type->.int,id
function_define_list->.function_define_list,typeid,,
function_define_list->.function_define_list,typeid,)
function_define_list->.typeid,,
function_define_list->.typeid,)
function_define->function_typeid(.function_define_list){block},char
function_define->function_typeid(.function_define_list){block},double
function_define->function_typeid(.function_define_list){block},int
function_define->function_typeid(.function_define_list){block},void
function_define->function_typeid(.function_define_list){block},#
function_define->function_typeid(.){block},char
function_define->function_typeid(.){block},double
function_define->function_typeid(.){block},int
function_define->function_typeid(.){block},void
function_define->function_typeid(.){block},#
项目集13:
function_define->function_typeid().{block},char
function_define->function_typeid().{block},double
function_define->function_typeid().{block},int
function_define->function_typeid().{block},void
function_define->function_typeid().{block},#
项目集14:
function_define_list->function_define_list.,typeid,,
function_define_list->function_define_list.,typeid,)
function_define->function_typeid(function_define_list.){block},char
function_define->function_typeid(function_define_list.){block},double
function_define->function_typeid(function_define_list.){block},int
function_define->function_typeid(function_define_list.){block},void
function_define->function_typeid(function_define_list.){block},#
项目集15:
function_define_list->type.id,,
function_define_list->type.id,)
项目集16:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(){.block},char
function_define->function_typeid(){.block},double
function_define->function_typeid(){.block},int
function_define->function_typeid(){.block},void
function_define->function_typeid(){.block},#
项目集17:
function_define->function_typeid(function_define_list).{block},char
function_define->function_typeid(function_define_list).{block},double
function_define->function_typeid(function_define_list).{block},int
function_define->function_typeid(function_define_list).{block},void
function_define->function_typeid(function_define_list).{block},#
项目集18:
type->.char,id
type->.double,id
type->.int,id
function_define_list->function_define_list,.typeid,,
function_define_list->function_define_list,.typeid,)
项目集19:
function_define_list->typeid,,
function_define_list->typeid,)
项目集20:
left->id,=
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目集21:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集22:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集23:
function_define->function_typeid(){block.},char
function_define->function_typeid(){block.},double
function_define->function_typeid(){block.},int
function_define->function_typeid(){block.},void
function_define->function_typeid(){block.},#
项目集24:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id=E;,scanf
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,int
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目集25:
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,;
项目集26:
type->int,array
type->int,id
项目集27:
type->double,array
type->double,id
项目集28:
type->char,array
type->char,id
项目集29:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集30:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目集31:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
E->T,+
E->T,;
项目集32:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,;
项目集33:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,;
项目集34:
left->array.[E],=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集35:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集36:
sentence->define,scanf
sentence->define,printf
sentence->define,if
sentence->define,for
sentence->define,return
sentence->define,array
sentence->define,num
sentence->define,/
sentence->define,*
sentence->define,-
sentence->define,+
sentence->define,char
sentence->define,double
sentence->define,int
sentence->define,}
sentence->define,{
sentence->define,(
sentence->define,id
项目集37:
sentence->set_value.;,scanf
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目集38:
set_value->left.=E,;
项目集39:
sentence->loop_expression,scanf
sentence->loop_expression,printf
sentence->loop_expression,if
sentence->loop_expression,for
sentence->loop_expression,return
sentence->loop_expression,array
sentence->loop_expression,num
sentence->loop_expression,/
sentence->loop_expression,*
sentence->loop_expression,-
sentence->loop_expression,+
sentence->loop_expression,char
sentence->loop_expression,double
sentence->loop_expression,int
sentence->loop_expression,}
sentence->loop_expression,{
sentence->loop_expression,(
sentence->loop_expression,id
项目集40:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目集41:
sentence->if_expression,scanf
sentence->if_expression,printf
sentence->if_expression,if
sentence->if_expression,for
sentence->if_expression,return
sentence->if_expression,array
sentence->if_expression,num
sentence->if_expression,/
sentence->if_expression,*
sentence->if_expression,-
sentence->if_expression,+
sentence->if_expression,char
sentence->if_expression,double
sentence->if_expression,int
sentence->if_expression,}
sentence->if_expression,{
sentence->if_expression,(
sentence->if_expression,id
项目集42:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
项目集43:
sentence->inout_expression,scanf
sentence->inout_expression,printf
sentence->inout_expression,if
sentence->inout_expression,for
sentence->inout_expression,return
sentence->inout_expression,array
sentence->inout_expression,num
sentence->inout_expression,/
sentence->inout_expression,*
sentence->inout_expression,-
sentence->inout_expression,+
sentence->inout_expression,char
sentence->inout_expression,double
sentence->inout_expression,int
sentence->inout_expression,}
sentence->inout_expression,{
sentence->inout_expression,(
sentence->inout_expression,id
项目集44:
inout_expression->printf_expression,scanf
inout_expression->printf_expression,printf
inout_expression->printf_expression,if
inout_expression->printf_expression,for
inout_expression->printf_expression,return
inout_expression->printf_expression,array
inout_expression->printf_expression,num
inout_expression->printf_expression,/
inout_expression->printf_expression,*
inout_expression->printf_expression,-
inout_expression->printf_expression,+
inout_expression->printf_expression,char
inout_expression->printf_expression,double
inout_expression->printf_expression,int
inout_expression->printf_expression,}
inout_expression->printf_expression,{
inout_expression->printf_expression,(
inout_expression->printf_expression,id
项目集45:
inout_expression->scanf_expression,scanf
inout_expression->scanf_expression,printf
inout_expression->scanf_expression,if
inout_expression->scanf_expression,for
inout_expression->scanf_expression,return
inout_expression->scanf_expression,array
inout_expression->scanf_expression,num
inout_expression->scanf_expression,/
inout_expression->scanf_expression,*
inout_expression->scanf_expression,-
inout_expression->scanf_expression,+
inout_expression->scanf_expression,char
inout_expression->scanf_expression,double
inout_expression->scanf_expression,int
inout_expression->scanf_expression,}
inout_expression->scanf_expression,{
inout_expression->scanf_expression,(
inout_expression->scanf_expression,id
项目集46:
printf_expression->printf.(string,expressions);,scanf
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目集47:
scanf_expression->scanf.(string,getaddr);,scanf
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目集48:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(function_define_list){.block},char
function_define->function_typeid(function_define_list){.block},double
function_define->function_typeid(function_define_list){.block},int
function_define->function_typeid(function_define_list){.block},void
function_define->function_typeid(function_define_list){.block},#
项目集49:
function_define_list->function_define_list,type.id,,
function_define_list->function_define_list,type.id,)
项目集50:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
function_call_list->.id,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
项目集51:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,)
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目集52:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集53:
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
F->function_call,)
项目集54:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集55:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
E->T,+
E->T,)
项目集56:
T->F,/
T->F,*
T->F,-
T->F,+
T->F,)
项目集57:
F->num,/
F->num,*
F->num,-
F->num,+
F->num,)
项目集58:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目集59:
sentence->{block.},scanf
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目集60:
function_define->function_typeid(){block},char
function_define->function_typeid(){block},double
function_define->function_typeid(){block},int
function_define->function_typeid(){block},void
function_define->function_typeid(){block},#
项目集61:
id_name->id.=E;,scanf
id_name->id.=E;,printf
id_name->id.=E;,if
id_name->id.=E;,for
id_name->id.=E;,return
id_name->id.=E;,array
id_name->id.=E;,num
id_name->id.=E;,/
id_name->id.=E;,*
id_name->id.=E;,-
id_name->id.=E;,+
id_name->id.=E;,char
id_name->id.=E;,double
id_name->id.=E;,int
id_name->id.=E;,}
id_name->id.=E;,{
id_name->id.=E;,(
id_name->id.=E;,id
id_name->id.;,scanf
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目集62:
id_name->array.[num]={nums};,scanf
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目集63:
define->typeid_name,scanf
define->typeid_name,printf
define->typeid_name,if
define->typeid_name,for
define->typeid_name,return
define->typeid_name,array
define->typeid_name,num
define->typeid_name,/
define->typeid_name,*
define->typeid_name,-
define->typeid_name,+
define->typeid_name,char
define->typeid_name,double
define->typeid_name,int
define->typeid_name,}
define->typeid_name,{
define->typeid_name,(
define->typeid_name,id
项目集64:
block->sentenceblock,}
项目集65:
sentence->E;,scanf
sentence->E;,printf
sentence->E;,if
sentence->E;,for
sentence->E;,return
sentence->E;,array
sentence->E;,num
sentence->E;,/
sentence->E;,*
sentence->E;,-
sentence->E;,+
sentence->E;,char
sentence->E;,double
sentence->E;,int
sentence->E;,}
sentence->E;,{
sentence->E;,(
sentence->E;,id
项目集66:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集67:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集68:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集69:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集70:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集71:
F->id,/
F->id,*
F->id,-
F->id,+
F->id,;
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目集72:
sentence->returnE.;,scanf
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集73:
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目集74:
sentence->set_value;,scanf
sentence->set_value;,printf
sentence->set_value;,if
sentence->set_value;,for
sentence->set_value;,return
sentence->set_value;,array
sentence->set_value;,num
sentence->set_value;,/
sentence->set_value;,*
sentence->set_value;,-
sentence->set_value;,+
sentence->set_value;,char
sentence->set_value;,double
sentence->set_value;,int
sentence->set_value;,}
sentence->set_value;,{
sentence->set_value;,(
sentence->set_value;,id
项目集75:
set_value->left=.E,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集76:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集77:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集78:
printf_expression->printf(.string,expressions);,scanf
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目集79:
scanf_expression->scanf(.string,getaddr);,scanf
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目集80:
function_define->function_typeid(function_define_list){block.},char
function_define->function_typeid(function_define_list){block.},double
function_define->function_typeid(function_define_list){block.},int
function_define->function_typeid(function_define_list){block.},void
function_define->function_typeid(function_define_list){block.},#
项目集81:
function_define_list->function_define_list,typeid,,
function_define_list->function_define_list,typeid,)
项目集82:
function_call_list->id,,
function_call_list->id,)
项目集83:
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),;
项目集84:
function_call_list->function_call_list.,id,,
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目集85:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
function_call_list->.id,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
项目集86:
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集87:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),;
项目集88:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集89:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集90:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集91:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集92:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集93:
sentence->{block},scanf
sentence->{block},printf
sentence->{block},if
sentence->{block},for
sentence->{block},return
sentence->{block},array
sentence->{block},num
sentence->{block},/
sentence->{block},*
sentence->{block},-
sentence->{block},+
sentence->{block},char
sentence->{block},double
sentence->{block},int
sentence->{block},}
sentence->{block},{
sentence->{block},(
sentence->{block},id
项目集94:
id_name->.array[num]={nums};,scanf
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id=E;,scanf
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,int
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目集95:
id_name->id;,scanf
id_name->id;,printf
id_name->id;,if
id_name->id;,for
id_name->id;,return
id_name->id;,array
id_name->id;,num
id_name->id;,/
id_name->id;,*
id_name->id;,-
id_name->id;,+
id_name->id;,char
id_name->id;,double
id_name->id;,int
id_name->id;,}
id_name->id;,{
id_name->id;,(
id_name->id;,id
项目集96:
id_name->id=.E;,scanf
id_name->id=.E;,printf
id_name->id=.E;,if
id_name->id=.E;,for
id_name->id=.E;,return
id_name->id=.E;,array
id_name->id=.E;,num
id_name->id=.E;,/
id_name->id=.E;,*
id_name->id=.E;,-
id_name->id=.E;,+
id_name->id=.E;,char
id_name->id=.E;,double
id_name->id=.E;,int
id_name->id=.E;,}
id_name->id=.E;,{
id_name->id=.E;,(
id_name->id=.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集97:
id_name->array[.num]={nums};,scanf
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目集98:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
E->E+T,+
E->E+T,;
项目集99:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
E->E-T,+
E->E-T,;
项目集100:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,;
项目集101:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,;
项目集102:
F->id,]
F->id,/
F->id,*
F->id,-
F->id,+
function_call->id.(function_call_list),]
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),]
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目集103:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集104:
F->function_call,]
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
项目集105:
left->array[E.],=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集106:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
E->T,-
E->T,+
项目集107:
T->F,]
T->F,/
T->F,*
T->F,-
T->F,+
项目集108:
F->num,]
F->num,/
F->num,*
F->num,-
F->num,+
项目集109:
F->array.[E],]
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集110:
sentence->returnE;,scanf
sentence->returnE;,printf
sentence->returnE;,if
sentence->returnE;,for
sentence->returnE;,return
sentence->returnE;,array
sentence->returnE;,num
sentence->returnE;,/
sentence->returnE;,*
sentence->returnE;,-
sentence->returnE;,+
sentence->returnE;,char
sentence->returnE;,double
sentence->returnE;,int
sentence->returnE;,}
sentence->returnE;,{
sentence->returnE;,(
sentence->returnE;,id
项目集111:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集112:
set_value->left=E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集113:
left->id,=
项目集114:
left->array.[E],=
项目集115:
for_set_value->set_value,;
项目集116:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目集117:
F->id,>
F->id,<
F->id,<=
F->id,>=
F->id,/
F->id,*
F->id,-
F->id,+
function_call->id.(function_call_list),>
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目集118:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集119:
F->function_call,>
F->function_call,<
F->function_call,<=
F->function_call,>=
F->function_call,/
F->function_call,*
F->function_call,-
F->function_call,+
项目集120:
G->E,>
G->E,<
G->E,<=
G->E,>=
E->E.-T,>
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目集121:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
E->T,<
E->T,<=
E->T,>=
E->T,-
E->T,+
项目集122:
T->F,>
T->F,<
T->F,<=
T->F,>=
T->F,/
T->F,*
T->F,-
T->F,+
项目集123:
F->num,>
F->num,<
F->num,<=
F->num,>=
F->num,/
F->num,*
F->num,-
F->num,+
项目集124:
F->array.[E],>
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目集125:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
项目集126:
op->.>,array
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,)
项目集127:
printf_expression->printf(string.,expressions);,scanf
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目集128:
scanf_expression->scanf(string.,getaddr);,scanf
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目集129:
function_define->function_typeid(function_define_list){block},char
function_define->function_typeid(function_define_list){block},double
function_define->function_typeid(function_define_list){block},int
function_define->function_typeid(function_define_list){block},void
function_define->function_typeid(function_define_list){block},#
项目集130:
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),;
项目集131:
function_call_list->function_call_list,.id,,
function_call_list->function_call_list,.id,)
项目集132:
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
function_call->id(),)
项目集133:
function_call_list->function_call_list.,id,,
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目集134:
F->(E),/
F->(E),*
F->(E),-
F->(E),+
F->(E),)
项目集135:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
E->E+T,+
E->E+T,)
项目集136:
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
E->E-T,+
E->E-T,)
项目集137:
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
T->T*F,)
项目集138:
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
T->T/F,)
项目集139:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集140:
id_name->id,id_name,scanf
id_name->id,id_name,printf
id_name->id,id_name,if
id_name->id,id_name,for
id_name->id,id_name,return
id_name->id,id_name,array
id_name->id,id_name,num
id_name->id,id_name,/
id_name->id,id_name,*
id_name->id,id_name,-
id_name->id,id_name,+
id_name->id,id_name,char
id_name->id,id_name,double
id_name->id,id_name,int
id_name->id,id_name,}
id_name->id,id_name,{
id_name->id,id_name,(
id_name->id,id_name,id
项目集141:
id_name->id=E.;,scanf
id_name->id=E.;,printf
id_name->id=E.;,if
id_name->id=E.;,for
id_name->id=E.;,return
id_name->id=E.;,array
id_name->id=E.;,num
id_name->id=E.;,/
id_name->id=E.;,*
id_name->id=E.;,-
id_name->id=E.;,+
id_name->id=E.;,char
id_name->id=E.;,double
id_name->id=E.;,int
id_name->id=E.;,}
id_name->id=E.;,{
id_name->id=E.;,(
id_name->id=E.;,id
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集142:
id_name->array[num.]={nums};,scanf
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目集143:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
function_call_list->.id,)
function_call->id(.function_call_list),]
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.),]
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
项目集144:
F->(E.),]
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集145:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集146:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集147:
left->array[E],=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集148:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集149:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集150:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集151:
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集152:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集153:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集154:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
function_call_list->.id,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.),>
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
项目集155:
F->(E.),>
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集156:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集157:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集158:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集159:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集160:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集161:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集162:
H->.E,)
bool_expression->Gop.H,)
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目集163:
op->>=,array
op->>=,num
op->>=,/
op->>=,*
op->>=,-
op->>=,+
op->>=,(
op->>=,id
项目集164:
op-><=,array
op-><=,num
op-><=,/
op-><=,*
op-><=,-
op-><=,+
op-><=,(
op-><=,id
项目集165:
op-><,array
op-><,num
op-><,/
op-><,*
op-><,-
op-><,+
op-><,(
op-><,id
项目集166:
op->>,array
op->>,num
op->>,/
op->>,*
op->>,-
op->>,+
op->>,(
op->>,id
项目集167:
printf_expression->printf(string).;,scanf
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目集168:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目集169:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目集170:
function_call_list->function_call_list,id,,
function_call_list->function_call_list,id,)
项目集171:
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
function_call->id(function_call_list),)
项目集172:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],)
项目集173:
id_name->id=E;,scanf
id_name->id=E;,printf
id_name->id=E;,if
id_name->id=E;,for
id_name->id=E;,return
id_name->id=E;,array
id_name->id=E;,num
id_name->id=E;,/
id_name->id=E;,*
id_name->id=E;,-
id_name->id=E;,+
id_name->id=E;,char
id_name->id=E;,double
id_name->id=E;,int
id_name->id=E;,}
id_name->id=E;,{
id_name->id=E;,(
id_name->id=E;,id
项目集174:
id_name->array[num].={nums};,scanf
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目集175:
function_call->id(),]
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
项目集176:
function_call_list->function_call_list.,id,,
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),]
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目集177:
F->(E),]
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集178:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
E->E+T,-
E->E+T,+
项目集179:
T->T./F,]
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
E->E-T,-
E->E-T,+
项目集180:
T->T*F,]
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集181:
T->T/F,]
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集182:
F->array[E.],]
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集183:
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
F->array[E],;
项目集184:
left->array[E.],=
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集185:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目集186:
op->.>,array
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,;
项目集187:
function_call->id(),>
function_call->id(),<
function_call->id(),<=
function_call->id(),>=
function_call->id(),/
function_call->id(),*
function_call->id(),-
function_call->id(),+
项目集188:
function_call_list->function_call_list.,id,,
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),>
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目集189:
F->(E),>
F->(E),<
F->(E),<=
F->(E),>=
F->(E),/
F->(E),*
F->(E),-
F->(E),+
项目集190:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
E->E+T,<
E->E+T,<=
E->E+T,>=
E->E+T,-
E->E+T,+
项目集191:
T->T./F,>
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
E->E-T,<
E->E-T,<=
E->E-T,>=
E->E-T,-
E->E-T,+
项目集192:
T->T*F,>
T->T*F,<
T->T*F,<=
T->T*F,>=
T->T*F,/
T->T*F,*
T->T*F,-
T->T*F,+
项目集193:
T->T/F,>
T->T/F,<
T->T/F,<=
T->T/F,>=
T->T/F,/
T->T/F,*
T->T/F,-
T->T/F,+
项目集194:
F->array[E.],>
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
E->E.-T,-
E->E.-T,+
E->E.+T,]
E->E.+T,-
E->E.+T,+
项目集195:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},else
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集196:
id_name->.array[num]={nums};,else
id_name->.id=E;,else
id_name->.id;,else
id_name->.id,id_name,else
define->type.id_name,else
项目集197:
ifsentence->sentence,else
项目集198:
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
sentence->E.;,else
项目集199:
sentence->return.E;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集200:
sentence->define,else
项目集201:
sentence->set_value.;,else
项目集202:
sentence->loop_expression,else
项目集203:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
项目集204:
sentence->if_expression,else
项目集205:
if_expression->if.(bool_expression)ifsentenceelsesentence,else
项目集206:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目集207:
sentence->inout_expression,else
项目集208:
inout_expression->printf_expression,else
项目集209:
inout_expression->scanf_expression,else
项目集210:
printf_expression->printf.(string,expressions);,else
printf_expression->printf.(string);,else
项目集211:
scanf_expression->scanf.(string,getaddr);,else
项目集212:
H->E,)
E->E.-T,-
E->E.-T,+
E->E.-T,)
E->E.+T,-
E->E.+T,+
E->E.+T,)
项目集213:
bool_expression->GopH,)
项目集214:
printf_expression->printf(string);,scanf
printf_expression->printf(string);,printf
printf_expression->printf(string);,if
printf_expression->printf(string);,for
printf_expression->printf(string);,return
printf_expression->printf(string);,array
printf_expression->printf(string);,num
printf_expression->printf(string);,/
printf_expression->printf(string);,*
printf_expression->printf(string);,-
printf_expression->printf(string);,+
printf_expression->printf(string);,char
printf_expression->printf(string);,double
printf_expression->printf(string);,int
printf_expression->printf(string);,}
printf_expression->printf(string);,{
printf_expression->printf(string);,(
printf_expression->printf(string);,id
项目集215:
expressions->id,)
expressions->id.,expressions,)
项目集216:
printf_expression->printf(string,expressions.);,scanf
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目集217:
scanf_expression->scanf(string,getaddr.);,scanf
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目集218:
getaddr->&.id,)
项目集219:
id_name->array[num]=.{nums};,scanf
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目集220:
function_call->id(function_call_list),]
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
项目集221:
F->array[E],]
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集222:
left->array[E],=
项目集223:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目集224:
H->.E,;
bool_expression->Gop.H,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集225:
function_call->id(function_call_list),>
function_call->id(function_call_list),<
function_call->id(function_call_list),<=
function_call->id(function_call_list),>=
function_call->id(function_call_list),/
function_call->id(function_call_list),*
function_call->id(function_call_list),-
function_call->id(function_call_list),+
项目集226:
F->array[E],>
F->array[E],<
F->array[E],<=
F->array[E],>=
F->array[E],/
F->array[E],*
F->array[E],-
F->array[E],+
项目集227:
sentence->{block.},else
项目集228:
id_name->id.=E;,else
id_name->id.;,else
id_name->id.,id_name,else
项目集229:
id_name->array.[num]={nums};,else
项目集230:
define->typeid_name,else
项目集231:
sentence->E;,else
项目集232:
sentence->returnE.;,else
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集233:
sentence->set_value;,else
项目集234:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
项目集235:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,else
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集236:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集237:
printf_expression->printf(.string,expressions);,else
printf_expression->printf(.string);,else
项目集238:
scanf_expression->scanf(.string,getaddr);,else
项目集239:
expressions->.id,)
expressions->id,.expressions,)
expressions->.id,expressions,)
项目集240:
printf_expression->printf(string,expressions).;,scanf
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目集241:
scanf_expression->scanf(string,getaddr).;,scanf
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目集242:
getaddr->&id,)
项目集243:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目集244:
Dec_expression->id.--,)
Inc_expression->id.++,)
项目集245:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目集246:
IncorDec->Inc_expression,)
项目集247:
IncorDec->Dec_expression,)
项目集248:
H->E,;
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集249:
bool_expression->GopH,;
项目集250:
sentence->{block},else
项目集251:
id_name->.array[num]={nums};,else
id_name->.id=E;,else
id_name->.id;,else
id_name->id,.id_name,else
id_name->.id,id_name,else
项目集252:
id_name->id;,else
项目集253:
id_name->id=.E;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集254:
id_name->array[.num]={nums};,else
项目集255:
sentence->returnE;,else
项目集256:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
项目集257:
if_expression->if(bool_expression.)ifsentenceelsesentence,else
项目集258:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
if_expression->if(bool_expression)ifsentenceelsesentence,printf
if_expression->if(bool_expression)ifsentenceelsesentence,if
if_expression->if(bool_expression)ifsentenceelsesentence,for
if_expression->if(bool_expression)ifsentenceelsesentence,return
if_expression->if(bool_expression)ifsentenceelsesentence,array
if_expression->if(bool_expression)ifsentenceelsesentence,num
if_expression->if(bool_expression)ifsentenceelsesentence,/
if_expression->if(bool_expression)ifsentenceelsesentence,*
if_expression->if(bool_expression)ifsentenceelsesentence,-
if_expression->if(bool_expression)ifsentenceelsesentence,+
if_expression->if(bool_expression)ifsentenceelsesentence,char
if_expression->if(bool_expression)ifsentenceelsesentence,double
if_expression->if(bool_expression)ifsentenceelsesentence,int
if_expression->if(bool_expression)ifsentenceelsesentence,}
if_expression->if(bool_expression)ifsentenceelsesentence,{
if_expression->if(bool_expression)ifsentenceelsesentence,(
if_expression->if(bool_expression)ifsentenceelsesentence,id
项目集259:
printf_expression->printf(string.,expressions);,else
printf_expression->printf(string.);,else
项目集260:
scanf_expression->scanf(string.,getaddr);,else
项目集261:
expressions->id,expressions,)
项目集262:
printf_expression->printf(string,expressions);,scanf
printf_expression->printf(string,expressions);,printf
printf_expression->printf(string,expressions);,if
printf_expression->printf(string,expressions);,for
printf_expression->printf(string,expressions);,return
printf_expression->printf(string,expressions);,array
printf_expression->printf(string,expressions);,num
printf_expression->printf(string,expressions);,/
printf_expression->printf(string,expressions);,*
printf_expression->printf(string,expressions);,-
printf_expression->printf(string,expressions);,+
printf_expression->printf(string,expressions);,char
printf_expression->printf(string,expressions);,double
printf_expression->printf(string,expressions);,int
printf_expression->printf(string,expressions);,}
printf_expression->printf(string,expressions);,{
printf_expression->printf(string,expressions);,(
printf_expression->printf(string,expressions);,id
项目集263:
scanf_expression->scanf(string,getaddr);,scanf
scanf_expression->scanf(string,getaddr);,printf
scanf_expression->scanf(string,getaddr);,if
scanf_expression->scanf(string,getaddr);,for
scanf_expression->scanf(string,getaddr);,return
scanf_expression->scanf(string,getaddr);,array
scanf_expression->scanf(string,getaddr);,num
scanf_expression->scanf(string,getaddr);,/
scanf_expression->scanf(string,getaddr);,*
scanf_expression->scanf(string,getaddr);,-
scanf_expression->scanf(string,getaddr);,+
scanf_expression->scanf(string,getaddr);,char
scanf_expression->scanf(string,getaddr);,double
scanf_expression->scanf(string,getaddr);,int
scanf_expression->scanf(string,getaddr);,}
scanf_expression->scanf(string,getaddr);,{
scanf_expression->scanf(string,getaddr);,(
scanf_expression->scanf(string,getaddr);,id
项目集264:
nums->num,}
nums->num.,nums,}
项目集265:
id_name->array[num]={nums.};,scanf
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目集266:
Inc_expression->id++,)
项目集267:
Dec_expression->id--,)
项目集268:
scanf_expression->.scanf(string,getaddr);,scanf
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集269:
id_name->id,id_name,else
项目集270:
id_name->id=E.;,else
E->E.-T,-
E->E.-T,+
E->E.-T,;
E->E.+T,-
E->E.+T,+
E->E.+T,;
项目集271:
id_name->array[num.]={nums};,else
项目集272:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目集273:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集274:
printf_expression->printf(string).;,else
项目集275:
expressions->.id,)
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,else
项目集276:
getaddr->.&id,)
scanf_expression->scanf(string,.getaddr);,else
项目集277:
nums->.num,}
nums->num,.nums,}
nums->.num,nums,}
项目集278:
id_name->array[num]={nums}.;,scanf
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目集279:
forsentence->sentence,scanf
forsentence->sentence,printf
forsentence->sentence,if
forsentence->sentence,for
forsentence->sentence,return
forsentence->sentence,array
forsentence->sentence,num
forsentence->sentence,/
forsentence->sentence,*
forsentence->sentence,-
forsentence->sentence,+
forsentence->sentence,char
forsentence->sentence,double
forsentence->sentence,int
forsentence->sentence,}
forsentence->sentence,{
forsentence->sentence,(
forsentence->sentence,id
项目集280:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
项目集281:
id_name->id=E;,else
项目集282:
id_name->array[num].={nums};,else
项目集283:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
项目集284:
if_expression->if(bool_expression)ifsentence.elsesentence,else
项目集285:
printf_expression->printf(string);,else
项目集286:
printf_expression->printf(string,expressions.);,else
项目集287:
scanf_expression->scanf(string,getaddr.);,else
项目集288:
nums->num,nums,}
项目集289:
id_name->array[num]={nums};,scanf
id_name->array[num]={nums};,printf
id_name->array[num]={nums};,if
id_name->array[num]={nums};,for
id_name->array[num]={nums};,return
id_name->array[num]={nums};,array
id_name->array[num]={nums};,num
id_name->array[num]={nums};,/
id_name->array[num]={nums};,*
id_name->array[num]={nums};,-
id_name->array[num]={nums};,+
id_name->array[num]={nums};,char
id_name->array[num]={nums};,double
id_name->array[num]={nums};,int
id_name->array[num]={nums};,}
id_name->array[num]={nums};,{
id_name->array[num]={nums};,(
id_name->array[num]={nums};,id
项目集290:
id_name->array[num]=.{nums};,else
项目集291:
Dec_expression->.id--,)
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
项目集292:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集293:
printf_expression->printf(string,expressions).;,else
项目集294:
scanf_expression->scanf(string,getaddr).;,else
项目集295:
nums->.num,}
nums->.num,nums,}
id_name->array[num]={.nums};,else
项目集296:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
项目集297:
if_expression->if(bool_expression)ifsentenceelsesentence,else
项目集298:
printf_expression->printf(string,expressions);,else
项目集299:
scanf_expression->scanf(string,getaddr);,else
项目集300:
id_name->array[num]={nums.};,else
项目集301:
scanf_expression->.scanf(string,getaddr);,else
printf_expression->.printf(string,expressions);,else
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
sentence->.if_expression,else
forsentence->.sentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
sentence->.loop_expression,else
left->.array[E],=
left->.id,=
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
type->.char,array
type->.char,id
type->.double,array
type->.double,id
type->.int,array
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目集302:
id_name->array[num]={nums}.;,else
项目集303:
forsentence->sentence,else
项目集304:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
项目集305:
id_name->array[num]={nums};,else
项目0:
S'->.S,#
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
S->.function,#
function_type->.void,id
shift:5
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->.functionfunction_define,char
function->.functionfunction_define,double
function->.functionfunction_define,int
function->.functionfunction_define,void
function->.functionfunction_define,#
function->.function_define,char
function->.function_define,double
function->.function_define,int
function->.function_define,void
function->.function_define,#
项目1:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
S->function,#
reduce:12
function_type->.void,id
shift:5
function_type->.type,id
function_define->.function_typeid(function_define_list){block},char
function_define->.function_typeid(function_define_list){block},double
function_define->.function_typeid(function_define_list){block},int
function_define->.function_typeid(function_define_list){block},void
function_define->.function_typeid(function_define_list){block},#
function_define->.function_typeid(){block},char
function_define->.function_typeid(){block},double
function_define->.function_typeid(){block},int
function_define->.function_typeid(){block},void
function_define->.function_typeid(){block},#
function->function.function_define,char
function->function.function_define,double
function->function.function_define,int
function->function.function_define,void
function->function.function_define,#
项目2:
function->function_define,char
reduce:0
function->function_define,double
reduce:0
function->function_define,int
reduce:0
function->function_define,void
reduce:0
function->function_define,#
reduce:0
项目3:
function_define->function_type.id(function_define_list){block},char
shift:11
function_define->function_type.id(function_define_list){block},double
function_define->function_type.id(function_define_list){block},int
function_define->function_type.id(function_define_list){block},void
function_define->function_type.id(function_define_list){block},#
function_define->function_type.id(){block},char
function_define->function_type.id(){block},double
function_define->function_type.id(){block},int
function_define->function_type.id(){block},void
function_define->function_type.id(){block},#
项目4:
function_type->type,id
reduce:4
项目5:
function_type->void,id
reduce:5
项目6:
S'->S,#
Accept
项目7:
type->int,id
reduce:13
项目8:
type->double,id
reduce:14
项目9:
type->char,id
reduce:15
项目10:
function->functionfunction_define,char
reduce:1
function->functionfunction_define,double
reduce:1
function->functionfunction_define,int
reduce:1
function->functionfunction_define,void
reduce:1
function->functionfunction_define,#
reduce:1
项目11:
function_define->function_typeid.(function_define_list){block},char
shift:12
function_define->function_typeid.(function_define_list){block},double
function_define->function_typeid.(function_define_list){block},int
function_define->function_typeid.(function_define_list){block},void
function_define->function_typeid.(function_define_list){block},#
function_define->function_typeid.(){block},char
function_define->function_typeid.(){block},double
function_define->function_typeid.(){block},int
function_define->function_typeid.(){block},void
function_define->function_typeid.(){block},#
项目12:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
function_define_list->.function_define_list,typeid,,
function_define_list->.function_define_list,typeid,)
function_define_list->.typeid,,
function_define_list->.typeid,)
function_define->function_typeid(.function_define_list){block},char
function_define->function_typeid(.function_define_list){block},double
function_define->function_typeid(.function_define_list){block},int
function_define->function_typeid(.function_define_list){block},void
function_define->function_typeid(.function_define_list){block},#
function_define->function_typeid(.){block},char
shift:13
function_define->function_typeid(.){block},double
function_define->function_typeid(.){block},int
function_define->function_typeid(.){block},void
function_define->function_typeid(.){block},#
项目13:
function_define->function_typeid().{block},char
shift:16
function_define->function_typeid().{block},double
function_define->function_typeid().{block},int
function_define->function_typeid().{block},void
function_define->function_typeid().{block},#
项目14:
function_define_list->function_define_list.,typeid,,
shift:18
function_define_list->function_define_list.,typeid,)
function_define->function_typeid(function_define_list.){block},char
shift:17
function_define->function_typeid(function_define_list.){block},double
function_define->function_typeid(function_define_list.){block},int
function_define->function_typeid(function_define_list.){block},void
function_define->function_typeid(function_define_list.){block},#
项目15:
function_define_list->type.id,,
shift:19
function_define_list->type.id,)
项目16:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(){.block},char
function_define->function_typeid(){.block},double
function_define->function_typeid(){.block},int
function_define->function_typeid(){.block},void
function_define->function_typeid(){.block},#
项目17:
function_define->function_typeid(function_define_list).{block},char
shift:48
function_define->function_typeid(function_define_list).{block},double
function_define->function_typeid(function_define_list).{block},int
function_define->function_typeid(function_define_list).{block},void
function_define->function_typeid(function_define_list).{block},#
项目18:
type->.char,id
shift:9
type->.double,id
shift:8
type->.int,id
shift:7
function_define_list->function_define_list,.typeid,,
function_define_list->function_define_list,.typeid,)
项目19:
function_define_list->typeid,,
reduce:6
function_define_list->typeid,)
reduce:6
项目20:
left->id,=
reduce:42
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,;
reduce:28
function_call->id.(function_call_list),/
shift:50
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目21:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),;
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目22:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},scanf
sentence->{.block},printf
sentence->{.block},if
sentence->{.block},for
sentence->{.block},return
sentence->{.block},array
sentence->{.block},num
sentence->{.block},/
sentence->{.block},*
sentence->{.block},-
sentence->{.block},+
sentence->{.block},char
sentence->{.block},double
sentence->{.block},int
sentence->{.block},}
sentence->{.block},{
sentence->{.block},(
sentence->{.block},id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目23:
function_define->function_typeid(){block.},char
shift:60
function_define->function_typeid(){block.},double
function_define->function_typeid(){block.},int
function_define->function_typeid(){block.},void
function_define->function_typeid(){block.},#
项目24:
id_name->.array[num]={nums};,scanf
shift:62
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id=E;,scanf
shift:61
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,int
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
define->type.id_name,scanf
define->type.id_name,printf
define->type.id_name,if
define->type.id_name,for
define->type.id_name,return
define->type.id_name,array
define->type.id_name,num
define->type.id_name,/
define->type.id_name,*
define->type.id_name,-
define->type.id_name,+
define->type.id_name,char
define->type.id_name,double
define->type.id_name,int
define->type.id_name,}
define->type.id_name,{
define->type.id_name,(
define->type.id_name,id
项目25:
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,;
reduce:30
项目26:
type->int,array
reduce:13
type->int,id
reduce:13
项目27:
type->double,array
reduce:14
type->double,id
reduce:14
项目28:
type->char,array
reduce:15
type->char,id
reduce:15
项目29:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->sentence.block,}
block->.sentenceblock,}
block->sentence,}
reduce:16
block->.sentence,}
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目30:
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
sentence->E.;,scanf
shift:65
sentence->E.;,printf
sentence->E.;,if
sentence->E.;,for
sentence->E.;,return
sentence->E.;,array
sentence->E.;,num
sentence->E.;,/
sentence->E.;,*
sentence->E.;,-
sentence->E.;,+
sentence->E.;,char
sentence->E.;,double
sentence->E.;,int
sentence->E.;,}
sentence->E.;,{
sentence->E.;,(
sentence->E.;,id
项目31:
T->T./F,/
shift:69
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:68
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->T,-
reduce:22
E->T,+
reduce:22
E->T,;
reduce:22
项目32:
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
T->F,;
reduce:25
项目33:
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,;
reduce:27
项目34:
left->array.[E],=
shift:70
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目35:
sentence->return.E;,scanf
sentence->return.E;,printf
sentence->return.E;,if
sentence->return.E;,for
sentence->return.E;,return
sentence->return.E;,array
sentence->return.E;,num
sentence->return.E;,/
sentence->return.E;,*
sentence->return.E;,-
sentence->return.E;,+
sentence->return.E;,char
sentence->return.E;,double
sentence->return.E;,int
sentence->return.E;,}
sentence->return.E;,{
sentence->return.E;,(
sentence->return.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目36:
sentence->define,scanf
reduce:32
sentence->define,printf
reduce:32
sentence->define,if
reduce:32
sentence->define,for
reduce:32
sentence->define,return
reduce:32
sentence->define,array
reduce:32
sentence->define,num
reduce:32
sentence->define,/
reduce:32
sentence->define,*
reduce:32
sentence->define,-
reduce:32
sentence->define,+
reduce:32
sentence->define,char
reduce:32
sentence->define,double
reduce:32
sentence->define,int
reduce:32
sentence->define,}
reduce:32
sentence->define,{
reduce:32
sentence->define,(
reduce:32
sentence->define,id
reduce:32
项目37:
sentence->set_value.;,scanf
shift:74
sentence->set_value.;,printf
sentence->set_value.;,if
sentence->set_value.;,for
sentence->set_value.;,return
sentence->set_value.;,array
sentence->set_value.;,num
sentence->set_value.;,/
sentence->set_value.;,*
sentence->set_value.;,-
sentence->set_value.;,+
sentence->set_value.;,char
sentence->set_value.;,double
sentence->set_value.;,int
sentence->set_value.;,}
sentence->set_value.;,{
sentence->set_value.;,(
sentence->set_value.;,id
项目38:
set_value->left.=E,;
shift:75
项目39:
sentence->loop_expression,scanf
reduce:44
sentence->loop_expression,printf
reduce:44
sentence->loop_expression,if
reduce:44
sentence->loop_expression,for
reduce:44
sentence->loop_expression,return
reduce:44
sentence->loop_expression,array
reduce:44
sentence->loop_expression,num
reduce:44
sentence->loop_expression,/
reduce:44
sentence->loop_expression,*
reduce:44
sentence->loop_expression,-
reduce:44
sentence->loop_expression,+
reduce:44
sentence->loop_expression,char
reduce:44
sentence->loop_expression,double
reduce:44
sentence->loop_expression,int
reduce:44
sentence->loop_expression,}
reduce:44
sentence->loop_expression,{
reduce:44
sentence->loop_expression,(
reduce:44
sentence->loop_expression,id
reduce:44
项目40:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:76
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,id
项目41:
sentence->if_expression,scanf
reduce:58
sentence->if_expression,printf
reduce:58
sentence->if_expression,if
reduce:58
sentence->if_expression,for
reduce:58
sentence->if_expression,return
reduce:58
sentence->if_expression,array
reduce:58
sentence->if_expression,num
reduce:58
sentence->if_expression,/
reduce:58
sentence->if_expression,*
reduce:58
sentence->if_expression,-
reduce:58
sentence->if_expression,+
reduce:58
sentence->if_expression,char
reduce:58
sentence->if_expression,double
reduce:58
sentence->if_expression,int
reduce:58
sentence->if_expression,}
reduce:58
sentence->if_expression,{
reduce:58
sentence->if_expression,(
reduce:58
sentence->if_expression,id
reduce:58
项目42:
if_expression->if.(bool_expression)ifsentenceelsesentence,scanf
shift:77
if_expression->if.(bool_expression)ifsentenceelsesentence,printf
if_expression->if.(bool_expression)ifsentenceelsesentence,if
if_expression->if.(bool_expression)ifsentenceelsesentence,for
if_expression->if.(bool_expression)ifsentenceelsesentence,return
if_expression->if.(bool_expression)ifsentenceelsesentence,array
if_expression->if.(bool_expression)ifsentenceelsesentence,num
if_expression->if.(bool_expression)ifsentenceelsesentence,/
if_expression->if.(bool_expression)ifsentenceelsesentence,*
if_expression->if.(bool_expression)ifsentenceelsesentence,-
if_expression->if.(bool_expression)ifsentenceelsesentence,+
if_expression->if.(bool_expression)ifsentenceelsesentence,char
if_expression->if.(bool_expression)ifsentenceelsesentence,double
if_expression->if.(bool_expression)ifsentenceelsesentence,int
if_expression->if.(bool_expression)ifsentenceelsesentence,}
if_expression->if.(bool_expression)ifsentenceelsesentence,{
if_expression->if.(bool_expression)ifsentenceelsesentence,(
if_expression->if.(bool_expression)ifsentenceelsesentence,id
项目43:
sentence->inout_expression,scanf
reduce:61
sentence->inout_expression,printf
reduce:61
sentence->inout_expression,if
reduce:61
sentence->inout_expression,for
reduce:61
sentence->inout_expression,return
reduce:61
sentence->inout_expression,array
reduce:61
sentence->inout_expression,num
reduce:61
sentence->inout_expression,/
reduce:61
sentence->inout_expression,*
reduce:61
sentence->inout_expression,-
reduce:61
sentence->inout_expression,+
reduce:61
sentence->inout_expression,char
reduce:61
sentence->inout_expression,double
reduce:61
sentence->inout_expression,int
reduce:61
sentence->inout_expression,}
reduce:61
sentence->inout_expression,{
reduce:61
sentence->inout_expression,(
reduce:61
sentence->inout_expression,id
reduce:61
项目44:
inout_expression->printf_expression,scanf
reduce:62
inout_expression->printf_expression,printf
reduce:62
inout_expression->printf_expression,if
reduce:62
inout_expression->printf_expression,for
reduce:62
inout_expression->printf_expression,return
reduce:62
inout_expression->printf_expression,array
reduce:62
inout_expression->printf_expression,num
reduce:62
inout_expression->printf_expression,/
reduce:62
inout_expression->printf_expression,*
reduce:62
inout_expression->printf_expression,-
reduce:62
inout_expression->printf_expression,+
reduce:62
inout_expression->printf_expression,char
reduce:62
inout_expression->printf_expression,double
reduce:62
inout_expression->printf_expression,int
reduce:62
inout_expression->printf_expression,}
reduce:62
inout_expression->printf_expression,{
reduce:62
inout_expression->printf_expression,(
reduce:62
inout_expression->printf_expression,id
reduce:62
项目45:
inout_expression->scanf_expression,scanf
reduce:63
inout_expression->scanf_expression,printf
reduce:63
inout_expression->scanf_expression,if
reduce:63
inout_expression->scanf_expression,for
reduce:63
inout_expression->scanf_expression,return
reduce:63
inout_expression->scanf_expression,array
reduce:63
inout_expression->scanf_expression,num
reduce:63
inout_expression->scanf_expression,/
reduce:63
inout_expression->scanf_expression,*
reduce:63
inout_expression->scanf_expression,-
reduce:63
inout_expression->scanf_expression,+
reduce:63
inout_expression->scanf_expression,char
reduce:63
inout_expression->scanf_expression,double
reduce:63
inout_expression->scanf_expression,int
reduce:63
inout_expression->scanf_expression,}
reduce:63
inout_expression->scanf_expression,{
reduce:63
inout_expression->scanf_expression,(
reduce:63
inout_expression->scanf_expression,id
reduce:63
项目46:
printf_expression->printf.(string,expressions);,scanf
shift:78
printf_expression->printf.(string,expressions);,printf
printf_expression->printf.(string,expressions);,if
printf_expression->printf.(string,expressions);,for
printf_expression->printf.(string,expressions);,return
printf_expression->printf.(string,expressions);,array
printf_expression->printf.(string,expressions);,num
printf_expression->printf.(string,expressions);,/
printf_expression->printf.(string,expressions);,*
printf_expression->printf.(string,expressions);,-
printf_expression->printf.(string,expressions);,+
printf_expression->printf.(string,expressions);,char
printf_expression->printf.(string,expressions);,double
printf_expression->printf.(string,expressions);,int
printf_expression->printf.(string,expressions);,}
printf_expression->printf.(string,expressions);,{
printf_expression->printf.(string,expressions);,(
printf_expression->printf.(string,expressions);,id
printf_expression->printf.(string);,scanf
printf_expression->printf.(string);,printf
printf_expression->printf.(string);,if
printf_expression->printf.(string);,for
printf_expression->printf.(string);,return
printf_expression->printf.(string);,array
printf_expression->printf.(string);,num
printf_expression->printf.(string);,/
printf_expression->printf.(string);,*
printf_expression->printf.(string);,-
printf_expression->printf.(string);,+
printf_expression->printf.(string);,char
printf_expression->printf.(string);,double
printf_expression->printf.(string);,int
printf_expression->printf.(string);,}
printf_expression->printf.(string);,{
printf_expression->printf.(string);,(
printf_expression->printf.(string);,id
项目47:
scanf_expression->scanf.(string,getaddr);,scanf
shift:79
scanf_expression->scanf.(string,getaddr);,printf
scanf_expression->scanf.(string,getaddr);,if
scanf_expression->scanf.(string,getaddr);,for
scanf_expression->scanf.(string,getaddr);,return
scanf_expression->scanf.(string,getaddr);,array
scanf_expression->scanf.(string,getaddr);,num
scanf_expression->scanf.(string,getaddr);,/
scanf_expression->scanf.(string,getaddr);,*
scanf_expression->scanf.(string,getaddr);,-
scanf_expression->scanf.(string,getaddr);,+
scanf_expression->scanf.(string,getaddr);,char
scanf_expression->scanf.(string,getaddr);,double
scanf_expression->scanf.(string,getaddr);,int
scanf_expression->scanf.(string,getaddr);,}
scanf_expression->scanf.(string,getaddr);,{
scanf_expression->scanf.(string,getaddr);,(
scanf_expression->scanf.(string,getaddr);,id
项目48:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
function_define->function_typeid(function_define_list){.block},char
function_define->function_typeid(function_define_list){.block},double
function_define->function_typeid(function_define_list){.block},int
function_define->function_typeid(function_define_list){.block},void
function_define->function_typeid(function_define_list){.block},#
项目49:
function_define_list->function_define_list,type.id,,
shift:81
function_define_list->function_define_list,type.id,)
项目50:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
shift:82
function_call_list->.id,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),;
function_call->id(.),/
shift:83
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),;
项目51:
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,)
reduce:28
function_call->id.(function_call_list),/
shift:85
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),)
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),)
项目52:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->(.E),)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目53:
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
F->function_call,)
reduce:30
项目54:
F->(E.),/
shift:87
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),;
E->E.-T,-
shift:89
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:88
E->E.+T,+
E->E.+T,)
项目55:
T->T./F,/
shift:91
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:90
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->T,-
reduce:22
E->T,+
reduce:22
E->T,)
reduce:22
项目56:
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
T->F,)
reduce:25
项目57:
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
F->num,)
reduce:27
项目58:
F->array.[E],/
shift:92
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],)
项目59:
sentence->{block.},scanf
shift:93
sentence->{block.},printf
sentence->{block.},if
sentence->{block.},for
sentence->{block.},return
sentence->{block.},array
sentence->{block.},num
sentence->{block.},/
sentence->{block.},*
sentence->{block.},-
sentence->{block.},+
sentence->{block.},char
sentence->{block.},double
sentence->{block.},int
sentence->{block.},}
sentence->{block.},{
sentence->{block.},(
sentence->{block.},id
项目60:
function_define->function_typeid(){block},char
reduce:2
function_define->function_typeid(){block},double
reduce:2
function_define->function_typeid(){block},int
reduce:2
function_define->function_typeid(){block},void
reduce:2
function_define->function_typeid(){block},#
reduce:2
项目61:
id_name->id.=E;,scanf
shift:96
id_name->id.=E;,printf
id_name->id.=E;,if
id_name->id.=E;,for
id_name->id.=E;,return
id_name->id.=E;,array
id_name->id.=E;,num
id_name->id.=E;,/
id_name->id.=E;,*
id_name->id.=E;,-
id_name->id.=E;,+
id_name->id.=E;,char
id_name->id.=E;,double
id_name->id.=E;,int
id_name->id.=E;,}
id_name->id.=E;,{
id_name->id.=E;,(
id_name->id.=E;,id
id_name->id.;,scanf
shift:95
id_name->id.;,printf
id_name->id.;,if
id_name->id.;,for
id_name->id.;,return
id_name->id.;,array
id_name->id.;,num
id_name->id.;,/
id_name->id.;,*
id_name->id.;,-
id_name->id.;,+
id_name->id.;,char
id_name->id.;,double
id_name->id.;,int
id_name->id.;,}
id_name->id.;,{
id_name->id.;,(
id_name->id.;,id
id_name->id.,id_name,scanf
shift:94
id_name->id.,id_name,printf
id_name->id.,id_name,if
id_name->id.,id_name,for
id_name->id.,id_name,return
id_name->id.,id_name,array
id_name->id.,id_name,num
id_name->id.,id_name,/
id_name->id.,id_name,*
id_name->id.,id_name,-
id_name->id.,id_name,+
id_name->id.,id_name,char
id_name->id.,id_name,double
id_name->id.,id_name,int
id_name->id.,id_name,}
id_name->id.,id_name,{
id_name->id.,id_name,(
id_name->id.,id_name,id
项目62:
id_name->array.[num]={nums};,scanf
shift:97
id_name->array.[num]={nums};,printf
id_name->array.[num]={nums};,if
id_name->array.[num]={nums};,for
id_name->array.[num]={nums};,return
id_name->array.[num]={nums};,array
id_name->array.[num]={nums};,num
id_name->array.[num]={nums};,/
id_name->array.[num]={nums};,*
id_name->array.[num]={nums};,-
id_name->array.[num]={nums};,+
id_name->array.[num]={nums};,char
id_name->array.[num]={nums};,double
id_name->array.[num]={nums};,int
id_name->array.[num]={nums};,}
id_name->array.[num]={nums};,{
id_name->array.[num]={nums};,(
id_name->array.[num]={nums};,id
项目63:
define->typeid_name,scanf
reduce:33
define->typeid_name,printf
reduce:33
define->typeid_name,if
reduce:33
define->typeid_name,for
reduce:33
define->typeid_name,return
reduce:33
define->typeid_name,array
reduce:33
define->typeid_name,num
reduce:33
define->typeid_name,/
reduce:33
define->typeid_name,*
reduce:33
define->typeid_name,-
reduce:33
define->typeid_name,+
reduce:33
define->typeid_name,char
reduce:33
define->typeid_name,double
reduce:33
define->typeid_name,int
reduce:33
define->typeid_name,}
reduce:33
define->typeid_name,{
reduce:33
define->typeid_name,(
reduce:33
define->typeid_name,id
reduce:33
项目64:
block->sentenceblock,}
reduce:17
项目65:
sentence->E;,scanf
reduce:19
sentence->E;,printf
reduce:19
sentence->E;,if
reduce:19
sentence->E;,for
reduce:19
sentence->E;,return
reduce:19
sentence->E;,array
reduce:19
sentence->E;,num
reduce:19
sentence->E;,/
reduce:19
sentence->E;,*
reduce:19
sentence->E;,-
reduce:19
sentence->E;,+
reduce:19
sentence->E;,char
reduce:19
sentence->E;,double
reduce:19
sentence->E;,int
reduce:19
sentence->E;,}
reduce:19
sentence->E;,{
reduce:19
sentence->E;,(
reduce:19
sentence->E;,id
reduce:19
项目66:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E+.T,-
E->E+.T,+
E->E+.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目67:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->E-.T,-
E->E-.T,+
E->E-.T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目68:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目69:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目70:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目71:
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
F->id,;
reduce:28
function_call->id.(function_call_list),/
shift:50
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(function_call_list),;
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
function_call->id.(),;
项目72:
sentence->returnE.;,scanf
shift:110
sentence->returnE.;,printf
sentence->returnE.;,if
sentence->returnE.;,for
sentence->returnE.;,return
sentence->returnE.;,array
sentence->returnE.;,num
sentence->returnE.;,/
sentence->returnE.;,*
sentence->returnE.;,-
sentence->returnE.;,+
sentence->returnE.;,char
sentence->returnE.;,double
sentence->returnE.;,int
sentence->returnE.;,}
sentence->returnE.;,{
sentence->returnE.;,(
sentence->returnE.;,id
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目73:
F->array.[E],/
shift:111
F->array.[E],*
F->array.[E],-
F->array.[E],+
F->array.[E],;
项目74:
sentence->set_value;,scanf
reduce:40
sentence->set_value;,printf
reduce:40
sentence->set_value;,if
reduce:40
sentence->set_value;,for
reduce:40
sentence->set_value;,return
reduce:40
sentence->set_value;,array
reduce:40
sentence->set_value;,num
reduce:40
sentence->set_value;,/
reduce:40
sentence->set_value;,*
reduce:40
sentence->set_value;,-
reduce:40
sentence->set_value;,+
reduce:40
sentence->set_value;,char
reduce:40
sentence->set_value;,double
reduce:40
sentence->set_value;,int
reduce:40
sentence->set_value;,}
reduce:40
sentence->set_value;,{
reduce:40
sentence->set_value;,(
reduce:40
sentence->set_value;,id
reduce:40
项目75:
set_value->left=.E,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目76:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,scanf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,id
left->.array[E],=
shift:114
left->.id,=
shift:113
set_value->.left=E,;
项目77:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,scanf
if_expression->if(.bool_expression)ifsentenceelsesentence,printf
if_expression->if(.bool_expression)ifsentenceelsesentence,if
if_expression->if(.bool_expression)ifsentenceelsesentence,for
if_expression->if(.bool_expression)ifsentenceelsesentence,return
if_expression->if(.bool_expression)ifsentenceelsesentence,array
if_expression->if(.bool_expression)ifsentenceelsesentence,num
if_expression->if(.bool_expression)ifsentenceelsesentence,/
if_expression->if(.bool_expression)ifsentenceelsesentence,*
if_expression->if(.bool_expression)ifsentenceelsesentence,-
if_expression->if(.bool_expression)ifsentenceelsesentence,+
if_expression->if(.bool_expression)ifsentenceelsesentence,char
if_expression->if(.bool_expression)ifsentenceelsesentence,double
if_expression->if(.bool_expression)ifsentenceelsesentence,int
if_expression->if(.bool_expression)ifsentenceelsesentence,}
if_expression->if(.bool_expression)ifsentenceelsesentence,{
if_expression->if(.bool_expression)ifsentenceelsesentence,(
if_expression->if(.bool_expression)ifsentenceelsesentence,id
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目78:
printf_expression->printf(.string,expressions);,scanf
shift:127
printf_expression->printf(.string,expressions);,printf
printf_expression->printf(.string,expressions);,if
printf_expression->printf(.string,expressions);,for
printf_expression->printf(.string,expressions);,return
printf_expression->printf(.string,expressions);,array
printf_expression->printf(.string,expressions);,num
printf_expression->printf(.string,expressions);,/
printf_expression->printf(.string,expressions);,*
printf_expression->printf(.string,expressions);,-
printf_expression->printf(.string,expressions);,+
printf_expression->printf(.string,expressions);,char
printf_expression->printf(.string,expressions);,double
printf_expression->printf(.string,expressions);,int
printf_expression->printf(.string,expressions);,}
printf_expression->printf(.string,expressions);,{
printf_expression->printf(.string,expressions);,(
printf_expression->printf(.string,expressions);,id
printf_expression->printf(.string);,scanf
printf_expression->printf(.string);,printf
printf_expression->printf(.string);,if
printf_expression->printf(.string);,for
printf_expression->printf(.string);,return
printf_expression->printf(.string);,array
printf_expression->printf(.string);,num
printf_expression->printf(.string);,/
printf_expression->printf(.string);,*
printf_expression->printf(.string);,-
printf_expression->printf(.string);,+
printf_expression->printf(.string);,char
printf_expression->printf(.string);,double
printf_expression->printf(.string);,int
printf_expression->printf(.string);,}
printf_expression->printf(.string);,{
printf_expression->printf(.string);,(
printf_expression->printf(.string);,id
项目79:
scanf_expression->scanf(.string,getaddr);,scanf
shift:128
scanf_expression->scanf(.string,getaddr);,printf
scanf_expression->scanf(.string,getaddr);,if
scanf_expression->scanf(.string,getaddr);,for
scanf_expression->scanf(.string,getaddr);,return
scanf_expression->scanf(.string,getaddr);,array
scanf_expression->scanf(.string,getaddr);,num
scanf_expression->scanf(.string,getaddr);,/
scanf_expression->scanf(.string,getaddr);,*
scanf_expression->scanf(.string,getaddr);,-
scanf_expression->scanf(.string,getaddr);,+
scanf_expression->scanf(.string,getaddr);,char
scanf_expression->scanf(.string,getaddr);,double
scanf_expression->scanf(.string,getaddr);,int
scanf_expression->scanf(.string,getaddr);,}
scanf_expression->scanf(.string,getaddr);,{
scanf_expression->scanf(.string,getaddr);,(
scanf_expression->scanf(.string,getaddr);,id
项目80:
function_define->function_typeid(function_define_list){block.},char
shift:129
function_define->function_typeid(function_define_list){block.},double
function_define->function_typeid(function_define_list){block.},int
function_define->function_typeid(function_define_list){block.},void
function_define->function_typeid(function_define_list){block.},#
项目81:
function_define_list->function_define_list,typeid,,
reduce:7
function_define_list->function_define_list,typeid,)
reduce:7
项目82:
function_call_list->id,,
reduce:10
function_call_list->id,)
reduce:10
项目83:
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),;
reduce:8
项目84:
function_call_list->function_call_list.,id,,
shift:131
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),/
shift:130
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),;
项目85:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
shift:82
function_call_list->.id,)
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.function_call_list),)
function_call->id(.),/
shift:132
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
function_call->id(.),)
项目86:
F->(E.),/
shift:134
F->(E.),*
F->(E.),-
F->(E.),+
F->(E.),)
E->E.-T,-
shift:89
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:88
E->E.+T,+
E->E.+T,)
项目87:
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),;
reduce:26
项目88:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E+.T,-
E->E+.T,+
E->E+.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目89:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->E-.T,-
E->E-.T,+
E->E-.T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目90:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
T->T*.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目91:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
T->T/.F,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目92:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],)
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目93:
sentence->{block},scanf
reduce:18
sentence->{block},printf
reduce:18
sentence->{block},if
reduce:18
sentence->{block},for
reduce:18
sentence->{block},return
reduce:18
sentence->{block},array
reduce:18
sentence->{block},num
reduce:18
sentence->{block},/
reduce:18
sentence->{block},*
reduce:18
sentence->{block},-
reduce:18
sentence->{block},+
reduce:18
sentence->{block},char
reduce:18
sentence->{block},double
reduce:18
sentence->{block},int
reduce:18
sentence->{block},}
reduce:18
sentence->{block},{
reduce:18
sentence->{block},(
reduce:18
sentence->{block},id
reduce:18
项目94:
id_name->.array[num]={nums};,scanf
shift:62
id_name->.array[num]={nums};,printf
id_name->.array[num]={nums};,if
id_name->.array[num]={nums};,for
id_name->.array[num]={nums};,return
id_name->.array[num]={nums};,array
id_name->.array[num]={nums};,num
id_name->.array[num]={nums};,/
id_name->.array[num]={nums};,*
id_name->.array[num]={nums};,-
id_name->.array[num]={nums};,+
id_name->.array[num]={nums};,char
id_name->.array[num]={nums};,double
id_name->.array[num]={nums};,int
id_name->.array[num]={nums};,}
id_name->.array[num]={nums};,{
id_name->.array[num]={nums};,(
id_name->.array[num]={nums};,id
id_name->.id=E;,scanf
shift:61
id_name->.id=E;,printf
id_name->.id=E;,if
id_name->.id=E;,for
id_name->.id=E;,return
id_name->.id=E;,array
id_name->.id=E;,num
id_name->.id=E;,/
id_name->.id=E;,*
id_name->.id=E;,-
id_name->.id=E;,+
id_name->.id=E;,char
id_name->.id=E;,double
id_name->.id=E;,int
id_name->.id=E;,}
id_name->.id=E;,{
id_name->.id=E;,(
id_name->.id=E;,id
id_name->.id;,scanf
id_name->.id;,printf
id_name->.id;,if
id_name->.id;,for
id_name->.id;,return
id_name->.id;,array
id_name->.id;,num
id_name->.id;,/
id_name->.id;,*
id_name->.id;,-
id_name->.id;,+
id_name->.id;,char
id_name->.id;,double
id_name->.id;,int
id_name->.id;,}
id_name->.id;,{
id_name->.id;,(
id_name->.id;,id
id_name->id,.id_name,scanf
id_name->id,.id_name,printf
id_name->id,.id_name,if
id_name->id,.id_name,for
id_name->id,.id_name,return
id_name->id,.id_name,array
id_name->id,.id_name,num
id_name->id,.id_name,/
id_name->id,.id_name,*
id_name->id,.id_name,-
id_name->id,.id_name,+
id_name->id,.id_name,char
id_name->id,.id_name,double
id_name->id,.id_name,int
id_name->id,.id_name,}
id_name->id,.id_name,{
id_name->id,.id_name,(
id_name->id,.id_name,id
id_name->.id,id_name,scanf
id_name->.id,id_name,printf
id_name->.id,id_name,if
id_name->.id,id_name,for
id_name->.id,id_name,return
id_name->.id,id_name,array
id_name->.id,id_name,num
id_name->.id,id_name,/
id_name->.id,id_name,*
id_name->.id,id_name,-
id_name->.id,id_name,+
id_name->.id,id_name,char
id_name->.id,id_name,double
id_name->.id,id_name,int
id_name->.id,id_name,}
id_name->.id,id_name,{
id_name->.id,id_name,(
id_name->.id,id_name,id
项目95:
id_name->id;,scanf
reduce:35
id_name->id;,printf
reduce:35
id_name->id;,if
reduce:35
id_name->id;,for
reduce:35
id_name->id;,return
reduce:35
id_name->id;,array
reduce:35
id_name->id;,num
reduce:35
id_name->id;,/
reduce:35
id_name->id;,*
reduce:35
id_name->id;,-
reduce:35
id_name->id;,+
reduce:35
id_name->id;,char
reduce:35
id_name->id;,double
reduce:35
id_name->id;,int
reduce:35
id_name->id;,}
reduce:35
id_name->id;,{
reduce:35
id_name->id;,(
reduce:35
id_name->id;,id
reduce:35
项目96:
id_name->id=.E;,scanf
id_name->id=.E;,printf
id_name->id=.E;,if
id_name->id=.E;,for
id_name->id=.E;,return
id_name->id=.E;,array
id_name->id=.E;,num
id_name->id=.E;,/
id_name->id=.E;,*
id_name->id=.E;,-
id_name->id=.E;,+
id_name->id=.E;,char
id_name->id=.E;,double
id_name->id=.E;,int
id_name->id=.E;,}
id_name->id=.E;,{
id_name->id=.E;,(
id_name->id=.E;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目97:
id_name->array[.num]={nums};,scanf
shift:142
id_name->array[.num]={nums};,printf
id_name->array[.num]={nums};,if
id_name->array[.num]={nums};,for
id_name->array[.num]={nums};,return
id_name->array[.num]={nums};,array
id_name->array[.num]={nums};,num
id_name->array[.num]={nums};,/
id_name->array[.num]={nums};,*
id_name->array[.num]={nums};,-
id_name->array[.num]={nums};,+
id_name->array[.num]={nums};,char
id_name->array[.num]={nums};,double
id_name->array[.num]={nums};,int
id_name->array[.num]={nums};,}
id_name->array[.num]={nums};,{
id_name->array[.num]={nums};,(
id_name->array[.num]={nums};,id
项目98:
T->T./F,/
shift:69
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:68
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E+T,-
reduce:20
E->E+T,+
reduce:20
E->E+T,;
reduce:20
项目99:
T->T./F,/
shift:69
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,;
T->T.*F,/
shift:68
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,;
E->E-T,-
reduce:21
E->E-T,+
reduce:21
E->E-T,;
reduce:21
项目100:
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
T->T*F,;
reduce:23
项目101:
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
T->T/F,;
reduce:24
项目102:
F->id,]
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
function_call->id.(function_call_list),]
shift:143
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),]
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目103:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),]
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目104:
F->function_call,]
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
项目105:
left->array[E.],=
shift:147
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目106:
T->T./F,]
shift:149
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:148
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,]
reduce:22
E->T,-
reduce:22
E->T,+
reduce:22
项目107:
T->F,]
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目108:
F->num,]
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
项目109:
F->array.[E],]
shift:150
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目110:
sentence->returnE;,scanf
reduce:31
sentence->returnE;,printf
reduce:31
sentence->returnE;,if
reduce:31
sentence->returnE;,for
reduce:31
sentence->returnE;,return
reduce:31
sentence->returnE;,array
reduce:31
sentence->returnE;,num
reduce:31
sentence->returnE;,/
reduce:31
sentence->returnE;,*
reduce:31
sentence->returnE;,-
reduce:31
sentence->returnE;,+
reduce:31
sentence->returnE;,char
reduce:31
sentence->returnE;,double
reduce:31
sentence->returnE;,int
reduce:31
sentence->returnE;,}
reduce:31
sentence->returnE;,{
reduce:31
sentence->returnE;,(
reduce:31
sentence->returnE;,id
reduce:31
项目111:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->array[.E],;
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目112:
set_value->left=E,;
reduce:41
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目113:
left->id,=
reduce:42
项目114:
left->array.[E],=
shift:152
项目115:
for_set_value->set_value,;
reduce:53
项目116:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,scanf
shift:153
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,id
项目117:
F->id,>
reduce:28
F->id,<
reduce:28
F->id,<=
reduce:28
F->id,>=
reduce:28
F->id,/
reduce:28
F->id,*
reduce:28
F->id,-
reduce:28
F->id,+
reduce:28
function_call->id.(function_call_list),>
shift:154
function_call->id.(function_call_list),<
function_call->id.(function_call_list),<=
function_call->id.(function_call_list),>=
function_call->id.(function_call_list),/
function_call->id.(function_call_list),*
function_call->id.(function_call_list),-
function_call->id.(function_call_list),+
function_call->id.(),>
function_call->id.(),<
function_call->id.(),<=
function_call->id.(),>=
function_call->id.(),/
function_call->id.(),*
function_call->id.(),-
function_call->id.(),+
项目118:
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->(.E),>
F->(.E),<
F->(.E),<=
F->(.E),>=
F->(.E),/
F->(.E),*
F->(.E),-
F->(.E),+
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目119:
F->function_call,>
reduce:30
F->function_call,<
reduce:30
F->function_call,<=
reduce:30
F->function_call,>=
reduce:30
F->function_call,/
reduce:30
F->function_call,*
reduce:30
F->function_call,-
reduce:30
F->function_call,+
reduce:30
项目120:
G->E,>
reduce:70
G->E,<
reduce:70
G->E,<=
reduce:70
G->E,>=
reduce:70
E->E.-T,>
shift:157
E->E.-T,<
E->E.-T,<=
E->E.-T,>=
E->E.-T,-
E->E.-T,+
E->E.+T,>
shift:156
E->E.+T,<
E->E.+T,<=
E->E.+T,>=
E->E.+T,-
E->E.+T,+
项目121:
T->T./F,>
shift:159
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:158
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->T,>
reduce:22
E->T,<
reduce:22
E->T,<=
reduce:22
E->T,>=
reduce:22
E->T,-
reduce:22
E->T,+
reduce:22
项目122:
T->F,>
reduce:25
T->F,<
reduce:25
T->F,<=
reduce:25
T->F,>=
reduce:25
T->F,/
reduce:25
T->F,*
reduce:25
T->F,-
reduce:25
T->F,+
reduce:25
项目123:
F->num,>
reduce:27
F->num,<
reduce:27
F->num,<=
reduce:27
F->num,>=
reduce:27
F->num,/
reduce:27
F->num,*
reduce:27
F->num,-
reduce:27
F->num,+
reduce:27
项目124:
F->array.[E],>
shift:160
F->array.[E],<
F->array.[E],<=
F->array.[E],>=
F->array.[E],/
F->array.[E],*
F->array.[E],-
F->array.[E],+
项目125:
if_expression->if(bool_expression.)ifsentenceelsesentence,scanf
shift:161
if_expression->if(bool_expression.)ifsentenceelsesentence,printf
if_expression->if(bool_expression.)ifsentenceelsesentence,if
if_expression->if(bool_expression.)ifsentenceelsesentence,for
if_expression->if(bool_expression.)ifsentenceelsesentence,return
if_expression->if(bool_expression.)ifsentenceelsesentence,array
if_expression->if(bool_expression.)ifsentenceelsesentence,num
if_expression->if(bool_expression.)ifsentenceelsesentence,/
if_expression->if(bool_expression.)ifsentenceelsesentence,*
if_expression->if(bool_expression.)ifsentenceelsesentence,-
if_expression->if(bool_expression.)ifsentenceelsesentence,+
if_expression->if(bool_expression.)ifsentenceelsesentence,char
if_expression->if(bool_expression.)ifsentenceelsesentence,double
if_expression->if(bool_expression.)ifsentenceelsesentence,int
if_expression->if(bool_expression.)ifsentenceelsesentence,}
if_expression->if(bool_expression.)ifsentenceelsesentence,{
if_expression->if(bool_expression.)ifsentenceelsesentence,(
if_expression->if(bool_expression.)ifsentenceelsesentence,id
项目126:
op->.>,array
shift:166
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
shift:165
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
shift:164
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
shift:163
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,)
项目127:
printf_expression->printf(string.,expressions);,scanf
shift:168
printf_expression->printf(string.,expressions);,printf
printf_expression->printf(string.,expressions);,if
printf_expression->printf(string.,expressions);,for
printf_expression->printf(string.,expressions);,return
printf_expression->printf(string.,expressions);,array
printf_expression->printf(string.,expressions);,num
printf_expression->printf(string.,expressions);,/
printf_expression->printf(string.,expressions);,*
printf_expression->printf(string.,expressions);,-
printf_expression->printf(string.,expressions);,+
printf_expression->printf(string.,expressions);,char
printf_expression->printf(string.,expressions);,double
printf_expression->printf(string.,expressions);,int
printf_expression->printf(string.,expressions);,}
printf_expression->printf(string.,expressions);,{
printf_expression->printf(string.,expressions);,(
printf_expression->printf(string.,expressions);,id
printf_expression->printf(string.);,scanf
shift:167
printf_expression->printf(string.);,printf
printf_expression->printf(string.);,if
printf_expression->printf(string.);,for
printf_expression->printf(string.);,return
printf_expression->printf(string.);,array
printf_expression->printf(string.);,num
printf_expression->printf(string.);,/
printf_expression->printf(string.);,*
printf_expression->printf(string.);,-
printf_expression->printf(string.);,+
printf_expression->printf(string.);,char
printf_expression->printf(string.);,double
printf_expression->printf(string.);,int
printf_expression->printf(string.);,}
printf_expression->printf(string.);,{
printf_expression->printf(string.);,(
printf_expression->printf(string.);,id
项目128:
scanf_expression->scanf(string.,getaddr);,scanf
shift:169
scanf_expression->scanf(string.,getaddr);,printf
scanf_expression->scanf(string.,getaddr);,if
scanf_expression->scanf(string.,getaddr);,for
scanf_expression->scanf(string.,getaddr);,return
scanf_expression->scanf(string.,getaddr);,array
scanf_expression->scanf(string.,getaddr);,num
scanf_expression->scanf(string.,getaddr);,/
scanf_expression->scanf(string.,getaddr);,*
scanf_expression->scanf(string.,getaddr);,-
scanf_expression->scanf(string.,getaddr);,+
scanf_expression->scanf(string.,getaddr);,char
scanf_expression->scanf(string.,getaddr);,double
scanf_expression->scanf(string.,getaddr);,int
scanf_expression->scanf(string.,getaddr);,}
scanf_expression->scanf(string.,getaddr);,{
scanf_expression->scanf(string.,getaddr);,(
scanf_expression->scanf(string.,getaddr);,id
项目129:
function_define->function_typeid(function_define_list){block},char
reduce:3
function_define->function_typeid(function_define_list){block},double
reduce:3
function_define->function_typeid(function_define_list){block},int
reduce:3
function_define->function_typeid(function_define_list){block},void
reduce:3
function_define->function_typeid(function_define_list){block},#
reduce:3
项目130:
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),;
reduce:9
项目131:
function_call_list->function_call_list,.id,,
shift:170
function_call_list->function_call_list,.id,)
项目132:
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
function_call->id(),)
reduce:8
项目133:
function_call_list->function_call_list.,id,,
shift:131
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),/
shift:171
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
function_call->id(function_call_list.),)
项目134:
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
F->(E),)
reduce:26
项目135:
T->T./F,/
shift:91
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:90
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E+T,-
reduce:20
E->E+T,+
reduce:20
E->E+T,)
reduce:20
项目136:
T->T./F,/
shift:91
T->T./F,*
T->T./F,-
T->T./F,+
T->T./F,)
T->T.*F,/
shift:90
T->T.*F,*
T->T.*F,-
T->T.*F,+
T->T.*F,)
E->E-T,-
reduce:21
E->E-T,+
reduce:21
E->E-T,)
reduce:21
项目137:
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
T->T*F,)
reduce:23
项目138:
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
T->T/F,)
reduce:24
项目139:
F->array[E.],/
shift:172
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],)
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目140:
id_name->id,id_name,scanf
reduce:34
id_name->id,id_name,printf
reduce:34
id_name->id,id_name,if
reduce:34
id_name->id,id_name,for
reduce:34
id_name->id,id_name,return
reduce:34
id_name->id,id_name,array
reduce:34
id_name->id,id_name,num
reduce:34
id_name->id,id_name,/
reduce:34
id_name->id,id_name,*
reduce:34
id_name->id,id_name,-
reduce:34
id_name->id,id_name,+
reduce:34
id_name->id,id_name,char
reduce:34
id_name->id,id_name,double
reduce:34
id_name->id,id_name,int
reduce:34
id_name->id,id_name,}
reduce:34
id_name->id,id_name,{
reduce:34
id_name->id,id_name,(
reduce:34
id_name->id,id_name,id
reduce:34
项目141:
id_name->id=E.;,scanf
shift:173
id_name->id=E.;,printf
id_name->id=E.;,if
id_name->id=E.;,for
id_name->id=E.;,return
id_name->id=E.;,array
id_name->id=E.;,num
id_name->id=E.;,/
id_name->id=E.;,*
id_name->id=E.;,-
id_name->id=E.;,+
id_name->id=E.;,char
id_name->id=E.;,double
id_name->id=E.;,int
id_name->id=E.;,}
id_name->id=E.;,{
id_name->id=E.;,(
id_name->id=E.;,id
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目142:
id_name->array[num.]={nums};,scanf
shift:174
id_name->array[num.]={nums};,printf
id_name->array[num.]={nums};,if
id_name->array[num.]={nums};,for
id_name->array[num.]={nums};,return
id_name->array[num.]={nums};,array
id_name->array[num.]={nums};,num
id_name->array[num.]={nums};,/
id_name->array[num.]={nums};,*
id_name->array[num.]={nums};,-
id_name->array[num.]={nums};,+
id_name->array[num.]={nums};,char
id_name->array[num.]={nums};,double
id_name->array[num.]={nums};,int
id_name->array[num.]={nums};,}
id_name->array[num.]={nums};,{
id_name->array[num.]={nums};,(
id_name->array[num.]={nums};,id
项目143:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
shift:82
function_call_list->.id,)
function_call->id(.function_call_list),]
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.),]
shift:175
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
项目144:
F->(E.),]
shift:177
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:89
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:88
E->E.+T,+
E->E.+T,)
项目145:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,]
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目146:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,]
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目147:
left->array[E],=
reduce:43
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],;
reduce:29
项目148:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,]
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目149:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,]
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目150:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],]
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目151:
F->array[E.],/
shift:183
F->array[E.],*
F->array[E.],-
F->array[E.],+
F->array[E.],;
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目152:
left->array[.E],=
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目153:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,scanf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,printf
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,if
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,for
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,return
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,array
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,num
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,/
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,*
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,-
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,+
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,char
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,double
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,int
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,}
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,{
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,(
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,id
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目154:
function_call_list->.function_call_list,id,,
function_call_list->.function_call_list,id,)
function_call_list->.id,,
shift:82
function_call_list->.id,)
function_call->id(.function_call_list),>
function_call->id(.function_call_list),<
function_call->id(.function_call_list),<=
function_call->id(.function_call_list),>=
function_call->id(.function_call_list),/
function_call->id(.function_call_list),*
function_call->id(.function_call_list),-
function_call->id(.function_call_list),+
function_call->id(.),>
shift:187
function_call->id(.),<
function_call->id(.),<=
function_call->id(.),>=
function_call->id(.),/
function_call->id(.),*
function_call->id(.),-
function_call->id(.),+
项目155:
F->(E.),>
shift:189
F->(E.),<
F->(E.),<=
F->(E.),>=
F->(E.),/
F->(E.),*
F->(E.),-
F->(E.),+
E->E.-T,-
shift:89
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:88
E->E.+T,+
E->E.+T,)
项目156:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E+.T,>
E->E+.T,<
E->E+.T,<=
E->E+.T,>=
E->E+.T,-
E->E+.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目157:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->E-.T,>
E->E-.T,<
E->E-.T,<=
E->E-.T,>=
E->E-.T,-
E->E-.T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目158:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T*.F,>
T->T*.F,<
T->T*.F,<=
T->T*.F,>=
T->T*.F,/
T->T*.F,*
T->T*.F,-
T->T*.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目159:
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->T/.F,>
T->T/.F,<
T->T/.F,<=
T->T/.F,>=
T->T/.F,/
T->T/.F,*
T->T/.F,-
T->T/.F,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目160:
F->.function_call,]
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->array[.E],>
F->array[.E],<
F->array[.E],<=
F->array[.E],>=
F->array[.E],/
F->array[.E],*
F->array[.E],-
F->array[.E],+
F->.array[E],]
shift:109
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,]
shift:102
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,]
shift:108
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),]
shift:103
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,]
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,]
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,]
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,]
E->.T,-
E->.T,+
E->.E-T,]
E->.E-T,-
E->.E-T,+
E->.E+T,]
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),]
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),]
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目161:
scanf_expression->.scanf(string,getaddr);,else
shift:211
printf_expression->.printf(string,expressions);,else
shift:210
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,scanf
if_expression->if(bool_expression).ifsentenceelsesentence,printf
if_expression->if(bool_expression).ifsentenceelsesentence,if
if_expression->if(bool_expression).ifsentenceelsesentence,for
if_expression->if(bool_expression).ifsentenceelsesentence,return
if_expression->if(bool_expression).ifsentenceelsesentence,array
if_expression->if(bool_expression).ifsentenceelsesentence,num
if_expression->if(bool_expression).ifsentenceelsesentence,/
if_expression->if(bool_expression).ifsentenceelsesentence,*
if_expression->if(bool_expression).ifsentenceelsesentence,-
if_expression->if(bool_expression).ifsentenceelsesentence,+
if_expression->if(bool_expression).ifsentenceelsesentence,char
if_expression->if(bool_expression).ifsentenceelsesentence,double
if_expression->if(bool_expression).ifsentenceelsesentence,int
if_expression->if(bool_expression).ifsentenceelsesentence,}
if_expression->if(bool_expression).ifsentenceelsesentence,{
if_expression->if(bool_expression).ifsentenceelsesentence,(
if_expression->if(bool_expression).ifsentenceelsesentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:205
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:203
sentence->.loop_expression,else
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:199
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:195
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目162:
H->.E,)
bool_expression->Gop.H,)
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,)
F->.array[E],/
shift:58
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],)
F->.id,/
shift:51
F->.id,*
F->.id,-
F->.id,+
F->.id,)
F->.num,/
shift:57
F->.num,*
F->.num,-
F->.num,+
F->.num,)
F->.(E),/
shift:52
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),)
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,)
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,)
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,)
E->.T,-
E->.T,+
E->.T,)
E->.E-T,-
E->.E-T,+
E->.E-T,)
E->.E+T,-
E->.E+T,+
E->.E+T,)
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),)
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),)
项目163:
op->>=,array
reduce:47
op->>=,num
reduce:47
op->>=,/
reduce:47
op->>=,*
reduce:47
op->>=,-
reduce:47
op->>=,+
reduce:47
op->>=,(
reduce:47
op->>=,id
reduce:47
项目164:
op-><=,array
reduce:48
op-><=,num
reduce:48
op-><=,/
reduce:48
op-><=,*
reduce:48
op-><=,-
reduce:48
op-><=,+
reduce:48
op-><=,(
reduce:48
op-><=,id
reduce:48
项目165:
op-><,array
reduce:49
op-><,num
reduce:49
op-><,/
reduce:49
op-><,*
reduce:49
op-><,-
reduce:49
op-><,+
reduce:49
op-><,(
reduce:49
op-><,id
reduce:49
项目166:
op->>,array
reduce:50
op->>,num
reduce:50
op->>,/
reduce:50
op->>,*
reduce:50
op->>,-
reduce:50
op->>,+
reduce:50
op->>,(
reduce:50
op->>,id
reduce:50
项目167:
printf_expression->printf(string).;,scanf
shift:214
printf_expression->printf(string).;,printf
printf_expression->printf(string).;,if
printf_expression->printf(string).;,for
printf_expression->printf(string).;,return
printf_expression->printf(string).;,array
printf_expression->printf(string).;,num
printf_expression->printf(string).;,/
printf_expression->printf(string).;,*
printf_expression->printf(string).;,-
printf_expression->printf(string).;,+
printf_expression->printf(string).;,char
printf_expression->printf(string).;,double
printf_expression->printf(string).;,int
printf_expression->printf(string).;,}
printf_expression->printf(string).;,{
printf_expression->printf(string).;,(
printf_expression->printf(string).;,id
项目168:
expressions->.id,)
shift:215
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,scanf
printf_expression->printf(string,.expressions);,printf
printf_expression->printf(string,.expressions);,if
printf_expression->printf(string,.expressions);,for
printf_expression->printf(string,.expressions);,return
printf_expression->printf(string,.expressions);,array
printf_expression->printf(string,.expressions);,num
printf_expression->printf(string,.expressions);,/
printf_expression->printf(string,.expressions);,*
printf_expression->printf(string,.expressions);,-
printf_expression->printf(string,.expressions);,+
printf_expression->printf(string,.expressions);,char
printf_expression->printf(string,.expressions);,double
printf_expression->printf(string,.expressions);,int
printf_expression->printf(string,.expressions);,}
printf_expression->printf(string,.expressions);,{
printf_expression->printf(string,.expressions);,(
printf_expression->printf(string,.expressions);,id
项目169:
getaddr->.&id,)
shift:218
scanf_expression->scanf(string,.getaddr);,scanf
scanf_expression->scanf(string,.getaddr);,printf
scanf_expression->scanf(string,.getaddr);,if
scanf_expression->scanf(string,.getaddr);,for
scanf_expression->scanf(string,.getaddr);,return
scanf_expression->scanf(string,.getaddr);,array
scanf_expression->scanf(string,.getaddr);,num
scanf_expression->scanf(string,.getaddr);,/
scanf_expression->scanf(string,.getaddr);,*
scanf_expression->scanf(string,.getaddr);,-
scanf_expression->scanf(string,.getaddr);,+
scanf_expression->scanf(string,.getaddr);,char
scanf_expression->scanf(string,.getaddr);,double
scanf_expression->scanf(string,.getaddr);,int
scanf_expression->scanf(string,.getaddr);,}
scanf_expression->scanf(string,.getaddr);,{
scanf_expression->scanf(string,.getaddr);,(
scanf_expression->scanf(string,.getaddr);,id
项目170:
function_call_list->function_call_list,id,,
reduce:11
function_call_list->function_call_list,id,)
reduce:11
项目171:
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
function_call->id(function_call_list),)
reduce:9
项目172:
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],)
reduce:29
项目173:
id_name->id=E;,scanf
reduce:36
id_name->id=E;,printf
reduce:36
id_name->id=E;,if
reduce:36
id_name->id=E;,for
reduce:36
id_name->id=E;,return
reduce:36
id_name->id=E;,array
reduce:36
id_name->id=E;,num
reduce:36
id_name->id=E;,/
reduce:36
id_name->id=E;,*
reduce:36
id_name->id=E;,-
reduce:36
id_name->id=E;,+
reduce:36
id_name->id=E;,char
reduce:36
id_name->id=E;,double
reduce:36
id_name->id=E;,int
reduce:36
id_name->id=E;,}
reduce:36
id_name->id=E;,{
reduce:36
id_name->id=E;,(
reduce:36
id_name->id=E;,id
reduce:36
项目174:
id_name->array[num].={nums};,scanf
shift:219
id_name->array[num].={nums};,printf
id_name->array[num].={nums};,if
id_name->array[num].={nums};,for
id_name->array[num].={nums};,return
id_name->array[num].={nums};,array
id_name->array[num].={nums};,num
id_name->array[num].={nums};,/
id_name->array[num].={nums};,*
id_name->array[num].={nums};,-
id_name->array[num].={nums};,+
id_name->array[num].={nums};,char
id_name->array[num].={nums};,double
id_name->array[num].={nums};,int
id_name->array[num].={nums};,}
id_name->array[num].={nums};,{
id_name->array[num].={nums};,(
id_name->array[num].={nums};,id
项目175:
function_call->id(),]
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
项目176:
function_call_list->function_call_list.,id,,
shift:131
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),]
shift:220
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目177:
F->(E),]
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
项目178:
T->T./F,]
shift:149
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:148
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,]
reduce:20
E->E+T,-
reduce:20
E->E+T,+
reduce:20
项目179:
T->T./F,]
shift:149
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,]
shift:148
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,]
reduce:21
E->E-T,-
reduce:21
E->E-T,+
reduce:21
项目180:
T->T*F,]
reduce:23
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
项目181:
T->T/F,]
reduce:24
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
项目182:
F->array[E.],]
shift:221
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目183:
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
F->array[E],;
reduce:29
项目184:
left->array[E.],=
shift:222
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目185:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,scanf
shift:223
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,id
项目186:
op->.>,array
shift:166
op->.>,num
op->.>,/
op->.>,*
op->.>,-
op->.>,+
op->.>,(
op->.>,id
op->.<,array
shift:165
op->.<,num
op->.<,/
op->.<,*
op->.<,-
op->.<,+
op->.<,(
op->.<,id
op->.<=,array
shift:164
op->.<=,num
op->.<=,/
op->.<=,*
op->.<=,-
op->.<=,+
op->.<=,(
op->.<=,id
op->.>=,array
shift:163
op->.>=,num
op->.>=,/
op->.>=,*
op->.>=,-
op->.>=,+
op->.>=,(
op->.>=,id
bool_expression->G.opH,;
项目187:
function_call->id(),>
reduce:8
function_call->id(),<
reduce:8
function_call->id(),<=
reduce:8
function_call->id(),>=
reduce:8
function_call->id(),/
reduce:8
function_call->id(),*
reduce:8
function_call->id(),-
reduce:8
function_call->id(),+
reduce:8
项目188:
function_call_list->function_call_list.,id,,
shift:131
function_call_list->function_call_list.,id,)
function_call->id(function_call_list.),>
shift:225
function_call->id(function_call_list.),<
function_call->id(function_call_list.),<=
function_call->id(function_call_list.),>=
function_call->id(function_call_list.),/
function_call->id(function_call_list.),*
function_call->id(function_call_list.),-
function_call->id(function_call_list.),+
项目189:
F->(E),>
reduce:26
F->(E),<
reduce:26
F->(E),<=
reduce:26
F->(E),>=
reduce:26
F->(E),/
reduce:26
F->(E),*
reduce:26
F->(E),-
reduce:26
F->(E),+
reduce:26
项目190:
T->T./F,>
shift:159
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:158
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E+T,>
reduce:20
E->E+T,<
reduce:20
E->E+T,<=
reduce:20
E->E+T,>=
reduce:20
E->E+T,-
reduce:20
E->E+T,+
reduce:20
项目191:
T->T./F,>
shift:159
T->T./F,<
T->T./F,<=
T->T./F,>=
T->T./F,/
T->T./F,*
T->T./F,-
T->T./F,+
T->T.*F,>
shift:158
T->T.*F,<
T->T.*F,<=
T->T.*F,>=
T->T.*F,/
T->T.*F,*
T->T.*F,-
T->T.*F,+
E->E-T,>
reduce:21
E->E-T,<
reduce:21
E->E-T,<=
reduce:21
E->E-T,>=
reduce:21
E->E-T,-
reduce:21
E->E-T,+
reduce:21
项目192:
T->T*F,>
reduce:23
T->T*F,<
reduce:23
T->T*F,<=
reduce:23
T->T*F,>=
reduce:23
T->T*F,/
reduce:23
T->T*F,*
reduce:23
T->T*F,-
reduce:23
T->T*F,+
reduce:23
项目193:
T->T/F,>
reduce:24
T->T/F,<
reduce:24
T->T/F,<=
reduce:24
T->T/F,>=
reduce:24
T->T/F,/
reduce:24
T->T/F,*
reduce:24
T->T/F,-
reduce:24
T->T/F,+
reduce:24
项目194:
F->array[E.],>
shift:226
F->array[E.],<
F->array[E.],<=
F->array[E.],>=
F->array[E.],/
F->array[E.],*
F->array[E.],-
F->array[E.],+
E->E.-T,]
shift:146
E->E.-T,-
E->E.-T,+
E->E.+T,]
shift:145
E->E.+T,-
E->E.+T,+
项目195:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->{.block},else
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
block->.sentenceblock,}
block->.sentence,}
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目196:
id_name->.array[num]={nums};,else
shift:229
id_name->.id=E;,else
shift:228
id_name->.id;,else
id_name->.id,id_name,else
define->type.id_name,else
项目197:
ifsentence->sentence,else
reduce:60
项目198:
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
sentence->E.;,else
shift:231
项目199:
sentence->return.E;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目200:
sentence->define,else
reduce:32
项目201:
sentence->set_value.;,else
shift:233
项目202:
sentence->loop_expression,else
reduce:44
项目203:
loop_expression->for.(for_set_value;bool_expression;IncorDec)forsentence,else
shift:234
项目204:
sentence->if_expression,else
reduce:58
项目205:
if_expression->if.(bool_expression)ifsentenceelsesentence,else
shift:235
项目206:
if_expression->if(bool_expression)ifsentence.elsesentence,scanf
shift:236
if_expression->if(bool_expression)ifsentence.elsesentence,printf
if_expression->if(bool_expression)ifsentence.elsesentence,if
if_expression->if(bool_expression)ifsentence.elsesentence,for
if_expression->if(bool_expression)ifsentence.elsesentence,return
if_expression->if(bool_expression)ifsentence.elsesentence,array
if_expression->if(bool_expression)ifsentence.elsesentence,num
if_expression->if(bool_expression)ifsentence.elsesentence,/
if_expression->if(bool_expression)ifsentence.elsesentence,*
if_expression->if(bool_expression)ifsentence.elsesentence,-
if_expression->if(bool_expression)ifsentence.elsesentence,+
if_expression->if(bool_expression)ifsentence.elsesentence,char
if_expression->if(bool_expression)ifsentence.elsesentence,double
if_expression->if(bool_expression)ifsentence.elsesentence,int
if_expression->if(bool_expression)ifsentence.elsesentence,}
if_expression->if(bool_expression)ifsentence.elsesentence,{
if_expression->if(bool_expression)ifsentence.elsesentence,(
if_expression->if(bool_expression)ifsentence.elsesentence,id
项目207:
sentence->inout_expression,else
reduce:61
项目208:
inout_expression->printf_expression,else
reduce:62
项目209:
inout_expression->scanf_expression,else
reduce:63
项目210:
printf_expression->printf.(string,expressions);,else
shift:237
printf_expression->printf.(string);,else
项目211:
scanf_expression->scanf.(string,getaddr);,else
shift:238
项目212:
H->E,)
reduce:51
E->E.-T,-
shift:89
E->E.-T,+
E->E.-T,)
E->E.+T,-
shift:88
E->E.+T,+
E->E.+T,)
项目213:
bool_expression->GopH,)
reduce:46
项目214:
printf_expression->printf(string);,scanf
reduce:64
printf_expression->printf(string);,printf
reduce:64
printf_expression->printf(string);,if
reduce:64
printf_expression->printf(string);,for
reduce:64
printf_expression->printf(string);,return
reduce:64
printf_expression->printf(string);,array
reduce:64
printf_expression->printf(string);,num
reduce:64
printf_expression->printf(string);,/
reduce:64
printf_expression->printf(string);,*
reduce:64
printf_expression->printf(string);,-
reduce:64
printf_expression->printf(string);,+
reduce:64
printf_expression->printf(string);,char
reduce:64
printf_expression->printf(string);,double
reduce:64
printf_expression->printf(string);,int
reduce:64
printf_expression->printf(string);,}
reduce:64
printf_expression->printf(string);,{
reduce:64
printf_expression->printf(string);,(
reduce:64
printf_expression->printf(string);,id
reduce:64
项目215:
expressions->id,)
reduce:67
expressions->id.,expressions,)
shift:239
项目216:
printf_expression->printf(string,expressions.);,scanf
shift:240
printf_expression->printf(string,expressions.);,printf
printf_expression->printf(string,expressions.);,if
printf_expression->printf(string,expressions.);,for
printf_expression->printf(string,expressions.);,return
printf_expression->printf(string,expressions.);,array
printf_expression->printf(string,expressions.);,num
printf_expression->printf(string,expressions.);,/
printf_expression->printf(string,expressions.);,*
printf_expression->printf(string,expressions.);,-
printf_expression->printf(string,expressions.);,+
printf_expression->printf(string,expressions.);,char
printf_expression->printf(string,expressions.);,double
printf_expression->printf(string,expressions.);,int
printf_expression->printf(string,expressions.);,}
printf_expression->printf(string,expressions.);,{
printf_expression->printf(string,expressions.);,(
printf_expression->printf(string,expressions.);,id
项目217:
scanf_expression->scanf(string,getaddr.);,scanf
shift:241
scanf_expression->scanf(string,getaddr.);,printf
scanf_expression->scanf(string,getaddr.);,if
scanf_expression->scanf(string,getaddr.);,for
scanf_expression->scanf(string,getaddr.);,return
scanf_expression->scanf(string,getaddr.);,array
scanf_expression->scanf(string,getaddr.);,num
scanf_expression->scanf(string,getaddr.);,/
scanf_expression->scanf(string,getaddr.);,*
scanf_expression->scanf(string,getaddr.);,-
scanf_expression->scanf(string,getaddr.);,+
scanf_expression->scanf(string,getaddr.);,char
scanf_expression->scanf(string,getaddr.);,double
scanf_expression->scanf(string,getaddr.);,int
scanf_expression->scanf(string,getaddr.);,}
scanf_expression->scanf(string,getaddr.);,{
scanf_expression->scanf(string,getaddr.);,(
scanf_expression->scanf(string,getaddr.);,id
项目218:
getaddr->&.id,)
shift:242
项目219:
id_name->array[num]=.{nums};,scanf
shift:243
id_name->array[num]=.{nums};,printf
id_name->array[num]=.{nums};,if
id_name->array[num]=.{nums};,for
id_name->array[num]=.{nums};,return
id_name->array[num]=.{nums};,array
id_name->array[num]=.{nums};,num
id_name->array[num]=.{nums};,/
id_name->array[num]=.{nums};,*
id_name->array[num]=.{nums};,-
id_name->array[num]=.{nums};,+
id_name->array[num]=.{nums};,char
id_name->array[num]=.{nums};,double
id_name->array[num]=.{nums};,int
id_name->array[num]=.{nums};,}
id_name->array[num]=.{nums};,{
id_name->array[num]=.{nums};,(
id_name->array[num]=.{nums};,id
项目220:
function_call->id(function_call_list),]
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
项目221:
F->array[E],]
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
项目222:
left->array[E],=
reduce:43
项目223:
Dec_expression->.id--,)
shift:244
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,scanf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,printf
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,if
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,for
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,return
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,array
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,num
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,/
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,*
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,-
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,+
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,char
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,double
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,int
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,}
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,{
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,(
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,id
项目224:
H->.E,;
bool_expression->Gop.H,;
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目225:
function_call->id(function_call_list),>
reduce:9
function_call->id(function_call_list),<
reduce:9
function_call->id(function_call_list),<=
reduce:9
function_call->id(function_call_list),>=
reduce:9
function_call->id(function_call_list),/
reduce:9
function_call->id(function_call_list),*
reduce:9
function_call->id(function_call_list),-
reduce:9
function_call->id(function_call_list),+
reduce:9
项目226:
F->array[E],>
reduce:29
F->array[E],<
reduce:29
F->array[E],<=
reduce:29
F->array[E],>=
reduce:29
F->array[E],/
reduce:29
F->array[E],*
reduce:29
F->array[E],-
reduce:29
F->array[E],+
reduce:29
项目227:
sentence->{block.},else
shift:250
项目228:
id_name->id.=E;,else
shift:253
id_name->id.;,else
shift:252
id_name->id.,id_name,else
shift:251
项目229:
id_name->array.[num]={nums};,else
shift:254
项目230:
define->typeid_name,else
reduce:33
项目231:
sentence->E;,else
reduce:19
项目232:
sentence->returnE.;,else
shift:255
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目233:
sentence->set_value;,else
reduce:40
项目234:
for_set_value->.set_value,;
loop_expression->for(.for_set_value;bool_expression;IncorDec)forsentence,else
left->.array[E],=
shift:114
left->.id,=
shift:113
set_value->.left=E,;
项目235:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
if_expression->if(.bool_expression)ifsentenceelsesentence,else
bool_expression->.GopH,)
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目236:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->if(bool_expression)ifsentenceelse.sentence,scanf
if_expression->if(bool_expression)ifsentenceelse.sentence,printf
if_expression->if(bool_expression)ifsentenceelse.sentence,if
if_expression->if(bool_expression)ifsentenceelse.sentence,for
if_expression->if(bool_expression)ifsentenceelse.sentence,return
if_expression->if(bool_expression)ifsentenceelse.sentence,array
if_expression->if(bool_expression)ifsentenceelse.sentence,num
if_expression->if(bool_expression)ifsentenceelse.sentence,/
if_expression->if(bool_expression)ifsentenceelse.sentence,*
if_expression->if(bool_expression)ifsentenceelse.sentence,-
if_expression->if(bool_expression)ifsentenceelse.sentence,+
if_expression->if(bool_expression)ifsentenceelse.sentence,char
if_expression->if(bool_expression)ifsentenceelse.sentence,double
if_expression->if(bool_expression)ifsentenceelse.sentence,int
if_expression->if(bool_expression)ifsentenceelse.sentence,}
if_expression->if(bool_expression)ifsentenceelse.sentence,{
if_expression->if(bool_expression)ifsentenceelse.sentence,(
if_expression->if(bool_expression)ifsentenceelse.sentence,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目237:
printf_expression->printf(.string,expressions);,else
shift:259
printf_expression->printf(.string);,else
项目238:
scanf_expression->scanf(.string,getaddr);,else
shift:260
项目239:
expressions->.id,)
shift:215
expressions->id,.expressions,)
expressions->.id,expressions,)
项目240:
printf_expression->printf(string,expressions).;,scanf
shift:262
printf_expression->printf(string,expressions).;,printf
printf_expression->printf(string,expressions).;,if
printf_expression->printf(string,expressions).;,for
printf_expression->printf(string,expressions).;,return
printf_expression->printf(string,expressions).;,array
printf_expression->printf(string,expressions).;,num
printf_expression->printf(string,expressions).;,/
printf_expression->printf(string,expressions).;,*
printf_expression->printf(string,expressions).;,-
printf_expression->printf(string,expressions).;,+
printf_expression->printf(string,expressions).;,char
printf_expression->printf(string,expressions).;,double
printf_expression->printf(string,expressions).;,int
printf_expression->printf(string,expressions).;,}
printf_expression->printf(string,expressions).;,{
printf_expression->printf(string,expressions).;,(
printf_expression->printf(string,expressions).;,id
项目241:
scanf_expression->scanf(string,getaddr).;,scanf
shift:263
scanf_expression->scanf(string,getaddr).;,printf
scanf_expression->scanf(string,getaddr).;,if
scanf_expression->scanf(string,getaddr).;,for
scanf_expression->scanf(string,getaddr).;,return
scanf_expression->scanf(string,getaddr).;,array
scanf_expression->scanf(string,getaddr).;,num
scanf_expression->scanf(string,getaddr).;,/
scanf_expression->scanf(string,getaddr).;,*
scanf_expression->scanf(string,getaddr).;,-
scanf_expression->scanf(string,getaddr).;,+
scanf_expression->scanf(string,getaddr).;,char
scanf_expression->scanf(string,getaddr).;,double
scanf_expression->scanf(string,getaddr).;,int
scanf_expression->scanf(string,getaddr).;,}
scanf_expression->scanf(string,getaddr).;,{
scanf_expression->scanf(string,getaddr).;,(
scanf_expression->scanf(string,getaddr).;,id
项目242:
getaddr->&id,)
reduce:69
项目243:
nums->.num,}
shift:264
nums->.num,nums,}
id_name->array[num]={.nums};,scanf
id_name->array[num]={.nums};,printf
id_name->array[num]={.nums};,if
id_name->array[num]={.nums};,for
id_name->array[num]={.nums};,return
id_name->array[num]={.nums};,array
id_name->array[num]={.nums};,num
id_name->array[num]={.nums};,/
id_name->array[num]={.nums};,*
id_name->array[num]={.nums};,-
id_name->array[num]={.nums};,+
id_name->array[num]={.nums};,char
id_name->array[num]={.nums};,double
id_name->array[num]={.nums};,int
id_name->array[num]={.nums};,}
id_name->array[num]={.nums};,{
id_name->array[num]={.nums};,(
id_name->array[num]={.nums};,id
项目244:
Dec_expression->id.--,)
shift:267
Inc_expression->id.++,)
shift:266
项目245:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,scanf
shift:268
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,id
项目246:
IncorDec->Inc_expression,)
reduce:54
项目247:
IncorDec->Dec_expression,)
reduce:55
项目248:
H->E,;
reduce:51
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目249:
bool_expression->GopH,;
reduce:46
项目250:
sentence->{block},else
reduce:18
项目251:
id_name->.array[num]={nums};,else
shift:229
id_name->.id=E;,else
shift:228
id_name->.id;,else
id_name->id,.id_name,else
id_name->.id,id_name,else
项目252:
id_name->id;,else
reduce:35
项目253:
id_name->id=.E;,else
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
shift:73
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
shift:71
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目254:
id_name->array[.num]={nums};,else
shift:271
项目255:
sentence->returnE;,else
reduce:31
项目256:
loop_expression->for(for_set_value.;bool_expression;IncorDec)forsentence,else
shift:272
项目257:
if_expression->if(bool_expression.)ifsentenceelsesentence,else
shift:273
项目258:
if_expression->if(bool_expression)ifsentenceelsesentence,scanf
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,printf
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,if
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,for
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,return
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,array
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,num
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,/
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,*
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,-
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,+
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,char
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,double
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,int
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,}
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,{
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,(
reduce:59
if_expression->if(bool_expression)ifsentenceelsesentence,id
reduce:59
项目259:
printf_expression->printf(string.,expressions);,else
shift:275
printf_expression->printf(string.);,else
shift:274
项目260:
scanf_expression->scanf(string.,getaddr);,else
shift:276
项目261:
expressions->id,expressions,)
reduce:66
项目262:
printf_expression->printf(string,expressions);,scanf
reduce:65
printf_expression->printf(string,expressions);,printf
reduce:65
printf_expression->printf(string,expressions);,if
reduce:65
printf_expression->printf(string,expressions);,for
reduce:65
printf_expression->printf(string,expressions);,return
reduce:65
printf_expression->printf(string,expressions);,array
reduce:65
printf_expression->printf(string,expressions);,num
reduce:65
printf_expression->printf(string,expressions);,/
reduce:65
printf_expression->printf(string,expressions);,*
reduce:65
printf_expression->printf(string,expressions);,-
reduce:65
printf_expression->printf(string,expressions);,+
reduce:65
printf_expression->printf(string,expressions);,char
reduce:65
printf_expression->printf(string,expressions);,double
reduce:65
printf_expression->printf(string,expressions);,int
reduce:65
printf_expression->printf(string,expressions);,}
reduce:65
printf_expression->printf(string,expressions);,{
reduce:65
printf_expression->printf(string,expressions);,(
reduce:65
printf_expression->printf(string,expressions);,id
reduce:65
项目263:
scanf_expression->scanf(string,getaddr);,scanf
reduce:68
scanf_expression->scanf(string,getaddr);,printf
reduce:68
scanf_expression->scanf(string,getaddr);,if
reduce:68
scanf_expression->scanf(string,getaddr);,for
reduce:68
scanf_expression->scanf(string,getaddr);,return
reduce:68
scanf_expression->scanf(string,getaddr);,array
reduce:68
scanf_expression->scanf(string,getaddr);,num
reduce:68
scanf_expression->scanf(string,getaddr);,/
reduce:68
scanf_expression->scanf(string,getaddr);,*
reduce:68
scanf_expression->scanf(string,getaddr);,-
reduce:68
scanf_expression->scanf(string,getaddr);,+
reduce:68
scanf_expression->scanf(string,getaddr);,char
reduce:68
scanf_expression->scanf(string,getaddr);,double
reduce:68
scanf_expression->scanf(string,getaddr);,int
reduce:68
scanf_expression->scanf(string,getaddr);,}
reduce:68
scanf_expression->scanf(string,getaddr);,{
reduce:68
scanf_expression->scanf(string,getaddr);,(
reduce:68
scanf_expression->scanf(string,getaddr);,id
reduce:68
项目264:
nums->num,}
reduce:39
nums->num.,nums,}
shift:277
项目265:
id_name->array[num]={nums.};,scanf
shift:278
id_name->array[num]={nums.};,printf
id_name->array[num]={nums.};,if
id_name->array[num]={nums.};,for
id_name->array[num]={nums.};,return
id_name->array[num]={nums.};,array
id_name->array[num]={nums.};,num
id_name->array[num]={nums.};,/
id_name->array[num]={nums.};,*
id_name->array[num]={nums.};,-
id_name->array[num]={nums.};,+
id_name->array[num]={nums.};,char
id_name->array[num]={nums.};,double
id_name->array[num]={nums.};,int
id_name->array[num]={nums.};,}
id_name->array[num]={nums.};,{
id_name->array[num]={nums.};,(
id_name->array[num]={nums.};,id
项目266:
Inc_expression->id++,)
reduce:56
项目267:
Dec_expression->id--,)
reduce:57
项目268:
scanf_expression->.scanf(string,getaddr);,scanf
shift:47
scanf_expression->.scanf(string,getaddr);,printf
scanf_expression->.scanf(string,getaddr);,if
scanf_expression->.scanf(string,getaddr);,for
scanf_expression->.scanf(string,getaddr);,return
scanf_expression->.scanf(string,getaddr);,array
scanf_expression->.scanf(string,getaddr);,num
scanf_expression->.scanf(string,getaddr);,/
scanf_expression->.scanf(string,getaddr);,*
scanf_expression->.scanf(string,getaddr);,-
scanf_expression->.scanf(string,getaddr);,+
scanf_expression->.scanf(string,getaddr);,char
scanf_expression->.scanf(string,getaddr);,double
scanf_expression->.scanf(string,getaddr);,int
scanf_expression->.scanf(string,getaddr);,}
scanf_expression->.scanf(string,getaddr);,{
scanf_expression->.scanf(string,getaddr);,(
scanf_expression->.scanf(string,getaddr);,id
printf_expression->.printf(string,expressions);,scanf
shift:46
printf_expression->.printf(string,expressions);,printf
printf_expression->.printf(string,expressions);,if
printf_expression->.printf(string,expressions);,for
printf_expression->.printf(string,expressions);,return
printf_expression->.printf(string,expressions);,array
printf_expression->.printf(string,expressions);,num
printf_expression->.printf(string,expressions);,/
printf_expression->.printf(string,expressions);,*
printf_expression->.printf(string,expressions);,-
printf_expression->.printf(string,expressions);,+
printf_expression->.printf(string,expressions);,char
printf_expression->.printf(string,expressions);,double
printf_expression->.printf(string,expressions);,int
printf_expression->.printf(string,expressions);,}
printf_expression->.printf(string,expressions);,{
printf_expression->.printf(string,expressions);,(
printf_expression->.printf(string,expressions);,id
printf_expression->.printf(string);,scanf
printf_expression->.printf(string);,printf
printf_expression->.printf(string);,if
printf_expression->.printf(string);,for
printf_expression->.printf(string);,return
printf_expression->.printf(string);,array
printf_expression->.printf(string);,num
printf_expression->.printf(string);,/
printf_expression->.printf(string);,*
printf_expression->.printf(string);,-
printf_expression->.printf(string);,+
printf_expression->.printf(string);,char
printf_expression->.printf(string);,double
printf_expression->.printf(string);,int
printf_expression->.printf(string);,}
printf_expression->.printf(string);,{
printf_expression->.printf(string);,(
printf_expression->.printf(string);,id
inout_expression->.scanf_expression,scanf
inout_expression->.scanf_expression,printf
inout_expression->.scanf_expression,if
inout_expression->.scanf_expression,for
inout_expression->.scanf_expression,return
inout_expression->.scanf_expression,array
inout_expression->.scanf_expression,num
inout_expression->.scanf_expression,/
inout_expression->.scanf_expression,*
inout_expression->.scanf_expression,-
inout_expression->.scanf_expression,+
inout_expression->.scanf_expression,char
inout_expression->.scanf_expression,double
inout_expression->.scanf_expression,int
inout_expression->.scanf_expression,}
inout_expression->.scanf_expression,{
inout_expression->.scanf_expression,(
inout_expression->.scanf_expression,id
inout_expression->.printf_expression,scanf
inout_expression->.printf_expression,printf
inout_expression->.printf_expression,if
inout_expression->.printf_expression,for
inout_expression->.printf_expression,return
inout_expression->.printf_expression,array
inout_expression->.printf_expression,num
inout_expression->.printf_expression,/
inout_expression->.printf_expression,*
inout_expression->.printf_expression,-
inout_expression->.printf_expression,+
inout_expression->.printf_expression,char
inout_expression->.printf_expression,double
inout_expression->.printf_expression,int
inout_expression->.printf_expression,}
inout_expression->.printf_expression,{
inout_expression->.printf_expression,(
inout_expression->.printf_expression,id
sentence->.inout_expression,scanf
sentence->.inout_expression,printf
sentence->.inout_expression,if
sentence->.inout_expression,for
sentence->.inout_expression,return
sentence->.inout_expression,array
sentence->.inout_expression,num
sentence->.inout_expression,/
sentence->.inout_expression,*
sentence->.inout_expression,-
sentence->.inout_expression,+
sentence->.inout_expression,char
sentence->.inout_expression,double
sentence->.inout_expression,int
sentence->.inout_expression,}
sentence->.inout_expression,{
sentence->.inout_expression,(
sentence->.inout_expression,id
if_expression->.if(bool_expression)ifsentenceelsesentence,scanf
shift:42
if_expression->.if(bool_expression)ifsentenceelsesentence,printf
if_expression->.if(bool_expression)ifsentenceelsesentence,if
if_expression->.if(bool_expression)ifsentenceelsesentence,for
if_expression->.if(bool_expression)ifsentenceelsesentence,return
if_expression->.if(bool_expression)ifsentenceelsesentence,array
if_expression->.if(bool_expression)ifsentenceelsesentence,num
if_expression->.if(bool_expression)ifsentenceelsesentence,/
if_expression->.if(bool_expression)ifsentenceelsesentence,*
if_expression->.if(bool_expression)ifsentenceelsesentence,-
if_expression->.if(bool_expression)ifsentenceelsesentence,+
if_expression->.if(bool_expression)ifsentenceelsesentence,char
if_expression->.if(bool_expression)ifsentenceelsesentence,double
if_expression->.if(bool_expression)ifsentenceelsesentence,int
if_expression->.if(bool_expression)ifsentenceelsesentence,}
if_expression->.if(bool_expression)ifsentenceelsesentence,{
if_expression->.if(bool_expression)ifsentenceelsesentence,(
if_expression->.if(bool_expression)ifsentenceelsesentence,id
sentence->.if_expression,scanf
sentence->.if_expression,printf
sentence->.if_expression,if
sentence->.if_expression,for
sentence->.if_expression,return
sentence->.if_expression,array
sentence->.if_expression,num
sentence->.if_expression,/
sentence->.if_expression,*
sentence->.if_expression,-
sentence->.if_expression,+
sentence->.if_expression,char
sentence->.if_expression,double
sentence->.if_expression,int
sentence->.if_expression,}
sentence->.if_expression,{
sentence->.if_expression,(
sentence->.if_expression,id
forsentence->.sentence,scanf
forsentence->.sentence,printf
forsentence->.sentence,if
forsentence->.sentence,for
forsentence->.sentence,return
forsentence->.sentence,array
forsentence->.sentence,num
forsentence->.sentence,/
forsentence->.sentence,*
forsentence->.sentence,-
forsentence->.sentence,+
forsentence->.sentence,char
forsentence->.sentence,double
forsentence->.sentence,int
forsentence->.sentence,}
forsentence->.sentence,{
forsentence->.sentence,(
forsentence->.sentence,id
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,scanf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,printf
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,if
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,for
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,return
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,array
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,num
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,/
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,*
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,-
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,+
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,char
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,double
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,int
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,}
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,{
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,(
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,id
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,scanf
shift:40
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,printf
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,if
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,for
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,return
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,array
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,num
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,/
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,*
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,-
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,+
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,char
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,double
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,int
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,}
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,{
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,(
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,id
sentence->.loop_expression,scanf
sentence->.loop_expression,printf
sentence->.loop_expression,if
sentence->.loop_expression,for
sentence->.loop_expression,return
sentence->.loop_expression,array
sentence->.loop_expression,num
sentence->.loop_expression,/
sentence->.loop_expression,*
sentence->.loop_expression,-
sentence->.loop_expression,+
sentence->.loop_expression,char
sentence->.loop_expression,double
sentence->.loop_expression,int
sentence->.loop_expression,}
sentence->.loop_expression,{
sentence->.loop_expression,(
sentence->.loop_expression,id
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,scanf
sentence->.set_value;,printf
sentence->.set_value;,if
sentence->.set_value;,for
sentence->.set_value;,return
sentence->.set_value;,array
sentence->.set_value;,num
sentence->.set_value;,/
sentence->.set_value;,*
sentence->.set_value;,-
sentence->.set_value;,+
sentence->.set_value;,char
sentence->.set_value;,double
sentence->.set_value;,int
sentence->.set_value;,}
sentence->.set_value;,{
sentence->.set_value;,(
sentence->.set_value;,id
define->.typeid_name,scanf
define->.typeid_name,printf
define->.typeid_name,if
define->.typeid_name,for
define->.typeid_name,return
define->.typeid_name,array
define->.typeid_name,num
define->.typeid_name,/
define->.typeid_name,*
define->.typeid_name,-
define->.typeid_name,+
define->.typeid_name,char
define->.typeid_name,double
define->.typeid_name,int
define->.typeid_name,}
define->.typeid_name,{
define->.typeid_name,(
define->.typeid_name,id
sentence->.define,scanf
sentence->.define,printf
sentence->.define,if
sentence->.define,for
sentence->.define,return
sentence->.define,array
sentence->.define,num
sentence->.define,/
sentence->.define,*
sentence->.define,-
sentence->.define,+
sentence->.define,char
sentence->.define,double
sentence->.define,int
sentence->.define,}
sentence->.define,{
sentence->.define,(
sentence->.define,id
sentence->.returnE;,scanf
shift:35
sentence->.returnE;,printf
sentence->.returnE;,if
sentence->.returnE;,for
sentence->.returnE;,return
sentence->.returnE;,array
sentence->.returnE;,num
sentence->.returnE;,/
sentence->.returnE;,*
sentence->.returnE;,-
sentence->.returnE;,+
sentence->.returnE;,char
sentence->.returnE;,double
sentence->.returnE;,int
sentence->.returnE;,}
sentence->.returnE;,{
sentence->.returnE;,(
sentence->.returnE;,id
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,scanf
sentence->.E;,printf
sentence->.E;,if
sentence->.E;,for
sentence->.E;,return
sentence->.E;,array
sentence->.E;,num
sentence->.E;,/
sentence->.E;,*
sentence->.E;,-
sentence->.E;,+
sentence->.E;,char
sentence->.E;,double
sentence->.E;,int
sentence->.E;,}
sentence->.E;,{
sentence->.E;,(
sentence->.E;,id
sentence->.{block},scanf
shift:22
sentence->.{block},printf
sentence->.{block},if
sentence->.{block},for
sentence->.{block},return
sentence->.{block},array
sentence->.{block},num
sentence->.{block},/
sentence->.{block},*
sentence->.{block},-
sentence->.{block},+
sentence->.{block},char
sentence->.{block},double
sentence->.{block},int
sentence->.{block},}
sentence->.{block},{
sentence->.{block},(
sentence->.{block},id
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目269:
id_name->id,id_name,else
reduce:34
项目270:
id_name->id=E.;,else
shift:281
E->E.-T,-
shift:67
E->E.-T,+
E->E.-T,;
E->E.+T,-
shift:66
E->E.+T,+
E->E.+T,;
项目271:
id_name->array[num.]={nums};,else
shift:282
项目272:
G->.E,>
G->.E,<
G->.E,<=
G->.E,>=
bool_expression->.GopH,;
loop_expression->for(for_set_value;.bool_expression;IncorDec)forsentence,else
F->.function_call,>
F->.function_call,<
F->.function_call,<=
F->.function_call,>=
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.array[E],>
shift:124
F->.array[E],<
F->.array[E],<=
F->.array[E],>=
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.id,>
shift:117
F->.id,<
F->.id,<=
F->.id,>=
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.num,>
shift:123
F->.num,<
F->.num,<=
F->.num,>=
F->.num,/
F->.num,*
F->.num,-
F->.num,+
F->.(E),>
shift:118
F->.(E),<
F->.(E),<=
F->.(E),>=
F->.(E),/
F->.(E),*
F->.(E),-
F->.(E),+
T->.F,>
T->.F,<
T->.F,<=
T->.F,>=
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.T/F,>
T->.T/F,<
T->.T/F,<=
T->.T/F,>=
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T*F,>
T->.T*F,<
T->.T*F,<=
T->.T*F,>=
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
E->.T,>
E->.T,<
E->.T,<=
E->.T,>=
E->.T,-
E->.T,+
E->.E-T,>
E->.E-T,<
E->.E-T,<=
E->.E-T,>=
E->.E-T,-
E->.E-T,+
E->.E+T,>
E->.E+T,<
E->.E+T,<=
E->.E+T,>=
E->.E+T,-
E->.E+T,+
function_call->.id(function_call_list),>
function_call->.id(function_call_list),<
function_call->.id(function_call_list),<=
function_call->.id(function_call_list),>=
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(),>
function_call->.id(),<
function_call->.id(),<=
function_call->.id(),>=
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
项目273:
scanf_expression->.scanf(string,getaddr);,else
shift:211
printf_expression->.printf(string,expressions);,else
shift:210
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
ifsentence->.sentence,else
if_expression->if(bool_expression).ifsentenceelsesentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:205
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:203
sentence->.loop_expression,else
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:199
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:195
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目274:
printf_expression->printf(string).;,else
shift:285
项目275:
expressions->.id,)
shift:215
expressions->.id,expressions,)
printf_expression->printf(string,.expressions);,else
项目276:
getaddr->.&id,)
shift:218
scanf_expression->scanf(string,.getaddr);,else
项目277:
nums->.num,}
shift:264
nums->num,.nums,}
nums->.num,nums,}
项目278:
id_name->array[num]={nums}.;,scanf
shift:289
id_name->array[num]={nums}.;,printf
id_name->array[num]={nums}.;,if
id_name->array[num]={nums}.;,for
id_name->array[num]={nums}.;,return
id_name->array[num]={nums}.;,array
id_name->array[num]={nums}.;,num
id_name->array[num]={nums}.;,/
id_name->array[num]={nums}.;,*
id_name->array[num]={nums}.;,-
id_name->array[num]={nums}.;,+
id_name->array[num]={nums}.;,char
id_name->array[num]={nums}.;,double
id_name->array[num]={nums}.;,int
id_name->array[num]={nums}.;,}
id_name->array[num]={nums}.;,{
id_name->array[num]={nums}.;,(
id_name->array[num]={nums}.;,id
项目279:
forsentence->sentence,scanf
reduce:52
forsentence->sentence,printf
reduce:52
forsentence->sentence,if
reduce:52
forsentence->sentence,for
reduce:52
forsentence->sentence,return
reduce:52
forsentence->sentence,array
reduce:52
forsentence->sentence,num
reduce:52
forsentence->sentence,/
reduce:52
forsentence->sentence,*
reduce:52
forsentence->sentence,-
reduce:52
forsentence->sentence,+
reduce:52
forsentence->sentence,char
reduce:52
forsentence->sentence,double
reduce:52
forsentence->sentence,int
reduce:52
forsentence->sentence,}
reduce:52
forsentence->sentence,{
reduce:52
forsentence->sentence,(
reduce:52
forsentence->sentence,id
reduce:52
项目280:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,scanf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,printf
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,if
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,for
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,return
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,array
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,num
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,/
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,*
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,-
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,+
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,char
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,double
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,int
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,}
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,{
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,(
reduce:45
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,id
reduce:45
项目281:
id_name->id=E;,else
reduce:36
项目282:
id_name->array[num].={nums};,else
shift:290
项目283:
loop_expression->for(for_set_value;bool_expression.;IncorDec)forsentence,else
shift:291
项目284:
if_expression->if(bool_expression)ifsentence.elsesentence,else
shift:292
项目285:
printf_expression->printf(string);,else
reduce:64
项目286:
printf_expression->printf(string,expressions.);,else
shift:293
项目287:
scanf_expression->scanf(string,getaddr.);,else
shift:294
项目288:
nums->num,nums,}
reduce:38
项目289:
id_name->array[num]={nums};,scanf
reduce:37
id_name->array[num]={nums};,printf
reduce:37
id_name->array[num]={nums};,if
reduce:37
id_name->array[num]={nums};,for
reduce:37
id_name->array[num]={nums};,return
reduce:37
id_name->array[num]={nums};,array
reduce:37
id_name->array[num]={nums};,num
reduce:37
id_name->array[num]={nums};,/
reduce:37
id_name->array[num]={nums};,*
reduce:37
id_name->array[num]={nums};,-
reduce:37
id_name->array[num]={nums};,+
reduce:37
id_name->array[num]={nums};,char
reduce:37
id_name->array[num]={nums};,double
reduce:37
id_name->array[num]={nums};,int
reduce:37
id_name->array[num]={nums};,}
reduce:37
id_name->array[num]={nums};,{
reduce:37
id_name->array[num]={nums};,(
reduce:37
id_name->array[num]={nums};,id
reduce:37
项目290:
id_name->array[num]=.{nums};,else
shift:295
项目291:
Dec_expression->.id--,)
shift:244
Inc_expression->.id++,)
IncorDec->.Dec_expression,)
IncorDec->.Inc_expression,)
loop_expression->for(for_set_value;bool_expression;.IncorDec)forsentence,else
项目292:
scanf_expression->.scanf(string,getaddr);,else
shift:211
printf_expression->.printf(string,expressions);,else
shift:210
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->if(bool_expression)ifsentenceelse.sentence,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:205
sentence->.if_expression,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:203
sentence->.loop_expression,else
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:199
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:195
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目293:
printf_expression->printf(string,expressions).;,else
shift:298
项目294:
scanf_expression->scanf(string,getaddr).;,else
shift:299
项目295:
nums->.num,}
shift:264
nums->.num,nums,}
id_name->array[num]={.nums};,else
项目296:
loop_expression->for(for_set_value;bool_expression;IncorDec.)forsentence,else
shift:301
项目297:
if_expression->if(bool_expression)ifsentenceelsesentence,else
reduce:59
项目298:
printf_expression->printf(string,expressions);,else
reduce:65
项目299:
scanf_expression->scanf(string,getaddr);,else
reduce:68
项目300:
id_name->array[num]={nums.};,else
shift:302
项目301:
scanf_expression->.scanf(string,getaddr);,else
shift:211
printf_expression->.printf(string,expressions);,else
shift:210
printf_expression->.printf(string);,else
inout_expression->.scanf_expression,else
inout_expression->.printf_expression,else
sentence->.inout_expression,else
if_expression->.if(bool_expression)ifsentenceelsesentence,else
shift:205
sentence->.if_expression,else
forsentence->.sentence,else
loop_expression->for(for_set_value;bool_expression;IncorDec).forsentence,else
loop_expression->.for(for_set_value;bool_expression;IncorDec)forsentence,else
shift:203
sentence->.loop_expression,else
left->.array[E],=
shift:34
left->.id,=
shift:20
set_value->.left=E,;
sentence->.set_value;,else
define->.typeid_name,else
sentence->.define,else
sentence->.returnE;,else
shift:199
F->.function_call,/
F->.function_call,*
F->.function_call,-
F->.function_call,+
F->.function_call,;
F->.array[E],/
F->.array[E],*
F->.array[E],-
F->.array[E],+
F->.array[E],;
F->.id,/
F->.id,*
F->.id,-
F->.id,+
F->.id,;
F->.num,/
shift:33
F->.num,*
F->.num,-
F->.num,+
F->.num,;
F->.(E),/
shift:21
F->.(E),*
F->.(E),-
F->.(E),+
F->.(E),;
T->.F,/
T->.F,*
T->.F,-
T->.F,+
T->.F,;
T->.T/F,/
T->.T/F,*
T->.T/F,-
T->.T/F,+
T->.T/F,;
T->.T*F,/
T->.T*F,*
T->.T*F,-
T->.T*F,+
T->.T*F,;
E->.T,-
E->.T,+
E->.T,;
E->.E-T,-
E->.E-T,+
E->.E-T,;
E->.E+T,-
E->.E+T,+
E->.E+T,;
sentence->.E;,else
sentence->.{block},else
shift:195
type->.char,array
shift:28
type->.char,id
type->.double,array
shift:27
type->.double,id
type->.int,array
shift:26
type->.int,id
function_call->.id(function_call_list),/
function_call->.id(function_call_list),*
function_call->.id(function_call_list),-
function_call->.id(function_call_list),+
function_call->.id(function_call_list),;
function_call->.id(),/
function_call->.id(),*
function_call->.id(),-
function_call->.id(),+
function_call->.id(),;
项目302:
id_name->array[num]={nums}.;,else
shift:305
项目303:
forsentence->sentence,else
reduce:52
项目304:
loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence,else
reduce:45
项目305:
id_name->array[num]={nums};,else
reduce:37
Action Table:
   # id  (  )  {  }void  ,intdoublechar  ;  +  -  *  /numarray  [  ]return  =for >= <=  <  > ++ -- ifelseprintfstringscanf  &
 0       S5  S7 S8 S9                         
 1 r12      S5  S7 S8 S9                         
 2 r0      r0  r0 r0 r0                         
 3  S11                                  
 4  r4                                  
 5  r5                                  
 6 acc                                   
 7  r13                                  
 8  r14                                  
 9  r15                                  
10 r1      r1  r1 r1 r1                         
11   S12                                 
12    S13     S7 S8 S9                         
13     S16                               
14    S17    S18                            
15  S19                                  
16  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
17     S48                               
18         S7 S8 S9                         
19    r6    r6                            
20   S50         r28 r28 r28 r28 r28      r42              
21  S51 S52              S57 S58                  
22  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
23      S60                              
24  S61                S62                  
25            r30 r30 r30 r30 r30                    
26  r13                r13                  
27  r14                r14                  
28  r15                r15                  
29  S20 S21  S22 r16   S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
30            S65 S66 S67                      
31            r22 r22 r22 S68 S69                    
32            r25 r25 r25 r25 r25                    
33            r27 r27 r27 r27 r27                    
34                   S70                 
35  S71 S21              S33 S73                  
36  r32 r32  r32 r32   r32 r32 r32  r32 r32 r32 r32 r32 r32   r32  r32       r32  r32  r32  
37            S74                        
38                      S75              
39  r44 r44  r44 r44   r44 r44 r44  r44 r44 r44 r44 r44 r44   r44  r44       r44  r44  r44  
40   S76                                 
41  r58 r58  r58 r58   r58 r58 r58  r58 r58 r58 r58 r58 r58   r58  r58       r58  r58  r58  
42   S77                                 
43  r61 r61  r61 r61   r61 r61 r61  r61 r61 r61 r61 r61 r61   r61  r61       r61  r61  r61  
44  r62 r62  r62 r62   r62 r62 r62  r62 r62 r62 r62 r62 r62   r62  r62       r62  r62  r62  
45  r63 r63  r63 r63   r63 r63 r63  r63 r63 r63 r63 r63 r63   r63  r63       r63  r63  r63  
46   S78                                 
47   S79                                 
48  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
49  S81                                  
50  S82  S83                                
51   S85 r28         r28 r28 r28 r28                    
52  S51 S52              S57 S58                  
53    r30         r30 r30 r30 r30                    
54    S87         S88 S89                      
55    r22         r22 r22 S90 S91                    
56    r25         r25 r25 r25 r25                    
57    r27         r27 r27 r27 r27                    
58                   S92                 
59      S93                              
60 r2      r2  r2 r2 r2                         
61        S94    S95          S96              
62                   S97                 
63  r33 r33  r33 r33   r33 r33 r33  r33 r33 r33 r33 r33 r33   r33  r33       r33  r33  r33  
64      r17                              
65  r19 r19  r19 r19   r19 r19 r19  r19 r19 r19 r19 r19 r19   r19  r19       r19  r19  r19  
66  S71 S21              S33 S73                  
67  S71 S21              S33 S73                  
68  S71 S21              S33 S73                  
69  S71 S21              S33 S73                  
70  S102 S103              S108 S109                  
71   S50         r28 r28 r28 r28 r28                    
72            S110 S66 S67                      
73                   S111                 
74  r40 r40  r40 r40   r40 r40 r40  r40 r40 r40 r40 r40 r40   r40  r40       r40  r40  r40  
75  S71 S21              S33 S73                  
76  S113                S114                  
77  S117 S118              S123 S124                  
78                                 S127   
79                                 S128   
80      S129                              
81    r7    r7                            
82    r10    r10                            
83            r8 r8 r8 r8 r8                    
84    S130    S131                            
85  S82  S132                                
86    S134         S88 S89                      
87            r26 r26 r26 r26 r26                    
88  S51 S52              S57 S58                  
89  S51 S52              S57 S58                  
90  S51 S52              S57 S58                  
91  S51 S52              S57 S58                  
92  S102 S103              S108 S109                  
93  r18 r18  r18 r18   r18 r18 r18  r18 r18 r18 r18 r18 r18   r18  r18       r18  r18  r18  
94  S61                S62                  
95  r35 r35  r35 r35   r35 r35 r35  r35 r35 r35 r35 r35 r35   r35  r35       r35  r35  r35  
96  S71 S21              S33 S73                  
97                 S142                   
98            r20 r20 r20 S68 S69                    
99            r21 r21 r21 S68 S69                    
100            r23 r23 r23 r23 r23                    
101            r24 r24 r24 r24 r24                    
102   S143          r28 r28 r28 r28    r28                
103  S51 S52              S57 S58                  
104             r30 r30 r30 r30    r30                
105             S145 S146      S147                
106             r22 r22 S148 S149    r22                
107             r25 r25 r25 r25    r25                
108             r27 r27 r27 r27    r27                
109                   S150                 
110  r31 r31  r31 r31   r31 r31 r31  r31 r31 r31 r31 r31 r31   r31  r31       r31  r31  r31  
111  S102 S103              S108 S109                  
112            r41 S66 S67                      
113                      r42              
114                   S152                 
115            r53                        
116            S153                        
117   S154          r28 r28 r28 r28        r28 r28 r28 r28         
118  S51 S52              S57 S58                  
119             r30 r30 r30 r30        r30 r30 r30 r30         
120             S156 S157          r70 r70 r70 r70         
121             r22 r22 S158 S159        r22 r22 r22 r22         
122             r25 r25 r25 r25        r25 r25 r25 r25         
123             r27 r27 r27 r27        r27 r27 r27 r27         
124                   S160                 
125    S161                                
126                        S163 S164 S165 S166         
127    S167    S168                            
128        S169                            
129 r3      r3  r3 r3 r3                         
130            r9 r9 r9 r9 r9                    
131  S170                                  
132    r8         r8 r8 r8 r8                    
133    S171    S131                            
134    r26         r26 r26 r26 r26                    
135    r20         r20 r20 S90 S91                    
136    r21         r21 r21 S90 S91                    
137    r23         r23 r23 r23 r23                    
138    r24         r24 r24 r24 r24                    
139             S145 S146      S172                
140  r34 r34  r34 r34   r34 r34 r34  r34 r34 r34 r34 r34 r34   r34  r34       r34  r34  r34  
141            S173 S66 S67                      
142                    S174                
143  S82  S175                                
144    S177         S88 S89                      
145  S102 S103              S108 S109                  
146  S102 S103              S108 S109                  
147            r29 r29 r29 r29 r29      r43              
148  S102 S103              S108 S109                  
149  S102 S103              S108 S109                  
150  S102 S103              S108 S109                  
151             S145 S146      S183                
152  S102 S103              S108 S109                  
153  S117 S118              S123 S124                  
154  S82  S187                                
155    S189         S88 S89                      
156  S117 S118              S123 S124                  
157  S117 S118              S123 S124                  
158  S117 S118              S123 S124                  
159  S117 S118              S123 S124                  
160  S102 S103              S108 S109                  
161  S20 S21  S195    S26 S27 S28      S33 S34   S199  S203       S205  S210  S211  
162  S51 S52              S57 S58                  
163  r47 r47          r47 r47 r47 r47 r47 r47                  
164  r48 r48          r48 r48 r48 r48 r48 r48                  
165  r49 r49          r49 r49 r49 r49 r49 r49                  
166  r50 r50          r50 r50 r50 r50 r50 r50                  
167            S214                        
168  S215                                  
169                                   S218 
170    r11    r11                            
171    r9         r9 r9 r9 r9                    
172    r29         r29 r29 r29 r29                    
173  r36 r36  r36 r36   r36 r36 r36  r36 r36 r36 r36 r36 r36   r36  r36       r36  r36  r36  
174                      S219              
175             r8 r8 r8 r8    r8                
176    S220    S131                            
177             r26 r26 r26 r26    r26                
178             r20 r20 S148 S149    r20                
179             r21 r21 S148 S149    r21                
180             r23 r23 r23 r23    r23                
181             r24 r24 r24 r24    r24                
182             S145 S146      S221                
183            r29 r29 r29 r29 r29                    
184             S145 S146      S222                
185            S223                        
186                        S163 S164 S165 S166         
187             r8 r8 r8 r8        r8 r8 r8 r8         
188    S225    S131                            
189             r26 r26 r26 r26        r26 r26 r26 r26         
190             r20 r20 S158 S159        r20 r20 r20 r20         
191             r21 r21 S158 S159        r21 r21 r21 r21         
192             r23 r23 r23 r23        r23 r23 r23 r23         
193             r24 r24 r24 r24        r24 r24 r24 r24         
194             S145 S146      S226                
195  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
196  S228                S229                  
197                               r60     
198            S231 S66 S67                      
199  S71 S21              S33 S73                  
200                               r32     
201            S233                        
202                               r44     
203   S234                                 
204                               r58     
205   S235                                 
206                               S236     
207                               r61     
208                               r62     
209                               r63     
210   S237                                 
211   S238                                 
212    r51         S88 S89                      
213    r46                                
214  r64 r64  r64 r64   r64 r64 r64  r64 r64 r64 r64 r64 r64   r64  r64       r64  r64  r64  
215    r67    S239                            
216    S240                                
217    S241                                
218  S242                                  
219     S243                               
220             r9 r9 r9 r9    r9                
221             r29 r29 r29 r29    r29                
222                      r43              
223  S244                                  
224  S71 S21              S33 S73                  
225             r9 r9 r9 r9        r9 r9 r9 r9         
226             r29 r29 r29 r29        r29 r29 r29 r29         
227      S250                              
228        S251    S252          S253              
229                   S254                 
230                               r33     
231                               r19     
232            S255 S66 S67                      
233                               r40     
234  S113                S114                  
235  S117 S118              S123 S124                  
236  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
237                                 S259   
238                                 S260   
239  S215                                  
240            S262                        
241            S263                        
242    r69                                
243                 S264                   
244                            S266 S267       
245    S268                                
246    r54                                
247    r55                                
248            r51 S66 S67                      
249            r46                        
250                               r18     
251  S228                S229                  
252                               r35     
253  S71 S21              S33 S73                  
254                 S271                   
255                               r31     
256            S272                        
257    S273                                
258  r59 r59  r59 r59   r59 r59 r59  r59 r59 r59 r59 r59 r59   r59  r59       r59  r59  r59  
259    S274    S275                            
260        S276                            
261    r66                                
262  r65 r65  r65 r65   r65 r65 r65  r65 r65 r65 r65 r65 r65   r65  r65       r65  r65  r65  
263  r68 r68  r68 r68   r68 r68 r68  r68 r68 r68 r68 r68 r68   r68  r68       r68  r68  r68  
264      r39  S277                            
265      S278                              
266    r56                                
267    r57                                
268  S20 S21  S22    S26 S27 S28      S33 S34   S35  S40       S42  S46  S47  
269                               r34     
270            S281 S66 S67                      
271                    S282                
272  S117 S118              S123 S124                  
273  S20 S21  S195    S26 S27 S28      S33 S34   S199  S203       S205  S210  S211  
274            S285                        
275  S215                                  
276                                   S218 
277                 S264                   
278            S289                        
279  r52 r52  r52 r52   r52 r52 r52  r52 r52 r52 r52 r52 r52   r52  r52       r52  r52  r52  
280  r45 r45  r45 r45   r45 r45 r45  r45 r45 r45 r45 r45 r45   r45  r45       r45  r45  r45  
281                               r36     
282                      S290              
283            S291                        
284                               S292     
285                               r64     
286    S293                                
287    S294                                
288      r38                              
289  r37 r37  r37 r37   r37 r37 r37  r37 r37 r37 r37 r37 r37   r37  r37       r37  r37  r37  
290     S295                               
291  S244                                  
292  S20 S21  S195    S26 S27 S28      S33 S34   S199  S203       S205  S210  S211  
293            S298                        
294            S299                        
295                 S264                   
296    S301                                
297                               r59     
298                               r65     
299                               r68     
300      S302                              
301  S20 S21  S195    S26 S27 S28      S33 S34   S199  S203       S205  S210  S211  
302            S305                        
303                               r52     
304                               r45     
305                               r37     
Goto Table:
 functionfunction_definefunction_typeblockfunction_define_listtypefunction_callfunction_call_list  Ssentence  E  T  Fdefineid_namenumsset_valueleftloop_expressionfor_set_valuebool_expressionIncorDecforsentence  G op  HInc_expressionDec_expressionif_expressionifsentenceinout_expressionprintf_expressionscanf_expressionexpressionsgetaddr S'
 0 1 2 3   4   6                            
 1  10 3   4                               
 2                                     
 3                                     
 4                                     
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12     14 15                               
13                                     
14                                     
15                                     
16    23  24 25   29 30 31 32 36   37 38 39          41  43 44 45    
17                                     
18      49                               
19                                     
20                                     
21       53    54 55 56                        
22    59  24 25   29 30 31 32 36   37 38 39          41  43 44 45    
23                                     
24               63                      
25                                     
26                                     
27                                     
28                                     
29    64  24 25   29 30 31 32 36   37 38 39          41  43 44 45    
30                                     
31                                     
32                                     
33                                     
34                                     
35       25    72 31 32                        
36                                     
37                                     
38                                     
39                                     
40                                     
41                                     
42                                     
43                                     
44                                     
45                                     
46                                     
47                                     
48    80  24 25   29 30 31 32 36   37 38 39          41  43 44 45    
49                                     
50        84                             
51                                     
52       53    86 55 56                        
53                                     
54                                     
55                                     
56                                     
57                                     
58                                     
59                                     
60                                     
61                                     
62                                     
63                                     
64                                     
65                                     
66       25     98 32                        
67       25     99 32                        
68       25      100                        
69       25      101                        
70       104    105 106 107                        
71                                     
72                                     
73                                     
74                                     
75       25    112 31 32                        
76                 115 38  116                 
77       119    120 121 122        125   126             
78                                     
79                                     
80                                     
81                                     
82                                     
83                                     
84                                     
85        133                             
86                                     
87                                     
88       53     135 56                        
89       53     136 56                        
90       53      137                        
91       53      138                        
92       104    139 106 107                        
93                                     
94               140                      
95                                     
96       25    141 31 32                        
97                                     
98                                     
99                                     
100                                     
101                                     
102                                     
103       53    144 55 56                        
104                                     
105                                     
106                                     
107                                     
108                                     
109                                     
110                                     
111       104    151 106 107                        
112                                     
113                                     
114                                     
115                                     
116                                     
117                                     
118       53    155 55 56                        
119                                     
120                                     
121                                     
122                                     
123                                     
124                                     
125                                     
126                         162            
127                                     
128                                     
129                                     
130                                     
131                                     
132                                     
133                                     
134                                     
135                                     
136                                     
137                                     
138                                     
139                                     
140                                     
141                                     
142                                     
143        176                             
144                                     
145       104     178 107                        
146       104     179 107                        
147                                     
148       104      180                        
149       104      181                        
150       104    182 106 107                        
151                                     
152       104    184 106 107                        
153       119    120 121 122        185   186             
154        188                             
155                                     
156       119     190 122                        
157       119     191 122                        
158       119      192                        
159       119      193                        
160       104    194 106 107                        
161      196 25   197 198 31 32 200   201 38 202          204 206 207 208 209    
162       53    212 55 56             213           
163                                     
164                                     
165                                     
166                                     
167                                     
168                                  216   
169                                   217  
170                                     
171                                     
172                                     
173                                     
174                                     
175                                     
176                                     
177                                     
178                                     
179                                     
180                                     
181                                     
182                                     
183                                     
184                                     
185                                     
186                         224            
187                                     
188                                     
189                                     
190                                     
191                                     
192                                     
193                                     
194                                     
195    227  24 25   29 30 31 32 36   37 38 39          41  43 44 45    
196               230                      
197                                     
198                                     
199       25    232 31 32                        
200                                     
201                                     
202                                     
203                                     
204                                     
205                                     
206                                     
207                                     
208                                     
209                                     
210                                     
211                                     
212                                     
213                                     
214                                     
215                                     
216                                     
217                                     
218                                     
219                                     
220                                     
221                                     
222                                     
223                      245     246 247         
224       25    248 31 32             249           
225                                     
226                                     
227                                     
228                                     
229                                     
230                                     
231                                     
232                                     
233                                     
234                 115 38  256                 
235       119    120 121 122        257   126             
236      24 25   258 30 31 32 36   37 38 39          41  43 44 45    
237                                     
238                                     
239                                  261   
240                                     
241                                     
242                                     
243                265                     
244                                     
245                                     
246                                     
247                                     
248                                     
249                                     
250                                     
251               269                      
252                                     
253       25    270 31 32                        
254                                     
255                                     
256                                     
257                                     
258                                     
259                                     
260                                     
261                                     
262                                     
263                                     
264                                     
265                                     
266                                     
267                                     
268      24 25   279 30 31 32 36   37 38 39    280      41  43 44 45    
269                                     
270                                     
271                                     
272       119    120 121 122        283   186             
273      196 25   197 198 31 32 200   201 38 202          204 284 207 208 209    
274                                     
275                                  286   
276                                   287  
277                288                     
278                                     
279                                     
280                                     
281                                     
282                                     
283                                     
284                                     
285                                     
286                                     
287                                     
288                                     
289                                     
290                                     
291                      296     246 247         
292      196 25   297 198 31 32 200   201 38 202          204  207 208 209    
293                                     
294                                     
295                300                     
296                                     
297                                     
298                                     
299                                     
300                                     
301      196 25   303 198 31 32 200   201 38 202    304      204  207 208 209    
302                                     
303                                     
304                                     
305                                     
(INT,)
(ID, a)
(LPAREN,)
(RPAREN,)
(LBBRACKET,)
(RETURN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
(INT,)
(ID, main)
(LPAREN,)
(RPAREN,)
(LBBRACKET,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 76)
(COMMA,)
(NUM, 82)
(COMMA,)
(NUM, 90)
(COMMA,)
(NUM, 86)
(COMMA,)
(NUM, 79)
(COMMA,)
(NUM, 62)
(RBBRACKET,)
(SEMI,)
(INT,)
(ARRAY,)
(LMBRACKET,)
(NUM, 6)
(RMBRACKET,)
(ASSIGN,)
(LBBRACKET,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 1)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 2)
(COMMA,)
(NUM, 3)
(RBBRACKET,)
(SEMI,)
(INT,)
(ID, stu_number)
(SEMI,)
(DOUBLE,)
(ID, mean)
(COMMA,)
(ID, sum)
(SEMI,)
(INT,)
(ID, temp)
(SEMI,)
(INT,)
(ID, i)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, please input your student number:)
(RPAREN,)
(SEMI,)
(SCANF,)
(LPAREN,)
(STR, %d)
(COMMA,)
(ADDR,)
(ID, stu_number)
(RPAREN,)
(SEMI,)
(ID, sum)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, temp)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(FOR,)
(LPAREN,)
(ID, i)
(ASSIGN,)
(NUM, 0)
(SEMI,)
(ID, i)
(LT,)
(NUM, 6)
(SEMI,)
(ID, i)
(PLUSPLUS,)
(RPAREN,)
(LBBRACKET,)
(ID, sum)
(ASSIGN,)
(ID, sum)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(MULTI,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(ID, temp)
(ASSIGN,)
(ID, temp)
(PLUS,)
(ARRAY,)
(LMBRACKET,)
(ID, i)
(RMBRACKET,)
(SEMI,)
(RBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, sum)
(RDIV,)
(ID, temp)
(SEMI,)
(IF,)
(LPAREN,)
(ID, mean)
(GE,)
(NUM, 60)
(RPAREN,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(ID, mean)
(MINUS,)
(NUM, 60)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f higher than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(ELSE,)
(LBBRACKET,)
(ID, mean)
(ASSIGN,)
(NUM, 60)
(MINUS,)
(ID, mean)
(SEMI,)
(PRINTF,)
(LPAREN,)
(STR, the score of student number %d is %f lower than 60.\n)
(COMMA,)
(ID, stu_number)
(COMMA,)
(ID, mean)
(RPAREN,)
(SEMI,)
(RBBRACKET,)
(RETURN,)
(NUM, 0)
(SEMI,)
(RBBRACKET,)
0  8
移入：7  int
7  1
规约:type->int
出栈!
入栈：4type
4  1
规约:function_type->type
出栈!
入栈：3function_type
3  1
移入：11  id
11  2
移入：12  (
12  3
移入：13  )
13  4
移入：16  {
16  20
移入：35  return
35  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：72E
72  11
移入：110  ;
110  5
规约:sentence->returnE;
出栈!
出栈!
出栈!
入栈：29sentence
29  5
规约:block->sentence
出栈!
入栈：23block
23  5
移入：60  }
60  8
规约:function_define->function_typeid(){block}
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：2function_define
2  8
规约:function->function_define
出栈!
入栈：1function
1  8
移入：7  int
7  1
规约:type->int
出栈!
入栈：4type
4  1
规约:function_type->type
出栈!
入栈：3function_type
3  1
移入：11  id
11  2
移入：12  (
12  3
移入：13  )
13  4
移入：16  {
16  8
移入：26  int
26  17
规约:type->int
出栈!
入栈：24type
24  17
移入：62  array
62  18
移入：97  [
97  16
移入：142  num
142  19
移入：174  ]
174  21
移入：219  =
219  4
移入：243  {
243  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  5
规约:nums->num
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：265nums
265  5
移入：278  }
278  11
移入：289  ;
289  8
规约:id_name->array[num]={nums};
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：63id_name
63  8
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  8
规约:sentence->define
出栈!
入栈：29sentence
29  8
移入：26  int
26  17
规约:type->int
出栈!
入栈：24type
24  17
移入：62  array
62  18
移入：97  [
97  16
移入：142  num
142  19
移入：174  ]
174  21
移入：219  =
219  4
移入：243  {
243  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  7
移入：277  ,
277  16
移入：264  num
264  5
规约:nums->num
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：288nums
288  5
规约:nums->num,nums
出栈!
出栈!
出栈!
入栈：265nums
265  5
移入：278  }
278  11
移入：289  ;
289  8
规约:id_name->array[num]={nums};
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：63id_name
63  8
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  8
规约:sentence->define
出栈!
入栈：29sentence
29  8
移入：26  int
26  1
规约:type->int
出栈!
入栈：24type
24  1
移入：61  id
61  11
移入：95  ;
95  9
规约:id_name->id;
出栈!
出栈!
入栈：63id_name
63  9
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  9
规约:sentence->define
出栈!
入栈：29sentence
29  9
移入：27  double
27  1
规约:type->double
出栈!
入栈：24type
24  1
移入：61  id
61  7
移入：94  ,
94  1
移入：61  id
61  11
移入：95  ;
95  8
规约:id_name->id;
出栈!
出栈!
入栈：140id_name
140  8
规约:id_name->id,id_name
出栈!
出栈!
出栈!
入栈：63id_name
63  8
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  8
规约:sentence->define
出栈!
入栈：29sentence
29  8
移入：26  int
26  1
规约:type->int
出栈!
入栈：24type
24  1
移入：61  id
61  11
移入：95  ;
95  8
规约:id_name->id;
出栈!
出栈!
入栈：63id_name
63  8
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  8
规约:sentence->define
出栈!
入栈：29sentence
29  8
移入：26  int
26  1
规约:type->int
出栈!
入栈：24type
24  1
移入：61  id
61  11
移入：95  ;
95  31
规约:id_name->id;
出栈!
出栈!
入栈：63id_name
63  31
规约:define->typeid_name
出栈!
出栈!
入栈：36define
36  31
规约:sentence->define
出栈!
入栈：29sentence
29  31
移入：46  printf
46  2
移入：78  (
78  32
移入：127  string
127  3
移入：167  )
167  11
移入：214  ;
214  33
规约:printf_expression->printf(string);
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：44printf_expression
44  33
规约:inout_expression->printf_expression
出栈!
入栈：43inout_expression
43  33
规约:sentence->inout_expression
出栈!
入栈：29sentence
29  33
移入：47  scanf
47  2
移入：79  (
79  32
移入：128  string
128  7
移入：169  ,
169  34
移入：218  &
218  1
移入：242  id
242  3
规约:getaddr->&id
出栈!
出栈!
入栈：217getaddr
217  3
移入：241  )
241  11
移入：263  ;
263  1
规约:scanf_expression->scanf(string,getaddr);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：45scanf_expression
45  1
规约:inout_expression->scanf_expression
出栈!
入栈：43inout_expression
43  1
规约:sentence->inout_expression
出栈!
入栈：29sentence
29  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  1
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  22
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  22
移入：40  for
40  2
移入：76  (
76  1
移入：113  id
113  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：115set_value
115  11
规约:for_set_value->set_value
出栈!
入栈：116for_set_value
116  11
移入：153  ;
153  1
移入：117  id
117  25
规约:F->id
出栈!
入栈：122F
122  25
规约:T->F
出栈!
入栈：121T
121  25
规约:E->T
出栈!
入栈：120E
120  25
规约:G->E
出栈!
入栈：186G
186  25
移入：165  <
165  16
规约:op-><
出栈!
入栈：224op
224  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：248E
248  11
规约:H->E
出栈!
入栈：249H
249  11
规约:bool_expression->GopH
出栈!
出栈!
出栈!
入栈：185bool_expression
185  11
移入：223  ;
223  1
移入：244  id
244  27
移入：266  ++
266  3
规约:Inc_expression->id++
出栈!
出栈!
入栈：246Inc_expression
246  3
规约:IncorDec->Inc_expression
出栈!
入栈：245IncorDec
245  3
移入：268  )
268  4
移入：22  {
22  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  1
移入：71  id
71  12
规约:F->id
出栈!
入栈：32F
32  12
规约:T->F
出栈!
入栈：31T
31  12
规约:E->T
出栈!
入栈：112E
112  12
移入：66  +
66  17
移入：73  array
73  18
移入：111  [
111  1
移入：102  id
102  19
规约:F->id
出栈!
入栈：107F
107  19
规约:T->F
出栈!
入栈：106T
106  19
规约:E->T
出栈!
入栈：151E
151  19
移入：183  ]
183  14
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：32F
32  14
规约:T->F
出栈!
入栈：98T
98  14
移入：68  *
68  17
移入：73  array
73  18
移入：111  [
111  1
移入：102  id
102  19
规约:F->id
出栈!
入栈：107F
107  19
规约:T->F
出栈!
入栈：106T
106  19
规约:E->T
出栈!
入栈：151E
151  19
移入：183  ]
183  11
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：100F
100  11
规约:T->T*F
出栈!
出栈!
出栈!
入栈：98T
98  11
规约:E->E+T
出栈!
出栈!
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  1
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  1
移入：71  id
71  12
规约:F->id
出栈!
入栈：32F
32  12
规约:T->F
出栈!
入栈：31T
31  12
规约:E->T
出栈!
入栈：112E
112  12
移入：66  +
66  17
移入：73  array
73  18
移入：111  [
111  1
移入：102  id
102  19
规约:F->id
出栈!
入栈：107F
107  19
规约:T->F
出栈!
入栈：106T
106  19
规约:E->T
出栈!
入栈：151E
151  19
移入：183  ]
183  11
规约:F->array[E]
出栈!
出栈!
出栈!
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：98T
98  11
规约:E->E+T
出栈!
出栈!
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  5
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  5
规约:block->sentence
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：59block
59  5
移入：93  }
93  1
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：279sentence
279  1
规约:forsentence->sentence
出栈!
入栈：280forsentence
280  1
规约:loop_expression->for(for_set_value;bool_expression;IncorDec)forsentence
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：39loop_expression
39  1
规约:sentence->loop_expression
出栈!
入栈：29sentence
29  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  1
移入：71  id
71  15
规约:F->id
出栈!
入栈：32F
32  15
规约:T->F
出栈!
入栈：31T
31  15
移入：69  /
69  1
移入：71  id
71  11
规约:F->id
出栈!
入栈：101F
101  11
规约:T->T/F
出栈!
出栈!
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  29
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  29
移入：42  if
42  2
移入：77  (
77  1
移入：117  id
117  23
规约:F->id
出栈!
入栈：122F
122  23
规约:T->F
出栈!
入栈：121T
121  23
规约:E->T
出栈!
入栈：120E
120  23
规约:G->E
出栈!
入栈：126G
126  23
移入：163  >=
163  16
规约:op->>=
出栈!
入栈：162op
162  16
移入：57  num
57  3
规约:F->num
出栈!
入栈：56F
56  3
规约:T->F
出栈!
入栈：55T
55  3
规约:E->T
出栈!
入栈：212E
212  3
规约:H->E
出栈!
入栈：213H
213  3
规约:bool_expression->GopH
出栈!
出栈!
出栈!
入栈：125bool_expression
125  3
移入：161  )
161  4
移入：195  {
195  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  1
移入：71  id
71  13
规约:F->id
出栈!
入栈：32F
32  13
规约:T->F
出栈!
入栈：31T
31  13
规约:E->T
出栈!
入栈：112E
112  13
移入：67  -
67  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：99T
99  11
规约:E->E-T
出栈!
出栈!
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  31
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  31
移入：46  printf
46  2
移入：78  (
78  32
移入：127  string
127  7
移入：168  ,
168  1
移入：215  id
215  7
移入：239  ,
239  1
移入：215  id
215  3
规约:expressions->id
出栈!
入栈：261expressions
261  3
规约:expressions->id,expressions
出栈!
出栈!
出栈!
入栈：216expressions
216  3
移入：240  )
240  11
移入：262  ;
262  5
规约:printf_expression->printf(string,expressions);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：44printf_expression
44  5
规约:inout_expression->printf_expression
出栈!
入栈：43inout_expression
43  5
规约:sentence->inout_expression
出栈!
入栈：29sentence
29  5
规约:block->sentence
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：227block
227  5
移入：250  }
250  30
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：197sentence
197  30
规约:ifsentence->sentence
出栈!
入栈：206ifsentence
206  30
移入：236  else
236  4
移入：22  {
22  1
移入：20  id
20  21
规约:left->id
出栈!
入栈：38left
38  21
移入：75  =
75  16
移入：33  num
33  13
规约:F->num
出栈!
入栈：32F
32  13
规约:T->F
出栈!
入栈：31T
31  13
规约:E->T
出栈!
入栈：112E
112  13
移入：67  -
67  1
移入：71  id
71  11
规约:F->id
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：99T
99  11
规约:E->E-T
出栈!
出栈!
出栈!
入栈：112E
112  11
规约:set_value->left=E
出栈!
出栈!
出栈!
入栈：37set_value
37  11
移入：74  ;
74  31
规约:sentence->set_value;
出栈!
出栈!
入栈：29sentence
29  31
移入：46  printf
46  2
移入：78  (
78  32
移入：127  string
127  7
移入：168  ,
168  1
移入：215  id
215  7
移入：239  ,
239  1
移入：215  id
215  3
规约:expressions->id
出栈!
入栈：261expressions
261  3
规约:expressions->id,expressions
出栈!
出栈!
出栈!
入栈：216expressions
216  3
移入：240  )
240  11
移入：262  ;
262  5
规约:printf_expression->printf(string,expressions);
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：44printf_expression
44  5
规约:inout_expression->printf_expression
出栈!
入栈：43inout_expression
43  5
规约:sentence->inout_expression
出栈!
入栈：29sentence
29  5
规约:block->sentence
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：59block
59  5
移入：93  }
93  20
规约:sentence->{block}
出栈!
出栈!
出栈!
入栈：258sentence
258  20
规约:if_expression->if(bool_expression)ifsentenceelsesentence
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：41if_expression
41  20
规约:sentence->if_expression
出栈!
入栈：29sentence
29  20
移入：35  return
35  16
移入：33  num
33  11
规约:F->num
出栈!
入栈：32F
32  11
规约:T->F
出栈!
入栈：31T
31  11
规约:E->T
出栈!
入栈：72E
72  11
移入：110  ;
110  5
规约:sentence->returnE;
出栈!
出栈!
出栈!
入栈：29sentence
29  5
规约:block->sentence
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：64block
64  5
规约:block->sentenceblock
出栈!
出栈!
入栈：23block
23  5
移入：60  }
60  0
规约:function_define->function_typeid(){block}
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
出栈!
入栈：10function_define
10  0
规约:function->functionfunction_define
出栈!
出栈!
入栈：1function
1  0
规约:S->function
出栈!
入栈：6S
6  0
语法分析完成！
